I0516 16:12:32.326946      17 e2e.go:129] Starting e2e run "dcf601f8-d482-4a7b-8938-87e197cd3268" on Ginkgo node 1
{"msg":"Test Suite starting","total":356,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1652717552 - Will randomize all specs
Will run 356 of 6965 specs

May 16 16:12:34.283: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 16:12:34.284: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
May 16 16:12:34.309: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
May 16 16:12:34.334: INFO: 4 / 4 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
May 16 16:12:34.334: INFO: expected 4 pod replicas in namespace 'kube-system', 4 are Running and Ready.
May 16 16:12:34.334: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
May 16 16:12:34.338: INFO: e2e test version: v1.24.0
May 16 16:12:34.339: INFO: kube-apiserver version: v1.24.0
May 16 16:12:34.339: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 16:12:34.345: INFO: Cluster IP family: ipv4
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:12:34.345: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename replication-controller
W0516 16:12:34.407712      17 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
May 16 16:12:34.407: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
May 16 16:12:34.424: INFO: PSP annotation exists on dry run pod: "privileged"; assuming PodSecurityPolicy is enabled
W0516 16:12:34.429319      17 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0516 16:12:34.434923      17 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
May 16 16:12:34.443: INFO: Found ClusterRoles; assuming RBAC is enabled.
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-6017
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
May 16 16:12:40.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-6017" for this suite.

• [SLOW TEST:6.111 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":356,"completed":1,"skipped":13,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:12:40.457: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4115
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 16:12:40.610: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1360825f-f9ba-4a3c-9340-fffade67001f" in namespace "downward-api-4115" to be "Succeeded or Failed"
May 16 16:12:40.614: INFO: Pod "downwardapi-volume-1360825f-f9ba-4a3c-9340-fffade67001f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.760482ms
May 16 16:12:42.623: INFO: Pod "downwardapi-volume-1360825f-f9ba-4a3c-9340-fffade67001f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012541649s
May 16 16:12:44.633: INFO: Pod "downwardapi-volume-1360825f-f9ba-4a3c-9340-fffade67001f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.022244715s
May 16 16:12:46.639: INFO: Pod "downwardapi-volume-1360825f-f9ba-4a3c-9340-fffade67001f": Phase="Pending", Reason="", readiness=false. Elapsed: 6.028844813s
May 16 16:12:48.649: INFO: Pod "downwardapi-volume-1360825f-f9ba-4a3c-9340-fffade67001f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.038086076s
STEP: Saw pod success
May 16 16:12:48.649: INFO: Pod "downwardapi-volume-1360825f-f9ba-4a3c-9340-fffade67001f" satisfied condition "Succeeded or Failed"
May 16 16:12:48.655: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-1360825f-f9ba-4a3c-9340-fffade67001f container client-container: <nil>
STEP: delete the pod
May 16 16:12:48.693: INFO: Waiting for pod downwardapi-volume-1360825f-f9ba-4a3c-9340-fffade67001f to disappear
May 16 16:12:48.697: INFO: Pod downwardapi-volume-1360825f-f9ba-4a3c-9340-fffade67001f no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
May 16 16:12:48.697: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4115" for this suite.

• [SLOW TEST:8.253 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":2,"skipped":42,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:12:48.711: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-4793
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:12:48.852: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
May 16 16:12:50.908: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
May 16 16:12:51.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-4793" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":356,"completed":3,"skipped":70,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:12:51.937: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename tables
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in tables-5198
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:188
May 16 16:12:52.098: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-5198" for this suite.
•{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":356,"completed":4,"skipped":78,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:12:52.121: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7471
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-e7a0048f-a517-4027-ac19-d3fa0513eeb1
STEP: Creating secret with name s-test-opt-upd-a07d8d74-eca4-4534-bd14-fcf911aed43a
STEP: Creating the pod
May 16 16:12:52.295: INFO: The status of Pod pod-secrets-05e7ab7a-75e6-48ce-8021-46e961d4750f is Pending, waiting for it to be Running (with Ready = true)
May 16 16:12:54.306: INFO: The status of Pod pod-secrets-05e7ab7a-75e6-48ce-8021-46e961d4750f is Pending, waiting for it to be Running (with Ready = true)
May 16 16:12:56.300: INFO: The status of Pod pod-secrets-05e7ab7a-75e6-48ce-8021-46e961d4750f is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-e7a0048f-a517-4027-ac19-d3fa0513eeb1
STEP: Updating secret s-test-opt-upd-a07d8d74-eca4-4534-bd14-fcf911aed43a
STEP: Creating secret with name s-test-opt-create-947eb4a9-ec2f-4b39-8bdf-b78f8bda1444
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
May 16 16:14:16.811: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7471" for this suite.

• [SLOW TEST:84.710 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":5,"skipped":89,"failed":0}
SS
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:14:16.831: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-4391
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
May 16 16:14:21.522: INFO: Successfully updated pod "adopt-release-krft9"
STEP: Checking that the Job readopts the Pod
May 16 16:14:21.522: INFO: Waiting up to 15m0s for pod "adopt-release-krft9" in namespace "job-4391" to be "adopted"
May 16 16:14:21.527: INFO: Pod "adopt-release-krft9": Phase="Running", Reason="", readiness=true. Elapsed: 5.248046ms
May 16 16:14:23.536: INFO: Pod "adopt-release-krft9": Phase="Running", Reason="", readiness=true. Elapsed: 2.014231239s
May 16 16:14:23.536: INFO: Pod "adopt-release-krft9" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
May 16 16:14:24.057: INFO: Successfully updated pod "adopt-release-krft9"
STEP: Checking that the Job releases the Pod
May 16 16:14:24.058: INFO: Waiting up to 15m0s for pod "adopt-release-krft9" in namespace "job-4391" to be "released"
May 16 16:14:24.064: INFO: Pod "adopt-release-krft9": Phase="Running", Reason="", readiness=true. Elapsed: 6.880115ms
May 16 16:14:26.076: INFO: Pod "adopt-release-krft9": Phase="Running", Reason="", readiness=true. Elapsed: 2.018019341s
May 16 16:14:26.076: INFO: Pod "adopt-release-krft9" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
May 16 16:14:26.076: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-4391" for this suite.

• [SLOW TEST:9.257 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":356,"completed":6,"skipped":91,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:14:26.089: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-4163
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
May 16 16:14:26.308: INFO: Pod name sample-pod: Found 0 pods out of 1
May 16 16:14:31.315: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
May 16 16:14:31.321: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
May 16 16:14:31.334: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
May 16 16:14:31.337: INFO: Observed &ReplicaSet event: ADDED
May 16 16:14:31.337: INFO: Observed &ReplicaSet event: MODIFIED
May 16 16:14:31.337: INFO: Observed &ReplicaSet event: MODIFIED
May 16 16:14:31.337: INFO: Observed &ReplicaSet event: MODIFIED
May 16 16:14:31.337: INFO: Found replicaset test-rs in namespace replicaset-4163 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
May 16 16:14:31.337: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
May 16 16:14:31.338: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
May 16 16:14:31.346: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
May 16 16:14:31.348: INFO: Observed &ReplicaSet event: ADDED
May 16 16:14:31.348: INFO: Observed &ReplicaSet event: MODIFIED
May 16 16:14:31.349: INFO: Observed &ReplicaSet event: MODIFIED
May 16 16:14:31.349: INFO: Observed &ReplicaSet event: MODIFIED
May 16 16:14:31.349: INFO: Observed replicaset test-rs in namespace replicaset-4163 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
May 16 16:14:31.349: INFO: Observed &ReplicaSet event: MODIFIED
May 16 16:14:31.349: INFO: Found replicaset test-rs in namespace replicaset-4163 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
May 16 16:14:31.349: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
May 16 16:14:31.349: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-4163" for this suite.

• [SLOW TEST:5.272 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":356,"completed":7,"skipped":120,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:14:31.362: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8384
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-a6ff590b-3bfa-457b-a435-a248fe7f6102
STEP: Creating a pod to test consume secrets
May 16 16:14:31.524: INFO: Waiting up to 5m0s for pod "pod-secrets-fe34ec3c-0ae9-424c-bd4d-eeda921a93c5" in namespace "secrets-8384" to be "Succeeded or Failed"
May 16 16:14:31.532: INFO: Pod "pod-secrets-fe34ec3c-0ae9-424c-bd4d-eeda921a93c5": Phase="Pending", Reason="", readiness=false. Elapsed: 7.251013ms
May 16 16:14:33.541: INFO: Pod "pod-secrets-fe34ec3c-0ae9-424c-bd4d-eeda921a93c5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016605951s
May 16 16:14:35.552: INFO: Pod "pod-secrets-fe34ec3c-0ae9-424c-bd4d-eeda921a93c5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.02782516s
May 16 16:14:37.561: INFO: Pod "pod-secrets-fe34ec3c-0ae9-424c-bd4d-eeda921a93c5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.036643873s
May 16 16:14:39.572: INFO: Pod "pod-secrets-fe34ec3c-0ae9-424c-bd4d-eeda921a93c5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.047279935s
May 16 16:14:41.579: INFO: Pod "pod-secrets-fe34ec3c-0ae9-424c-bd4d-eeda921a93c5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.054740753s
STEP: Saw pod success
May 16 16:14:41.579: INFO: Pod "pod-secrets-fe34ec3c-0ae9-424c-bd4d-eeda921a93c5" satisfied condition "Succeeded or Failed"
May 16 16:14:41.583: INFO: Trying to get logs from node ip-172-31-36-36 pod pod-secrets-fe34ec3c-0ae9-424c-bd4d-eeda921a93c5 container secret-volume-test: <nil>
STEP: delete the pod
May 16 16:14:41.626: INFO: Waiting for pod pod-secrets-fe34ec3c-0ae9-424c-bd4d-eeda921a93c5 to disappear
May 16 16:14:41.637: INFO: Pod pod-secrets-fe34ec3c-0ae9-424c-bd4d-eeda921a93c5 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
May 16 16:14:41.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8384" for this suite.

• [SLOW TEST:10.290 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":8,"skipped":129,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:14:41.652: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6796
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
May 16 16:14:41.807: INFO: Waiting up to 5m0s for pod "pod-19ffb3a7-9679-42f4-940f-dc40f107c911" in namespace "emptydir-6796" to be "Succeeded or Failed"
May 16 16:14:41.815: INFO: Pod "pod-19ffb3a7-9679-42f4-940f-dc40f107c911": Phase="Pending", Reason="", readiness=false. Elapsed: 7.760452ms
May 16 16:14:43.824: INFO: Pod "pod-19ffb3a7-9679-42f4-940f-dc40f107c911": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016592328s
May 16 16:14:45.833: INFO: Pod "pod-19ffb3a7-9679-42f4-940f-dc40f107c911": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026092716s
STEP: Saw pod success
May 16 16:14:45.834: INFO: Pod "pod-19ffb3a7-9679-42f4-940f-dc40f107c911" satisfied condition "Succeeded or Failed"
May 16 16:14:45.838: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-19ffb3a7-9679-42f4-940f-dc40f107c911 container test-container: <nil>
STEP: delete the pod
May 16 16:14:45.874: INFO: Waiting for pod pod-19ffb3a7-9679-42f4-940f-dc40f107c911 to disappear
May 16 16:14:45.877: INFO: Pod pod-19ffb3a7-9679-42f4-940f-dc40f107c911 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 16:14:45.877: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6796" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":9,"skipped":151,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:14:45.892: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2159
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 16:14:46.060: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ec74c34c-f799-4470-9ac0-e80bab89437b" in namespace "downward-api-2159" to be "Succeeded or Failed"
May 16 16:14:46.065: INFO: Pod "downwardapi-volume-ec74c34c-f799-4470-9ac0-e80bab89437b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.644797ms
May 16 16:14:48.076: INFO: Pod "downwardapi-volume-ec74c34c-f799-4470-9ac0-e80bab89437b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015806155s
May 16 16:14:50.088: INFO: Pod "downwardapi-volume-ec74c34c-f799-4470-9ac0-e80bab89437b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027459801s
STEP: Saw pod success
May 16 16:14:50.088: INFO: Pod "downwardapi-volume-ec74c34c-f799-4470-9ac0-e80bab89437b" satisfied condition "Succeeded or Failed"
May 16 16:14:50.092: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-ec74c34c-f799-4470-9ac0-e80bab89437b container client-container: <nil>
STEP: delete the pod
May 16 16:14:50.118: INFO: Waiting for pod downwardapi-volume-ec74c34c-f799-4470-9ac0-e80bab89437b to disappear
May 16 16:14:50.123: INFO: Pod downwardapi-volume-ec74c34c-f799-4470-9ac0-e80bab89437b no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
May 16 16:14:50.123: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2159" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":10,"skipped":213,"failed":0}
SSS
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:14:50.139: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-3459
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:58
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
May 16 16:15:50.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-3459" for this suite.

• [SLOW TEST:60.194 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":356,"completed":11,"skipped":216,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:15:50.334: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-6949
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption is created
May 16 16:15:50.494: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
May 16 16:15:52.504: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
May 16 16:15:53.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-6949" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":356,"completed":12,"skipped":239,"failed":0}
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:15:53.550: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-804
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
May 16 16:15:56.736: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
May 16 16:15:56.755: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-804" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":13,"skipped":240,"failed":0}
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:15:56.770: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-3106
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
May 16 16:16:00.979: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
May 16 16:16:01.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-3106" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":14,"skipped":244,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:16:01.025: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9446
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 16:16:01.184: INFO: Waiting up to 5m0s for pod "downwardapi-volume-cbf4af6a-1e04-4abc-8eb3-9038ab69c587" in namespace "projected-9446" to be "Succeeded or Failed"
May 16 16:16:01.189: INFO: Pod "downwardapi-volume-cbf4af6a-1e04-4abc-8eb3-9038ab69c587": Phase="Pending", Reason="", readiness=false. Elapsed: 5.849618ms
May 16 16:16:03.198: INFO: Pod "downwardapi-volume-cbf4af6a-1e04-4abc-8eb3-9038ab69c587": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014048311s
May 16 16:16:05.209: INFO: Pod "downwardapi-volume-cbf4af6a-1e04-4abc-8eb3-9038ab69c587": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025032484s
STEP: Saw pod success
May 16 16:16:05.209: INFO: Pod "downwardapi-volume-cbf4af6a-1e04-4abc-8eb3-9038ab69c587" satisfied condition "Succeeded or Failed"
May 16 16:16:05.214: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-cbf4af6a-1e04-4abc-8eb3-9038ab69c587 container client-container: <nil>
STEP: delete the pod
May 16 16:16:05.238: INFO: Waiting for pod downwardapi-volume-cbf4af6a-1e04-4abc-8eb3-9038ab69c587 to disappear
May 16 16:16:05.244: INFO: Pod downwardapi-volume-cbf4af6a-1e04-4abc-8eb3-9038ab69c587 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
May 16 16:16:05.244: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9446" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":356,"completed":15,"skipped":267,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:16:05.265: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-7749
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
May 16 16:16:05.427: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
May 16 16:16:05.439: INFO: Waiting for terminating namespaces to be deleted...
May 16 16:16:05.444: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-10-138 before test
May 16 16:16:05.451: INFO: default-http-backend-kubernetes-worker-6c59687bf6-bxc6r from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 16:16:05.451: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
May 16 16:16:05.451: INFO: nginx-ingress-controller-kubernetes-worker-4x6kn from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 16:16:05.451: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
May 16 16:16:05.451: INFO: coredns-86c98bfcdb-xnh2b from kube-system started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 16:16:05.451: INFO: 	Container coredns ready: true, restart count 0
May 16 16:16:05.451: INFO: kube-state-metrics-5cdbfd47b4-dbz9m from kube-system started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 16:16:05.451: INFO: 	Container kube-state-metrics ready: true, restart count 0
May 16 16:16:05.451: INFO: metrics-server-v0.5.2-6bfd958b56-t6s8k from kube-system started at 2022-05-16 15:58:42 +0000 UTC (2 container statuses recorded)
May 16 16:16:05.451: INFO: 	Container metrics-server ready: true, restart count 0
May 16 16:16:05.451: INFO: 	Container metrics-server-nanny ready: true, restart count 0
May 16 16:16:05.451: INFO: dashboard-metrics-scraper-8669b59d4f-z7nkc from kubernetes-dashboard started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 16:16:05.451: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
May 16 16:16:05.451: INFO: kubernetes-dashboard-585fc6bc87-gx2d4 from kubernetes-dashboard started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 16:16:05.451: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
May 16 16:16:05.451: INFO: sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-tklm5 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 16:16:05.451: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 16:16:05.452: INFO: 	Container systemd-logs ready: true, restart count 0
May 16 16:16:05.452: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-36-36 before test
May 16 16:16:05.458: INFO: nginx-ingress-controller-kubernetes-worker-pbnpt from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:44 +0000 UTC (1 container statuses recorded)
May 16 16:16:05.458: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
May 16 16:16:05.458: INFO: calico-kube-controllers-5976989dd9-ckg7k from kube-system started at 2022-05-16 15:58:46 +0000 UTC (1 container statuses recorded)
May 16 16:16:05.458: INFO: 	Container calico-kube-controllers ready: true, restart count 0
May 16 16:16:05.458: INFO: sonobuoy-e2e-job-93ccb66985024e88 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 16:16:05.458: INFO: 	Container e2e ready: true, restart count 0
May 16 16:16:05.458: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 16:16:05.458: INFO: sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-sj7x5 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 16:16:05.458: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 16:16:05.458: INFO: 	Container systemd-logs ready: true, restart count 0
May 16 16:16:05.458: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-76-3 before test
May 16 16:16:05.466: INFO: nginx-ingress-controller-kubernetes-worker-fnf58 from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:52 +0000 UTC (1 container statuses recorded)
May 16 16:16:05.466: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
May 16 16:16:05.466: INFO: sonobuoy from sonobuoy started at 2022-05-16 16:12:03 +0000 UTC (1 container statuses recorded)
May 16 16:16:05.466: INFO: 	Container kube-sonobuoy ready: true, restart count 0
May 16 16:16:05.466: INFO: sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-zvgk8 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 16:16:05.466: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 16:16:05.466: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-0a21dc8d-6323-41e6-934e-303f1219e961 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.76.3 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-0a21dc8d-6323-41e6-934e-303f1219e961 off the node ip-172-31-76-3
STEP: verifying the node doesn't have the label kubernetes.io/e2e-0a21dc8d-6323-41e6-934e-303f1219e961
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
May 16 16:21:11.622: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-7749" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

• [SLOW TEST:306.378 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":356,"completed":16,"skipped":297,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:21:11.643: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-5462
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:21:11.814: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
May 16 16:21:14.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-5462 --namespace=crd-publish-openapi-5462 create -f -'
May 16 16:21:15.338: INFO: stderr: ""
May 16 16:21:15.338: INFO: stdout: "e2e-test-crd-publish-openapi-6916-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
May 16 16:21:15.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-5462 --namespace=crd-publish-openapi-5462 delete e2e-test-crd-publish-openapi-6916-crds test-cr'
May 16 16:21:15.409: INFO: stderr: ""
May 16 16:21:15.409: INFO: stdout: "e2e-test-crd-publish-openapi-6916-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
May 16 16:21:15.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-5462 --namespace=crd-publish-openapi-5462 apply -f -'
May 16 16:21:15.697: INFO: stderr: ""
May 16 16:21:15.697: INFO: stdout: "e2e-test-crd-publish-openapi-6916-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
May 16 16:21:15.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-5462 --namespace=crd-publish-openapi-5462 delete e2e-test-crd-publish-openapi-6916-crds test-cr'
May 16 16:21:15.768: INFO: stderr: ""
May 16 16:21:15.768: INFO: stdout: "e2e-test-crd-publish-openapi-6916-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
May 16 16:21:15.769: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-5462 explain e2e-test-crd-publish-openapi-6916-crds'
May 16 16:21:15.929: INFO: stderr: ""
May 16 16:21:15.929: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6916-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:21:18.396: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-5462" for this suite.

• [SLOW TEST:6.775 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":356,"completed":17,"skipped":312,"failed":0}
SS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:21:18.418: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4505
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1540
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
May 16 16:21:18.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4505 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
May 16 16:21:18.641: INFO: stderr: ""
May 16 16:21:18.641: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1544
May 16 16:21:18.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4505 delete pods e2e-test-httpd-pod'
May 16 16:21:21.271: INFO: stderr: ""
May 16 16:21:21.271: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 16:21:21.271: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4505" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":356,"completed":18,"skipped":314,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:21:21.285: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-6547
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
May 16 16:21:21.442: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0 and labels map[test-deployment-static:true]
May 16 16:21:21.442: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0 and labels map[test-deployment-static:true]
May 16 16:21:21.456: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0 and labels map[test-deployment-static:true]
May 16 16:21:21.456: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0 and labels map[test-deployment-static:true]
May 16 16:21:21.474: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0 and labels map[test-deployment-static:true]
May 16 16:21:21.474: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0 and labels map[test-deployment-static:true]
May 16 16:21:21.523: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0 and labels map[test-deployment-static:true]
May 16 16:21:21.523: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0 and labels map[test-deployment-static:true]
May 16 16:21:23.268: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1 and labels map[test-deployment-static:true]
May 16 16:21:23.268: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1 and labels map[test-deployment-static:true]
May 16 16:21:23.285: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
May 16 16:21:23.302: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 0
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:23.304: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:23.317: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:23.317: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:23.338: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:23.338: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:23.366: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:23.366: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:23.381: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1
May 16 16:21:23.381: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1
May 16 16:21:24.287: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:24.287: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:24.317: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1
STEP: listing Deployments
May 16 16:21:24.324: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
May 16 16:21:24.337: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
May 16 16:21:24.346: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
May 16 16:21:24.354: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
May 16 16:21:24.394: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
May 16 16:21:24.486: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
May 16 16:21:25.285: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
May 16 16:21:25.431: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
May 16 16:21:25.449: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
May 16 16:21:27.352: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
May 16 16:21:27.395: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1
May 16 16:21:27.395: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1
May 16 16:21:27.395: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1
May 16 16:21:27.395: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 1
May 16 16:21:27.395: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:27.395: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:27.395: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 2
May 16 16:21:27.395: INFO: observed Deployment test-deployment in namespace deployment-6547 with ReadyReplicas 3
STEP: deleting the Deployment
May 16 16:21:27.409: INFO: observed event type MODIFIED
May 16 16:21:27.409: INFO: observed event type MODIFIED
May 16 16:21:27.409: INFO: observed event type MODIFIED
May 16 16:21:27.410: INFO: observed event type MODIFIED
May 16 16:21:27.410: INFO: observed event type MODIFIED
May 16 16:21:27.410: INFO: observed event type MODIFIED
May 16 16:21:27.410: INFO: observed event type MODIFIED
May 16 16:21:27.410: INFO: observed event type MODIFIED
May 16 16:21:27.410: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
May 16 16:21:27.415: INFO: Log out all the ReplicaSets if there is no deployment created
May 16 16:21:27.421: INFO: ReplicaSet "test-deployment-6bdc46c995":
&ReplicaSet{ObjectMeta:{test-deployment-6bdc46c995  deployment-6547  7deee2a6-fc36-4d12-a8d3-68cb4c87bd54 4913 3 2022-05-16 16:21:21 +0000 UTC <nil> <nil> map[pod-template-hash:6bdc46c995 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment 02b7d02c-91e0-479f-860f-5ae92697c097 0xc0033774f7 0xc0033774f8}] []  [{kube-controller-manager Update apps/v1 2022-05-16 16:21:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"02b7d02c-91e0-479f-860f-5ae92697c097\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 16:21:24 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 6bdc46c995,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:6bdc46c995 test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/agnhost:2.36 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0033775a0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

May 16 16:21:27.426: INFO: ReplicaSet "test-deployment-74c6dd549b":
&ReplicaSet{ObjectMeta:{test-deployment-74c6dd549b  deployment-6547  c791718c-6ac7-48be-987c-8d25b79ae325 5019 2 2022-05-16 16:21:24 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment 02b7d02c-91e0-479f-860f-5ae92697c097 0xc003377637 0xc003377638}] []  [{kube-controller-manager Update apps/v1 2022-05-16 16:21:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"02b7d02c-91e0-479f-860f-5ae92697c097\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 16:21:25 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 74c6dd549b,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003377720 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

May 16 16:21:27.431: INFO: pod: "test-deployment-74c6dd549b-7vmzf":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-7vmzf test-deployment-74c6dd549b- deployment-6547  9a7f5e1e-fa7a-4fd1-b8fe-d48efdf060d8 5018 0 2022-05-16 16:21:25 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b c791718c-6ac7-48be-987c-8d25b79ae325 0xc003377cc7 0xc003377cc8}] []  [{kube-controller-manager Update v1 2022-05-16 16:21:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c791718c-6ac7-48be-987c-8d25b79ae325\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:21:27 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.49.200\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5sr5w,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5sr5w,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-36-36,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:21:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:21:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:21:27 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:21:25 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.36.36,PodIP:192.168.49.200,StartTime:2022-05-16 16:21:25 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 16:21:26 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://236104f6840df8668f087553a75711f076d6e838a7f84f029d42385512142d3b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.49.200,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

May 16 16:21:27.431: INFO: pod: "test-deployment-74c6dd549b-rsslm":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-rsslm test-deployment-74c6dd549b- deployment-6547  b4b6f5ce-7a06-498b-a5b6-2ac14564d695 4949 0 2022-05-16 16:21:24 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b c791718c-6ac7-48be-987c-8d25b79ae325 0xc003377f27 0xc003377f28}] []  [{kube-controller-manager Update v1 2022-05-16 16:21:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c791718c-6ac7-48be-987c-8d25b79ae325\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:21:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.149\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2swnz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2swnz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:21:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:21:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:21:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:21:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:192.168.238.149,StartTime:2022-05-16 16:21:24 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 16:21:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://91bc1ba46b70feee961037d5453ac2a9a1fcfa3a5898790efb9171ea601c8200,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.238.149,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

May 16 16:21:27.432: INFO: ReplicaSet "test-deployment-84b949bdfc":
&ReplicaSet{ObjectMeta:{test-deployment-84b949bdfc  deployment-6547  b4e4baa3-0a0a-45b3-84eb-510752a592e1 5027 4 2022-05-16 16:21:23 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment 02b7d02c-91e0-479f-860f-5ae92697c097 0xc003377807 0xc003377808}] []  [{kube-controller-manager Update apps/v1 2022-05-16 16:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"02b7d02c-91e0-479f-860f-5ae92697c097\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 16:21:27 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 84b949bdfc,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/pause:3.7 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0033778c0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

May 16 16:21:27.436: INFO: pod: "test-deployment-84b949bdfc-8rk4k":
&Pod{ObjectMeta:{test-deployment-84b949bdfc-8rk4k test-deployment-84b949bdfc- deployment-6547  99189be4-1602-435b-85cc-c7dfbb2396be 5022 0 2022-05-16 16:21:23 +0000 UTC 2022-05-16 16:21:28 +0000 UTC 0xc0033de200 map[pod-template-hash:84b949bdfc test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-84b949bdfc b4e4baa3-0a0a-45b3-84eb-510752a592e1 0xc0033de237 0xc0033de238}] []  [{kube-controller-manager Update v1 2022-05-16 16:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b4e4baa3-0a0a-45b3-84eb-510752a592e1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:21:24 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.148\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jbncg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.7,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jbncg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:21:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:21:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:21:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:21:23 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:192.168.238.148,StartTime:2022-05-16 16:21:23 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 16:21:24 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.7,ImageID:k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c,ContainerID:containerd://9452a96c2d700cd59191de5aeac0d774795823a6fb3ba2b924f17e5c4bc9baf1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.238.148,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
May 16 16:21:27.436: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-6547" for this suite.

• [SLOW TEST:6.165 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":356,"completed":19,"skipped":389,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:21:27.450: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-5535
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
May 16 16:21:27.616: INFO: The status of Pod annotationupdate98a26b7b-cf14-4e6c-a4dc-810b0727c5b2 is Pending, waiting for it to be Running (with Ready = true)
May 16 16:21:29.626: INFO: The status of Pod annotationupdate98a26b7b-cf14-4e6c-a4dc-810b0727c5b2 is Running (Ready = true)
May 16 16:21:30.175: INFO: Successfully updated pod "annotationupdate98a26b7b-cf14-4e6c-a4dc-810b0727c5b2"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
May 16 16:21:32.196: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-5535" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":20,"skipped":403,"failed":0}
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:21:32.215: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-870
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
May 16 16:21:32.393: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
May 16 16:21:34.404: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
May 16 16:21:34.429: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
May 16 16:21:36.438: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
May 16 16:21:36.453: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
May 16 16:21:36.458: INFO: Pod pod-with-prestop-http-hook still exists
May 16 16:21:38.459: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
May 16 16:21:38.468: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
May 16 16:21:38.477: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-870" for this suite.

• [SLOW TEST:6.278 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":356,"completed":21,"skipped":404,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:21:38.494: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-6865
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
May 16 16:21:38.642: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:21:55.266: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-6865" for this suite.

• [SLOW TEST:16.791 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":356,"completed":22,"skipped":419,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:21:55.286: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6821
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-468365a4-3e37-4013-99ac-d529ed725411
STEP: Creating a pod to test consume configMaps
May 16 16:21:55.456: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-c10c925f-3370-4d84-8604-de9b02f67d83" in namespace "projected-6821" to be "Succeeded or Failed"
May 16 16:21:55.461: INFO: Pod "pod-projected-configmaps-c10c925f-3370-4d84-8604-de9b02f67d83": Phase="Pending", Reason="", readiness=false. Elapsed: 4.559096ms
May 16 16:21:57.468: INFO: Pod "pod-projected-configmaps-c10c925f-3370-4d84-8604-de9b02f67d83": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011988366s
May 16 16:21:59.480: INFO: Pod "pod-projected-configmaps-c10c925f-3370-4d84-8604-de9b02f67d83": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023640631s
STEP: Saw pod success
May 16 16:21:59.480: INFO: Pod "pod-projected-configmaps-c10c925f-3370-4d84-8604-de9b02f67d83" satisfied condition "Succeeded or Failed"
May 16 16:21:59.484: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-projected-configmaps-c10c925f-3370-4d84-8604-de9b02f67d83 container agnhost-container: <nil>
STEP: delete the pod
May 16 16:21:59.513: INFO: Waiting for pod pod-projected-configmaps-c10c925f-3370-4d84-8604-de9b02f67d83 to disappear
May 16 16:21:59.516: INFO: Pod pod-projected-configmaps-c10c925f-3370-4d84-8604-de9b02f67d83 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
May 16 16:21:59.516: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6821" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":23,"skipped":458,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:21:59.532: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5559
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 16:21:59.708: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d6bab07b-723d-4a7e-83bd-e0d67dcec956" in namespace "projected-5559" to be "Succeeded or Failed"
May 16 16:21:59.717: INFO: Pod "downwardapi-volume-d6bab07b-723d-4a7e-83bd-e0d67dcec956": Phase="Pending", Reason="", readiness=false. Elapsed: 8.365613ms
May 16 16:22:01.724: INFO: Pod "downwardapi-volume-d6bab07b-723d-4a7e-83bd-e0d67dcec956": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015789277s
May 16 16:22:03.734: INFO: Pod "downwardapi-volume-d6bab07b-723d-4a7e-83bd-e0d67dcec956": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025511403s
STEP: Saw pod success
May 16 16:22:03.734: INFO: Pod "downwardapi-volume-d6bab07b-723d-4a7e-83bd-e0d67dcec956" satisfied condition "Succeeded or Failed"
May 16 16:22:03.738: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-d6bab07b-723d-4a7e-83bd-e0d67dcec956 container client-container: <nil>
STEP: delete the pod
May 16 16:22:03.774: INFO: Waiting for pod downwardapi-volume-d6bab07b-723d-4a7e-83bd-e0d67dcec956 to disappear
May 16 16:22:03.779: INFO: Pod downwardapi-volume-d6bab07b-723d-4a7e-83bd-e0d67dcec956 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
May 16 16:22:03.779: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5559" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":24,"skipped":502,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:03.793: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3325
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
May 16 16:22:03.947: INFO: Waiting up to 5m0s for pod "pod-aa56010b-9b16-46ce-b107-e9e9013cadba" in namespace "emptydir-3325" to be "Succeeded or Failed"
May 16 16:22:03.953: INFO: Pod "pod-aa56010b-9b16-46ce-b107-e9e9013cadba": Phase="Pending", Reason="", readiness=false. Elapsed: 5.940609ms
May 16 16:22:05.961: INFO: Pod "pod-aa56010b-9b16-46ce-b107-e9e9013cadba": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013919827s
May 16 16:22:07.971: INFO: Pod "pod-aa56010b-9b16-46ce-b107-e9e9013cadba": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023327046s
STEP: Saw pod success
May 16 16:22:07.971: INFO: Pod "pod-aa56010b-9b16-46ce-b107-e9e9013cadba" satisfied condition "Succeeded or Failed"
May 16 16:22:07.981: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-aa56010b-9b16-46ce-b107-e9e9013cadba container test-container: <nil>
STEP: delete the pod
May 16 16:22:08.005: INFO: Waiting for pod pod-aa56010b-9b16-46ce-b107-e9e9013cadba to disappear
May 16 16:22:08.010: INFO: Pod pod-aa56010b-9b16-46ce-b107-e9e9013cadba no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 16:22:08.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3325" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":25,"skipped":507,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:08.024: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4555
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating all guestbook components
May 16 16:22:08.174: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

May 16 16:22:08.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4555 create -f -'
May 16 16:22:08.714: INFO: stderr: ""
May 16 16:22:08.714: INFO: stdout: "service/agnhost-replica created\n"
May 16 16:22:08.715: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

May 16 16:22:08.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4555 create -f -'
May 16 16:22:08.907: INFO: stderr: ""
May 16 16:22:08.907: INFO: stdout: "service/agnhost-primary created\n"
May 16 16:22:08.907: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

May 16 16:22:08.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4555 create -f -'
May 16 16:22:09.548: INFO: stderr: ""
May 16 16:22:09.548: INFO: stdout: "service/frontend created\n"
May 16 16:22:09.548: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.36
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

May 16 16:22:09.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4555 create -f -'
May 16 16:22:09.721: INFO: stderr: ""
May 16 16:22:09.721: INFO: stdout: "deployment.apps/frontend created\n"
May 16 16:22:09.721: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.36
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

May 16 16:22:09.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4555 create -f -'
May 16 16:22:09.901: INFO: stderr: ""
May 16 16:22:09.901: INFO: stdout: "deployment.apps/agnhost-primary created\n"
May 16 16:22:09.901: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.36
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

May 16 16:22:09.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4555 create -f -'
May 16 16:22:10.092: INFO: stderr: ""
May 16 16:22:10.092: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
May 16 16:22:10.092: INFO: Waiting for all frontend pods to be Running.
May 16 16:22:20.144: INFO: Waiting for frontend to serve content.
May 16 16:22:20.155: INFO: Trying to add a new entry to the guestbook.
May 16 16:22:20.171: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources
May 16 16:22:20.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4555 delete --grace-period=0 --force -f -'
May 16 16:22:20.280: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
May 16 16:22:20.280: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
May 16 16:22:20.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4555 delete --grace-period=0 --force -f -'
May 16 16:22:20.367: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
May 16 16:22:20.367: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
May 16 16:22:20.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4555 delete --grace-period=0 --force -f -'
May 16 16:22:20.466: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
May 16 16:22:20.466: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
May 16 16:22:20.466: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4555 delete --grace-period=0 --force -f -'
May 16 16:22:20.533: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
May 16 16:22:20.533: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
May 16 16:22:20.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4555 delete --grace-period=0 --force -f -'
May 16 16:22:20.623: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
May 16 16:22:20.623: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
May 16 16:22:20.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4555 delete --grace-period=0 --force -f -'
May 16 16:22:20.710: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
May 16 16:22:20.710: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 16:22:20.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4555" for this suite.

• [SLOW TEST:12.701 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:340
    should create and stop a working application  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":356,"completed":26,"skipped":528,"failed":0}
SS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:20.726: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2191
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:188
May 16 16:22:20.894: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2191" for this suite.
•{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":356,"completed":27,"skipped":530,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:20.910: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9485
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with configMap that has name projected-configmap-test-upd-22341d9b-5e2b-4a6a-8970-04a19f159968
STEP: Creating the pod
May 16 16:22:21.102: INFO: The status of Pod pod-projected-configmaps-7a39819b-370b-467e-bb99-35b182916cea is Pending, waiting for it to be Running (with Ready = true)
May 16 16:22:23.112: INFO: The status of Pod pod-projected-configmaps-7a39819b-370b-467e-bb99-35b182916cea is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-22341d9b-5e2b-4a6a-8970-04a19f159968
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
May 16 16:22:25.165: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9485" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":28,"skipped":587,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:25.183: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6153
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 16:22:25.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6153" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760
•{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":356,"completed":29,"skipped":607,"failed":0}
SSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:25.415: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-5189
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
May 16 16:22:25.610: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-5189" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":356,"completed":30,"skipped":612,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:25.645: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5377
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-5fac87d8-0711-481a-a5d0-63947219333d
STEP: Creating configMap with name cm-test-opt-upd-61b4922a-97d2-4c05-b353-4eb0b35d8413
STEP: Creating the pod
May 16 16:22:25.836: INFO: The status of Pod pod-projected-configmaps-5a2067d0-a3eb-48c1-9447-559fe3ec7835 is Pending, waiting for it to be Running (with Ready = true)
May 16 16:22:27.847: INFO: The status of Pod pod-projected-configmaps-5a2067d0-a3eb-48c1-9447-559fe3ec7835 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-5fac87d8-0711-481a-a5d0-63947219333d
STEP: Updating configmap cm-test-opt-upd-61b4922a-97d2-4c05-b353-4eb0b35d8413
STEP: Creating configMap with name cm-test-opt-create-6425ba1b-8c81-47ed-82ed-ee54abacc675
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
May 16 16:22:29.975: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5377" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":31,"skipped":654,"failed":0}
SSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:29.992: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-3298
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:22:30.194: INFO: created pod pod-service-account-defaultsa
May 16 16:22:30.194: INFO: pod pod-service-account-defaultsa service account token volume mount: true
May 16 16:22:30.200: INFO: created pod pod-service-account-mountsa
May 16 16:22:30.200: INFO: pod pod-service-account-mountsa service account token volume mount: true
May 16 16:22:30.209: INFO: created pod pod-service-account-nomountsa
May 16 16:22:30.209: INFO: pod pod-service-account-nomountsa service account token volume mount: false
May 16 16:22:30.243: INFO: created pod pod-service-account-defaultsa-mountspec
May 16 16:22:30.243: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
May 16 16:22:30.252: INFO: created pod pod-service-account-mountsa-mountspec
May 16 16:22:30.252: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
May 16 16:22:30.317: INFO: created pod pod-service-account-nomountsa-mountspec
May 16 16:22:30.317: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
May 16 16:22:30.327: INFO: created pod pod-service-account-defaultsa-nomountspec
May 16 16:22:30.327: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
May 16 16:22:30.346: INFO: created pod pod-service-account-mountsa-nomountspec
May 16 16:22:30.346: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
May 16 16:22:30.358: INFO: created pod pod-service-account-nomountsa-nomountspec
May 16 16:22:30.358: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
May 16 16:22:30.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-3298" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":356,"completed":32,"skipped":659,"failed":0}
SSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:30.376: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-5444
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:22:30.624: INFO: The status of Pod busybox-readonly-fsad097ba9-3d48-42cb-b340-e770f9371c0f is Pending, waiting for it to be Running (with Ready = true)
May 16 16:22:32.633: INFO: The status of Pod busybox-readonly-fsad097ba9-3d48-42cb-b340-e770f9371c0f is Pending, waiting for it to be Running (with Ready = true)
May 16 16:22:34.635: INFO: The status of Pod busybox-readonly-fsad097ba9-3d48-42cb-b340-e770f9371c0f is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
May 16 16:22:34.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-5444" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":33,"skipped":663,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:34.672: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1751
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-9af0576a-7d45-4b79-bce5-ddc78e9eff1f
STEP: Creating a pod to test consume configMaps
May 16 16:22:34.837: INFO: Waiting up to 5m0s for pod "pod-configmaps-171760f3-95fa-44aa-8c49-7a50fe4b9937" in namespace "configmap-1751" to be "Succeeded or Failed"
May 16 16:22:34.842: INFO: Pod "pod-configmaps-171760f3-95fa-44aa-8c49-7a50fe4b9937": Phase="Pending", Reason="", readiness=false. Elapsed: 4.78252ms
May 16 16:22:36.850: INFO: Pod "pod-configmaps-171760f3-95fa-44aa-8c49-7a50fe4b9937": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012745162s
May 16 16:22:38.859: INFO: Pod "pod-configmaps-171760f3-95fa-44aa-8c49-7a50fe4b9937": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021931254s
STEP: Saw pod success
May 16 16:22:38.859: INFO: Pod "pod-configmaps-171760f3-95fa-44aa-8c49-7a50fe4b9937" satisfied condition "Succeeded or Failed"
May 16 16:22:38.864: INFO: Trying to get logs from node ip-172-31-10-138 pod pod-configmaps-171760f3-95fa-44aa-8c49-7a50fe4b9937 container agnhost-container: <nil>
STEP: delete the pod
May 16 16:22:38.903: INFO: Waiting for pod pod-configmaps-171760f3-95fa-44aa-8c49-7a50fe4b9937 to disappear
May 16 16:22:38.906: INFO: Pod pod-configmaps-171760f3-95fa-44aa-8c49-7a50fe4b9937 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
May 16 16:22:38.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1751" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":34,"skipped":678,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:38.921: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-2875
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2875.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2875.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2875.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2875.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2875.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2875.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2875.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2875.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2875.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2875.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2875.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2875.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2875.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2875.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2875.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2875.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
May 16 16:22:51.167: INFO: DNS probes using dns-2875/dns-test-7aa467e6-7c09-4e82-8028-ca5d61f2a613 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
May 16 16:22:51.205: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-2875" for this suite.

• [SLOW TEST:12.298 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":356,"completed":35,"skipped":699,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:51.220: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2787
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
May 16 16:22:51.383: INFO: Waiting up to 5m0s for pod "pod-aaa67f50-b3a5-47ec-b39b-e4dca917aa94" in namespace "emptydir-2787" to be "Succeeded or Failed"
May 16 16:22:51.391: INFO: Pod "pod-aaa67f50-b3a5-47ec-b39b-e4dca917aa94": Phase="Pending", Reason="", readiness=false. Elapsed: 7.482657ms
May 16 16:22:53.403: INFO: Pod "pod-aaa67f50-b3a5-47ec-b39b-e4dca917aa94": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019290116s
May 16 16:22:55.411: INFO: Pod "pod-aaa67f50-b3a5-47ec-b39b-e4dca917aa94": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027291602s
STEP: Saw pod success
May 16 16:22:55.411: INFO: Pod "pod-aaa67f50-b3a5-47ec-b39b-e4dca917aa94" satisfied condition "Succeeded or Failed"
May 16 16:22:55.416: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-aaa67f50-b3a5-47ec-b39b-e4dca917aa94 container test-container: <nil>
STEP: delete the pod
May 16 16:22:55.451: INFO: Waiting for pod pod-aaa67f50-b3a5-47ec-b39b-e4dca917aa94 to disappear
May 16 16:22:55.455: INFO: Pod pod-aaa67f50-b3a5-47ec-b39b-e4dca917aa94 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 16:22:55.455: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2787" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":36,"skipped":738,"failed":0}
S
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:55.469: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-8161
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 rs, got 1 rs
STEP: expected 0 pods, got 2 pods
STEP: Gathering metrics
May 16 16:22:56.692: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0516 16:22:56.692170      17 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
May 16 16:22:56.692: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-8161" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":356,"completed":37,"skipped":739,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:22:56.715: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8592
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 16:22:56.865: INFO: Waiting up to 5m0s for pod "downwardapi-volume-cb4ef965-8ba5-40bb-8343-b3b77c95dd23" in namespace "projected-8592" to be "Succeeded or Failed"
May 16 16:22:56.872: INFO: Pod "downwardapi-volume-cb4ef965-8ba5-40bb-8343-b3b77c95dd23": Phase="Pending", Reason="", readiness=false. Elapsed: 6.660536ms
May 16 16:22:58.882: INFO: Pod "downwardapi-volume-cb4ef965-8ba5-40bb-8343-b3b77c95dd23": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016789771s
May 16 16:23:00.895: INFO: Pod "downwardapi-volume-cb4ef965-8ba5-40bb-8343-b3b77c95dd23": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029587595s
STEP: Saw pod success
May 16 16:23:00.895: INFO: Pod "downwardapi-volume-cb4ef965-8ba5-40bb-8343-b3b77c95dd23" satisfied condition "Succeeded or Failed"
May 16 16:23:00.898: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-cb4ef965-8ba5-40bb-8343-b3b77c95dd23 container client-container: <nil>
STEP: delete the pod
May 16 16:23:00.926: INFO: Waiting for pod downwardapi-volume-cb4ef965-8ba5-40bb-8343-b3b77c95dd23 to disappear
May 16 16:23:00.931: INFO: Pod downwardapi-volume-cb4ef965-8ba5-40bb-8343-b3b77c95dd23 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
May 16 16:23:00.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8592" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":38,"skipped":768,"failed":0}
SSSSSS
------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:23:00.947: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename prestop
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in prestop-5034
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating server pod server in namespace prestop-5034
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-5034
STEP: Deleting pre-stop pod
May 16 16:23:10.178: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  test/e2e/framework/framework.go:188
May 16 16:23:10.213: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-5034" for this suite.

• [SLOW TEST:9.281 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":356,"completed":39,"skipped":774,"failed":0}
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:23:10.228: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-6889
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-6889
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-6889
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6889
May 16 16:23:10.425: INFO: Found 0 stateful pods, waiting for 1
May 16 16:23:20.441: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
May 16 16:23:20.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-6889 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
May 16 16:23:20.597: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
May 16 16:23:20.597: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
May 16 16:23:20.597: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

May 16 16:23:20.603: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
May 16 16:23:30.616: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
May 16 16:23:30.616: INFO: Waiting for statefulset status.replicas updated to 0
May 16 16:23:30.637: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999998585s
May 16 16:23:31.645: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.99608697s
May 16 16:23:32.652: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.987935425s
May 16 16:23:33.663: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.980328249s
May 16 16:23:34.671: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.970173641s
May 16 16:23:35.676: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.96246537s
May 16 16:23:36.683: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.95743578s
May 16 16:23:37.691: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.949487513s
May 16 16:23:38.699: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.941927048s
May 16 16:23:39.708: INFO: Verifying statefulset ss doesn't scale past 1 for another 934.719336ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6889
May 16 16:23:40.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-6889 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
May 16 16:23:40.862: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
May 16 16:23:40.862: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
May 16 16:23:40.862: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

May 16 16:23:40.869: INFO: Found 1 stateful pods, waiting for 3
May 16 16:23:50.885: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:23:50.886: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:23:50.886: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Pending - Ready=false
May 16 16:24:00.886: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:24:00.886: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:24:00.886: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
May 16 16:24:00.895: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-6889 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
May 16 16:24:01.038: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
May 16 16:24:01.038: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
May 16 16:24:01.038: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

May 16 16:24:01.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-6889 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
May 16 16:24:01.214: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
May 16 16:24:01.214: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
May 16 16:24:01.214: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

May 16 16:24:01.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-6889 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
May 16 16:24:01.384: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
May 16 16:24:01.384: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
May 16 16:24:01.384: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

May 16 16:24:01.384: INFO: Waiting for statefulset status.replicas updated to 0
May 16 16:24:01.390: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
May 16 16:24:11.406: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
May 16 16:24:11.406: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
May 16 16:24:11.406: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
May 16 16:24:11.426: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999998581s
May 16 16:24:12.433: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994807584s
May 16 16:24:13.442: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.987868509s
May 16 16:24:14.451: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.978743103s
May 16 16:24:15.459: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.969847665s
May 16 16:24:16.466: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.961950437s
May 16 16:24:17.474: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.954227107s
May 16 16:24:18.485: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.946110262s
May 16 16:24:19.494: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.935948383s
May 16 16:24:20.502: INFO: Verifying statefulset ss doesn't scale past 3 for another 926.399727ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6889
May 16 16:24:21.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-6889 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
May 16 16:24:21.674: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
May 16 16:24:21.674: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
May 16 16:24:21.674: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

May 16 16:24:21.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-6889 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
May 16 16:24:21.813: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
May 16 16:24:21.813: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
May 16 16:24:21.813: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

May 16 16:24:21.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-6889 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
May 16 16:24:21.965: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
May 16 16:24:21.965: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
May 16 16:24:21.965: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

May 16 16:24:21.965: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
May 16 16:24:31.987: INFO: Deleting all statefulset in ns statefulset-6889
May 16 16:24:31.993: INFO: Scaling statefulset ss to 0
May 16 16:24:32.011: INFO: Waiting for statefulset status.replicas updated to 0
May 16 16:24:32.016: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
May 16 16:24:32.034: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-6889" for this suite.

• [SLOW TEST:81.820 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":356,"completed":40,"skipped":781,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:24:32.048: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2898
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1574
[It] should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
May 16 16:24:32.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-2898 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
May 16 16:24:32.274: INFO: stderr: ""
May 16 16:24:32.274: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
May 16 16:24:37.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-2898 get pod e2e-test-httpd-pod -o json'
May 16 16:24:37.387: INFO: stderr: ""
May 16 16:24:37.387: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"kubernetes.io/psp\": \"e2e-test-privileged-psp\"\n        },\n        \"creationTimestamp\": \"2022-05-16T16:24:32Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2898\",\n        \"resourceVersion\": \"6790\",\n        \"uid\": \"911da1f4-bd0d-46b9-9527-606c3177515e\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-lrqzd\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-76-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-lrqzd\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-05-16T16:24:32Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-05-16T16:24:33Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-05-16T16:24:33Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-05-16T16:24:32Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://b972b79b19fbd4644e55f048b2cb320e18503ed1252e0b093ffb236d50e25dd0\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2022-05-16T16:24:33Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.76.3\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.238.169\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.238.169\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2022-05-16T16:24:32Z\"\n    }\n}\n"
STEP: replace the image in the pod
May 16 16:24:37.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-2898 replace -f -'
May 16 16:24:37.760: INFO: stderr: ""
May 16 16:24:37.760: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1578
May 16 16:24:37.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-2898 delete pods e2e-test-httpd-pod'
May 16 16:24:39.756: INFO: stderr: ""
May 16 16:24:39.756: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 16:24:39.756: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2898" for this suite.

• [SLOW TEST:7.725 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1571
    should update a single-container pod's image  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":356,"completed":41,"skipped":802,"failed":0}
SSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:24:39.773: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-7795
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
May 16 16:25:00.172: INFO: EndpointSlice for Service endpointslice-7795/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
May 16 16:25:10.206: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-7795" for this suite.

• [SLOW TEST:30.453 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":356,"completed":42,"skipped":810,"failed":0}
S
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:25:10.226: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-6458
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
W0516 16:25:50.553136      17 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
May 16 16:25:50.553: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

May 16 16:25:50.553: INFO: Deleting pod "simpletest.rc-25km6" in namespace "gc-6458"
May 16 16:25:50.574: INFO: Deleting pod "simpletest.rc-262rn" in namespace "gc-6458"
May 16 16:25:50.592: INFO: Deleting pod "simpletest.rc-28bjz" in namespace "gc-6458"
May 16 16:25:50.617: INFO: Deleting pod "simpletest.rc-44rjf" in namespace "gc-6458"
May 16 16:25:50.638: INFO: Deleting pod "simpletest.rc-4824v" in namespace "gc-6458"
May 16 16:25:50.659: INFO: Deleting pod "simpletest.rc-4szcc" in namespace "gc-6458"
May 16 16:25:50.677: INFO: Deleting pod "simpletest.rc-5bgjx" in namespace "gc-6458"
May 16 16:25:50.691: INFO: Deleting pod "simpletest.rc-6hmqz" in namespace "gc-6458"
May 16 16:25:50.705: INFO: Deleting pod "simpletest.rc-6nj6g" in namespace "gc-6458"
May 16 16:25:50.724: INFO: Deleting pod "simpletest.rc-7g9qh" in namespace "gc-6458"
May 16 16:25:50.738: INFO: Deleting pod "simpletest.rc-7js4v" in namespace "gc-6458"
May 16 16:25:50.753: INFO: Deleting pod "simpletest.rc-7l9l2" in namespace "gc-6458"
May 16 16:25:50.767: INFO: Deleting pod "simpletest.rc-7vwfb" in namespace "gc-6458"
May 16 16:25:50.782: INFO: Deleting pod "simpletest.rc-8286l" in namespace "gc-6458"
May 16 16:25:50.798: INFO: Deleting pod "simpletest.rc-8f5m4" in namespace "gc-6458"
May 16 16:25:50.815: INFO: Deleting pod "simpletest.rc-8mqlk" in namespace "gc-6458"
May 16 16:25:50.869: INFO: Deleting pod "simpletest.rc-8prl8" in namespace "gc-6458"
May 16 16:25:50.903: INFO: Deleting pod "simpletest.rc-8pspm" in namespace "gc-6458"
May 16 16:25:50.916: INFO: Deleting pod "simpletest.rc-8tgpx" in namespace "gc-6458"
May 16 16:25:50.932: INFO: Deleting pod "simpletest.rc-8txrt" in namespace "gc-6458"
May 16 16:25:50.959: INFO: Deleting pod "simpletest.rc-8zcjv" in namespace "gc-6458"
May 16 16:25:50.981: INFO: Deleting pod "simpletest.rc-9fbkb" in namespace "gc-6458"
May 16 16:25:50.999: INFO: Deleting pod "simpletest.rc-9tf4v" in namespace "gc-6458"
May 16 16:25:51.013: INFO: Deleting pod "simpletest.rc-b4vxj" in namespace "gc-6458"
May 16 16:25:51.026: INFO: Deleting pod "simpletest.rc-b72q7" in namespace "gc-6458"
May 16 16:25:51.039: INFO: Deleting pod "simpletest.rc-bbss2" in namespace "gc-6458"
May 16 16:25:51.061: INFO: Deleting pod "simpletest.rc-bc8zk" in namespace "gc-6458"
May 16 16:25:51.079: INFO: Deleting pod "simpletest.rc-bdp4h" in namespace "gc-6458"
May 16 16:25:51.093: INFO: Deleting pod "simpletest.rc-c7vx9" in namespace "gc-6458"
May 16 16:25:51.120: INFO: Deleting pod "simpletest.rc-cbwxh" in namespace "gc-6458"
May 16 16:25:51.133: INFO: Deleting pod "simpletest.rc-ccvtd" in namespace "gc-6458"
May 16 16:25:51.169: INFO: Deleting pod "simpletest.rc-cqg4v" in namespace "gc-6458"
May 16 16:25:51.188: INFO: Deleting pod "simpletest.rc-csd5z" in namespace "gc-6458"
May 16 16:25:51.205: INFO: Deleting pod "simpletest.rc-d9fnr" in namespace "gc-6458"
May 16 16:25:51.219: INFO: Deleting pod "simpletest.rc-d9k8b" in namespace "gc-6458"
May 16 16:25:51.235: INFO: Deleting pod "simpletest.rc-dbj97" in namespace "gc-6458"
May 16 16:25:51.256: INFO: Deleting pod "simpletest.rc-dlmpj" in namespace "gc-6458"
May 16 16:25:51.269: INFO: Deleting pod "simpletest.rc-dvvqz" in namespace "gc-6458"
May 16 16:25:51.294: INFO: Deleting pod "simpletest.rc-f82tl" in namespace "gc-6458"
May 16 16:25:51.309: INFO: Deleting pod "simpletest.rc-f8tdr" in namespace "gc-6458"
May 16 16:25:51.326: INFO: Deleting pod "simpletest.rc-fcgqr" in namespace "gc-6458"
May 16 16:25:51.340: INFO: Deleting pod "simpletest.rc-ff8tr" in namespace "gc-6458"
May 16 16:25:51.355: INFO: Deleting pod "simpletest.rc-fks85" in namespace "gc-6458"
May 16 16:25:51.371: INFO: Deleting pod "simpletest.rc-g9gpf" in namespace "gc-6458"
May 16 16:25:51.388: INFO: Deleting pod "simpletest.rc-gkctb" in namespace "gc-6458"
May 16 16:25:51.406: INFO: Deleting pod "simpletest.rc-gspbf" in namespace "gc-6458"
May 16 16:25:51.419: INFO: Deleting pod "simpletest.rc-hbp7c" in namespace "gc-6458"
May 16 16:25:51.435: INFO: Deleting pod "simpletest.rc-jcfsx" in namespace "gc-6458"
May 16 16:25:51.448: INFO: Deleting pod "simpletest.rc-kclpr" in namespace "gc-6458"
May 16 16:25:51.463: INFO: Deleting pod "simpletest.rc-kgsz4" in namespace "gc-6458"
May 16 16:25:51.480: INFO: Deleting pod "simpletest.rc-knfsn" in namespace "gc-6458"
May 16 16:25:51.496: INFO: Deleting pod "simpletest.rc-ksj2d" in namespace "gc-6458"
May 16 16:25:51.525: INFO: Deleting pod "simpletest.rc-ksqjh" in namespace "gc-6458"
May 16 16:25:51.541: INFO: Deleting pod "simpletest.rc-kt2bw" in namespace "gc-6458"
May 16 16:25:51.558: INFO: Deleting pod "simpletest.rc-kvrkz" in namespace "gc-6458"
May 16 16:25:51.580: INFO: Deleting pod "simpletest.rc-lzb7r" in namespace "gc-6458"
May 16 16:25:51.598: INFO: Deleting pod "simpletest.rc-m258h" in namespace "gc-6458"
May 16 16:25:51.611: INFO: Deleting pod "simpletest.rc-m28h7" in namespace "gc-6458"
May 16 16:25:51.628: INFO: Deleting pod "simpletest.rc-n2v52" in namespace "gc-6458"
May 16 16:25:51.644: INFO: Deleting pod "simpletest.rc-n7z5r" in namespace "gc-6458"
May 16 16:25:51.659: INFO: Deleting pod "simpletest.rc-n9t9w" in namespace "gc-6458"
May 16 16:25:51.672: INFO: Deleting pod "simpletest.rc-ncxnl" in namespace "gc-6458"
May 16 16:25:51.687: INFO: Deleting pod "simpletest.rc-ndnlv" in namespace "gc-6458"
May 16 16:25:51.778: INFO: Deleting pod "simpletest.rc-nfv2q" in namespace "gc-6458"
May 16 16:25:51.793: INFO: Deleting pod "simpletest.rc-nkblz" in namespace "gc-6458"
May 16 16:25:51.821: INFO: Deleting pod "simpletest.rc-nkn2r" in namespace "gc-6458"
May 16 16:25:51.840: INFO: Deleting pod "simpletest.rc-nlthn" in namespace "gc-6458"
May 16 16:25:51.854: INFO: Deleting pod "simpletest.rc-nrsg2" in namespace "gc-6458"
May 16 16:25:51.869: INFO: Deleting pod "simpletest.rc-nzxzq" in namespace "gc-6458"
May 16 16:25:51.893: INFO: Deleting pod "simpletest.rc-p8ng2" in namespace "gc-6458"
May 16 16:25:51.911: INFO: Deleting pod "simpletest.rc-p8t8w" in namespace "gc-6458"
May 16 16:25:51.925: INFO: Deleting pod "simpletest.rc-pjsbj" in namespace "gc-6458"
May 16 16:25:51.940: INFO: Deleting pod "simpletest.rc-pvdmb" in namespace "gc-6458"
May 16 16:25:51.964: INFO: Deleting pod "simpletest.rc-q7cn2" in namespace "gc-6458"
May 16 16:25:51.985: INFO: Deleting pod "simpletest.rc-qpzpv" in namespace "gc-6458"
May 16 16:25:52.001: INFO: Deleting pod "simpletest.rc-qtg6f" in namespace "gc-6458"
May 16 16:25:52.016: INFO: Deleting pod "simpletest.rc-r4m4c" in namespace "gc-6458"
May 16 16:25:52.136: INFO: Deleting pod "simpletest.rc-r6s4g" in namespace "gc-6458"
May 16 16:25:52.151: INFO: Deleting pod "simpletest.rc-rblv7" in namespace "gc-6458"
May 16 16:25:52.166: INFO: Deleting pod "simpletest.rc-rbqkd" in namespace "gc-6458"
May 16 16:25:52.181: INFO: Deleting pod "simpletest.rc-rfw9b" in namespace "gc-6458"
May 16 16:25:52.195: INFO: Deleting pod "simpletest.rc-rmzb5" in namespace "gc-6458"
May 16 16:25:52.310: INFO: Deleting pod "simpletest.rc-rrb54" in namespace "gc-6458"
May 16 16:25:52.325: INFO: Deleting pod "simpletest.rc-rv47j" in namespace "gc-6458"
May 16 16:25:52.338: INFO: Deleting pod "simpletest.rc-sjrbr" in namespace "gc-6458"
May 16 16:25:52.396: INFO: Deleting pod "simpletest.rc-snmr2" in namespace "gc-6458"
May 16 16:25:52.437: INFO: Deleting pod "simpletest.rc-ss7v6" in namespace "gc-6458"
May 16 16:25:52.491: INFO: Deleting pod "simpletest.rc-t94gv" in namespace "gc-6458"
May 16 16:25:52.543: INFO: Deleting pod "simpletest.rc-tkb44" in namespace "gc-6458"
May 16 16:25:52.589: INFO: Deleting pod "simpletest.rc-v5mmr" in namespace "gc-6458"
May 16 16:25:52.661: INFO: Deleting pod "simpletest.rc-vc2hc" in namespace "gc-6458"
May 16 16:25:52.692: INFO: Deleting pod "simpletest.rc-vng5c" in namespace "gc-6458"
May 16 16:25:52.742: INFO: Deleting pod "simpletest.rc-vtjm4" in namespace "gc-6458"
May 16 16:25:52.794: INFO: Deleting pod "simpletest.rc-vv57s" in namespace "gc-6458"
May 16 16:25:52.838: INFO: Deleting pod "simpletest.rc-w9ss4" in namespace "gc-6458"
May 16 16:25:52.911: INFO: Deleting pod "simpletest.rc-wft5j" in namespace "gc-6458"
May 16 16:25:52.941: INFO: Deleting pod "simpletest.rc-wprr5" in namespace "gc-6458"
May 16 16:25:52.990: INFO: Deleting pod "simpletest.rc-wqqpc" in namespace "gc-6458"
May 16 16:25:53.039: INFO: Deleting pod "simpletest.rc-xch2h" in namespace "gc-6458"
May 16 16:25:53.091: INFO: Deleting pod "simpletest.rc-xkzq8" in namespace "gc-6458"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
May 16 16:25:53.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6458" for this suite.

• [SLOW TEST:43.010 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":356,"completed":43,"skipped":811,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:25:53.237: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-9653
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-9653
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
May 16 16:25:53.399: INFO: Found 0 stateful pods, waiting for 3
May 16 16:26:03.411: INFO: Found 2 stateful pods, waiting for 3
May 16 16:26:13.411: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:26:13.411: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:26:13.411: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
May 16 16:26:13.458: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
May 16 16:26:23.507: INFO: Updating stateful set ss2
May 16 16:26:23.519: INFO: Waiting for Pod statefulset-9653/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
May 16 16:26:33.576: INFO: Found 1 stateful pods, waiting for 3
May 16 16:26:43.588: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:26:43.588: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:26:43.588: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
May 16 16:26:43.629: INFO: Updating stateful set ss2
May 16 16:26:43.637: INFO: Waiting for Pod statefulset-9653/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
May 16 16:26:53.680: INFO: Updating stateful set ss2
May 16 16:26:53.691: INFO: Waiting for StatefulSet statefulset-9653/ss2 to complete update
May 16 16:26:53.691: INFO: Waiting for Pod statefulset-9653/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
May 16 16:27:03.710: INFO: Deleting all statefulset in ns statefulset-9653
May 16 16:27:03.715: INFO: Scaling statefulset ss2 to 0
May 16 16:27:13.751: INFO: Waiting for statefulset status.replicas updated to 0
May 16 16:27:13.755: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
May 16 16:27:13.784: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-9653" for this suite.

• [SLOW TEST:80.564 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":356,"completed":44,"skipped":836,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:27:13.802: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-9959
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
May 16 16:27:13.967: INFO: Waiting up to 1m0s for all nodes to be ready
May 16 16:28:14.004: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:28:14.009: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-102
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:496
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
May 16 16:28:16.220: INFO: found a healthy node: ip-172-31-76-3
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:28:26.325: INFO: pods created so far: [1 1 1]
May 16 16:28:26.325: INFO: length of pods created so far: 3
May 16 16:28:28.342: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:188
May 16 16:28:35.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-102" for this suite.
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:470
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
May 16 16:28:35.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-9959" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:81.667 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:458
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":356,"completed":45,"skipped":912,"failed":0}
SSSSSS
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:28:35.469: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4649
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
May 16 16:28:35.651: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4649" for this suite.
•{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":356,"completed":46,"skipped":918,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:28:35.666: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename crd-watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-watch-5826
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:28:35.806: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Creating first CR 
May 16 16:28:38.381: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-05-16T16:28:38Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-05-16T16:28:38Z]] name:name1 resourceVersion:10269 uid:b1ad83fd-f3de-4f49-86c6-6da41b7a30ae] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
May 16 16:28:48.392: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-05-16T16:28:48Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-05-16T16:28:48Z]] name:name2 resourceVersion:10369 uid:fd40399a-8961-4d93-aeff-e0cb1a4e8ddb] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
May 16 16:28:58.405: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-05-16T16:28:38Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-05-16T16:28:58Z]] name:name1 resourceVersion:10389 uid:b1ad83fd-f3de-4f49-86c6-6da41b7a30ae] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
May 16 16:29:08.421: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-05-16T16:28:48Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-05-16T16:29:08Z]] name:name2 resourceVersion:10407 uid:fd40399a-8961-4d93-aeff-e0cb1a4e8ddb] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
May 16 16:29:18.439: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-05-16T16:28:38Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-05-16T16:28:58Z]] name:name1 resourceVersion:10426 uid:b1ad83fd-f3de-4f49-86c6-6da41b7a30ae] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
May 16 16:29:28.457: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-05-16T16:28:48Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-05-16T16:29:08Z]] name:name2 resourceVersion:10446 uid:fd40399a-8961-4d93-aeff-e0cb1a4e8ddb] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:29:38.982: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-5826" for this suite.

• [SLOW TEST:63.331 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":356,"completed":47,"skipped":934,"failed":0}
SS
------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:29:38.997: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename ingressclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingressclass-6740
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:188
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
May 16 16:29:39.175: INFO: starting watch
STEP: patching
STEP: updating
May 16 16:29:39.190: INFO: waiting for watch events with expected annotations
May 16 16:29:39.190: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:188
May 16 16:29:39.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-6740" for this suite.
•{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":356,"completed":48,"skipped":936,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:29:39.247: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8298
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1334
STEP: creating the pod
May 16 16:29:39.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-8298 create -f -'
May 16 16:29:40.521: INFO: stderr: ""
May 16 16:29:40.521: INFO: stdout: "pod/pause created\n"
May 16 16:29:40.521: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
May 16 16:29:40.521: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-8298" to be "running and ready"
May 16 16:29:40.529: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 8.428496ms
May 16 16:29:42.540: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.019105323s
May 16 16:29:42.540: INFO: Pod "pause" satisfied condition "running and ready"
May 16 16:29:42.540: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
STEP: adding the label testing-label with value testing-label-value to a pod
May 16 16:29:42.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-8298 label pods pause testing-label=testing-label-value'
May 16 16:29:42.616: INFO: stderr: ""
May 16 16:29:42.616: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
May 16 16:29:42.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-8298 get pod pause -L testing-label'
May 16 16:29:42.682: INFO: stderr: ""
May 16 16:29:42.682: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod
May 16 16:29:42.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-8298 label pods pause testing-label-'
May 16 16:29:42.755: INFO: stderr: ""
May 16 16:29:42.755: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
May 16 16:29:42.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-8298 get pod pause -L testing-label'
May 16 16:29:42.817: INFO: stderr: ""
May 16 16:29:42.817: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1340
STEP: using delete to clean up resources
May 16 16:29:42.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-8298 delete --grace-period=0 --force -f -'
May 16 16:29:42.891: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
May 16 16:29:42.891: INFO: stdout: "pod \"pause\" force deleted\n"
May 16 16:29:42.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-8298 get rc,svc -l name=pause --no-headers'
May 16 16:29:42.964: INFO: stderr: "No resources found in kubectl-8298 namespace.\n"
May 16 16:29:42.964: INFO: stdout: ""
May 16 16:29:42.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-8298 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
May 16 16:29:43.023: INFO: stderr: ""
May 16 16:29:43.023: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 16:29:43.023: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8298" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":356,"completed":49,"skipped":974,"failed":0}
SSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:29:43.037: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9974
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service endpoint-test2 in namespace services-9974
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9974 to expose endpoints map[]
May 16 16:29:43.203: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
May 16 16:29:44.216: INFO: successfully validated that service endpoint-test2 in namespace services-9974 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-9974
May 16 16:29:44.240: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
May 16 16:29:46.247: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9974 to expose endpoints map[pod1:[80]]
May 16 16:29:46.267: INFO: successfully validated that service endpoint-test2 in namespace services-9974 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
May 16 16:29:46.267: INFO: Creating new exec pod
May 16 16:29:49.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9974 exec execpodfsvwn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
May 16 16:29:49.464: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
May 16 16:29:49.464: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:29:49.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9974 exec execpodfsvwn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.166 80'
May 16 16:29:49.628: INFO: stderr: "+ echo hostName+ \nnc -v -t -w 2 10.152.183.166 80\nConnection to 10.152.183.166 80 port [tcp/http] succeeded!\n"
May 16 16:29:49.629: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-9974
May 16 16:29:49.642: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
May 16 16:29:51.650: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9974 to expose endpoints map[pod1:[80] pod2:[80]]
May 16 16:29:51.673: INFO: successfully validated that service endpoint-test2 in namespace services-9974 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
May 16 16:29:52.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9974 exec execpodfsvwn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
May 16 16:29:52.810: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
May 16 16:29:52.810: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:29:52.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9974 exec execpodfsvwn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.166 80'
May 16 16:29:52.957: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.166 80\nConnection to 10.152.183.166 80 port [tcp/http] succeeded!\n"
May 16 16:29:52.957: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-9974
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9974 to expose endpoints map[pod2:[80]]
May 16 16:29:54.020: INFO: successfully validated that service endpoint-test2 in namespace services-9974 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
May 16 16:29:55.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9974 exec execpodfsvwn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
May 16 16:29:55.160: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
May 16 16:29:55.160: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:29:55.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9974 exec execpodfsvwn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.166 80'
May 16 16:29:55.304: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.166 80\nConnection to 10.152.183.166 80 port [tcp/http] succeeded!\n"
May 16 16:29:55.304: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-9974
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9974 to expose endpoints map[]
May 16 16:29:56.345: INFO: successfully validated that service endpoint-test2 in namespace services-9974 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 16:29:56.367: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9974" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:13.349 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":356,"completed":50,"skipped":984,"failed":0}
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:29:56.386: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9558
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
May 16 16:29:56.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-9558 create -f -'
May 16 16:29:57.522: INFO: stderr: ""
May 16 16:29:57.522: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
May 16 16:29:58.532: INFO: Selector matched 1 pods for map[app:agnhost]
May 16 16:29:58.532: INFO: Found 0 / 1
May 16 16:29:59.530: INFO: Selector matched 1 pods for map[app:agnhost]
May 16 16:29:59.530: INFO: Found 1 / 1
May 16 16:29:59.531: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
May 16 16:29:59.535: INFO: Selector matched 1 pods for map[app:agnhost]
May 16 16:29:59.535: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
May 16 16:29:59.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-9558 patch pod agnhost-primary-q9ff6 -p {"metadata":{"annotations":{"x":"y"}}}'
May 16 16:29:59.615: INFO: stderr: ""
May 16 16:29:59.615: INFO: stdout: "pod/agnhost-primary-q9ff6 patched\n"
STEP: checking annotations
May 16 16:29:59.621: INFO: Selector matched 1 pods for map[app:agnhost]
May 16 16:29:59.621: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 16:29:59.621: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9558" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":356,"completed":51,"skipped":989,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:29:59.636: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6957
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-1bd1f142-600e-4bb3-bbf2-f30a16934ace
STEP: Creating a pod to test consume secrets
May 16 16:29:59.802: INFO: Waiting up to 5m0s for pod "pod-secrets-e8d22191-9f6e-4ab9-8bb5-e67df557fa79" in namespace "secrets-6957" to be "Succeeded or Failed"
May 16 16:29:59.811: INFO: Pod "pod-secrets-e8d22191-9f6e-4ab9-8bb5-e67df557fa79": Phase="Pending", Reason="", readiness=false. Elapsed: 8.132754ms
May 16 16:30:01.821: INFO: Pod "pod-secrets-e8d22191-9f6e-4ab9-8bb5-e67df557fa79": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018163196s
May 16 16:30:03.834: INFO: Pod "pod-secrets-e8d22191-9f6e-4ab9-8bb5-e67df557fa79": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031508623s
STEP: Saw pod success
May 16 16:30:03.834: INFO: Pod "pod-secrets-e8d22191-9f6e-4ab9-8bb5-e67df557fa79" satisfied condition "Succeeded or Failed"
May 16 16:30:03.839: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-secrets-e8d22191-9f6e-4ab9-8bb5-e67df557fa79 container secret-volume-test: <nil>
STEP: delete the pod
May 16 16:30:03.881: INFO: Waiting for pod pod-secrets-e8d22191-9f6e-4ab9-8bb5-e67df557fa79 to disappear
May 16 16:30:03.887: INFO: Pod pod-secrets-e8d22191-9f6e-4ab9-8bb5-e67df557fa79 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
May 16 16:30:03.887: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6957" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":52,"skipped":1018,"failed":0}
SSSS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:30:03.902: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8619
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
May 16 16:30:04.066: INFO: Waiting up to 5m0s for pod "downward-api-8f4977ff-6b29-4e48-9e1f-100c9de0fc36" in namespace "downward-api-8619" to be "Succeeded or Failed"
May 16 16:30:04.070: INFO: Pod "downward-api-8f4977ff-6b29-4e48-9e1f-100c9de0fc36": Phase="Pending", Reason="", readiness=false. Elapsed: 3.969241ms
May 16 16:30:06.078: INFO: Pod "downward-api-8f4977ff-6b29-4e48-9e1f-100c9de0fc36": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012743555s
May 16 16:30:08.086: INFO: Pod "downward-api-8f4977ff-6b29-4e48-9e1f-100c9de0fc36": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020237978s
STEP: Saw pod success
May 16 16:30:08.086: INFO: Pod "downward-api-8f4977ff-6b29-4e48-9e1f-100c9de0fc36" satisfied condition "Succeeded or Failed"
May 16 16:30:08.091: INFO: Trying to get logs from node ip-172-31-76-3 pod downward-api-8f4977ff-6b29-4e48-9e1f-100c9de0fc36 container dapi-container: <nil>
STEP: delete the pod
May 16 16:30:08.117: INFO: Waiting for pod downward-api-8f4977ff-6b29-4e48-9e1f-100c9de0fc36 to disappear
May 16 16:30:08.121: INFO: Pod downward-api-8f4977ff-6b29-4e48-9e1f-100c9de0fc36 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
May 16 16:30:08.121: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8619" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":356,"completed":53,"skipped":1022,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:30:08.135: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-747
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
May 16 16:30:08.328: INFO: The status of Pod labelsupdatebe6fb5a1-b1b8-4e07-8e9f-90d8c86f10ec is Pending, waiting for it to be Running (with Ready = true)
May 16 16:30:10.339: INFO: The status of Pod labelsupdatebe6fb5a1-b1b8-4e07-8e9f-90d8c86f10ec is Running (Ready = true)
May 16 16:30:10.870: INFO: Successfully updated pod "labelsupdatebe6fb5a1-b1b8-4e07-8e9f-90d8c86f10ec"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
May 16 16:30:14.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-747" for this suite.

• [SLOW TEST:6.795 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":54,"skipped":1039,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:30:14.931: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6828
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 16:30:15.601: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 16:30:18.636: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:30:18.644: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6219-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:30:21.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6828" for this suite.
STEP: Destroying namespace "webhook-6828-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:7.010 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":356,"completed":55,"skipped":1064,"failed":0}
SSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:30:21.941: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-8575
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:30:24.130: INFO: Deleting pod "var-expansion-6086ccb7-541e-4f07-839d-0df81e618252" in namespace "var-expansion-8575"
May 16 16:30:24.141: INFO: Wait up to 5m0s for pod "var-expansion-6086ccb7-541e-4f07-839d-0df81e618252" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
May 16 16:30:26.153: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-8575" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":356,"completed":56,"skipped":1071,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:30:26.168: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-5819
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Indexed job
STEP: Ensuring job reaches completions
STEP: Ensuring pods with index for job exist
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
May 16 16:30:38.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-5819" for this suite.

• [SLOW TEST:12.195 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]","total":356,"completed":57,"skipped":1101,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:30:38.363: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-34
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name projected-secret-test-3915dc73-cfc5-4333-8517-3033e9f49320
STEP: Creating a pod to test consume secrets
May 16 16:30:38.545: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-08290fae-dcc1-4813-8029-671f481c7cc9" in namespace "projected-34" to be "Succeeded or Failed"
May 16 16:30:38.548: INFO: Pod "pod-projected-secrets-08290fae-dcc1-4813-8029-671f481c7cc9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.701408ms
May 16 16:30:40.559: INFO: Pod "pod-projected-secrets-08290fae-dcc1-4813-8029-671f481c7cc9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013902706s
May 16 16:30:42.566: INFO: Pod "pod-projected-secrets-08290fae-dcc1-4813-8029-671f481c7cc9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021766328s
STEP: Saw pod success
May 16 16:30:42.566: INFO: Pod "pod-projected-secrets-08290fae-dcc1-4813-8029-671f481c7cc9" satisfied condition "Succeeded or Failed"
May 16 16:30:42.572: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-projected-secrets-08290fae-dcc1-4813-8029-671f481c7cc9 container secret-volume-test: <nil>
STEP: delete the pod
May 16 16:30:42.595: INFO: Waiting for pod pod-projected-secrets-08290fae-dcc1-4813-8029-671f481c7cc9 to disappear
May 16 16:30:42.598: INFO: Pod pod-projected-secrets-08290fae-dcc1-4813-8029-671f481c7cc9 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
May 16 16:30:42.598: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-34" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":58,"skipped":1141,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:30:42.614: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-2807
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-2807
STEP: creating a selector
STEP: Creating the service pods in kubernetes
May 16 16:30:42.757: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
May 16 16:30:42.816: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
May 16 16:30:44.825: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:30:46.825: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:30:48.827: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:30:50.826: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:30:52.826: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:30:54.826: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:30:56.825: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:30:58.825: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:31:00.828: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:31:02.826: INFO: The status of Pod netserver-0 is Running (Ready = true)
May 16 16:31:02.836: INFO: The status of Pod netserver-1 is Running (Ready = true)
May 16 16:31:02.850: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
May 16 16:31:04.879: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
May 16 16:31:04.879: INFO: Breadth first check of 192.168.46.111 on host 172.31.10.138...
May 16 16:31:04.885: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.238.166:9080/dial?request=hostname&protocol=http&host=192.168.46.111&port=8083&tries=1'] Namespace:pod-network-test-2807 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 16:31:04.885: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 16:31:04.885: INFO: ExecWithOptions: Clientset creation
May 16 16:31:04.885: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2807/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.238.166%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.46.111%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
May 16 16:31:04.983: INFO: Waiting for responses: map[]
May 16 16:31:04.983: INFO: reached 192.168.46.111 after 0/1 tries
May 16 16:31:04.983: INFO: Breadth first check of 192.168.49.246 on host 172.31.36.36...
May 16 16:31:04.988: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.238.166:9080/dial?request=hostname&protocol=http&host=192.168.49.246&port=8083&tries=1'] Namespace:pod-network-test-2807 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 16:31:04.988: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 16:31:04.989: INFO: ExecWithOptions: Clientset creation
May 16 16:31:04.989: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2807/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.238.166%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.49.246%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
May 16 16:31:05.086: INFO: Waiting for responses: map[]
May 16 16:31:05.086: INFO: reached 192.168.49.246 after 0/1 tries
May 16 16:31:05.086: INFO: Breadth first check of 192.168.238.165 on host 172.31.76.3...
May 16 16:31:05.094: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.238.166:9080/dial?request=hostname&protocol=http&host=192.168.238.165&port=8083&tries=1'] Namespace:pod-network-test-2807 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 16:31:05.094: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 16:31:05.094: INFO: ExecWithOptions: Clientset creation
May 16 16:31:05.094: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2807/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.238.166%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.238.165%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
May 16 16:31:05.186: INFO: Waiting for responses: map[]
May 16 16:31:05.186: INFO: reached 192.168.238.165 after 0/1 tries
May 16 16:31:05.186: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
May 16 16:31:05.186: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-2807" for this suite.

• [SLOW TEST:22.587 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":356,"completed":59,"skipped":1174,"failed":0}
SS
------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:31:05.202: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6671
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-7e6fe893-7fd8-4a17-a4c7-9a16a12df8e2
STEP: Creating the pod
May 16 16:31:05.378: INFO: The status of Pod pod-configmaps-1d59faa4-93f1-4b65-a4b9-b88513f53aeb is Pending, waiting for it to be Running (with Ready = true)
May 16 16:31:07.387: INFO: The status of Pod pod-configmaps-1d59faa4-93f1-4b65-a4b9-b88513f53aeb is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-7e6fe893-7fd8-4a17-a4c7-9a16a12df8e2
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
May 16 16:31:09.427: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6671" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":60,"skipped":1176,"failed":0}
S
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:31:09.448: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-8770
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
May 16 16:31:11.656: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-8770" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]","total":356,"completed":61,"skipped":1177,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:31:11.669: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-9696
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
May 16 16:31:15.843: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-9696" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":356,"completed":62,"skipped":1186,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:31:15.860: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5044
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5044
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating stateful set ss in namespace statefulset-5044
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5044
May 16 16:31:16.031: INFO: Found 0 stateful pods, waiting for 1
May 16 16:31:26.049: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
May 16 16:31:26.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-5044 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
May 16 16:31:26.192: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
May 16 16:31:26.192: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
May 16 16:31:26.192: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

May 16 16:31:26.199: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
May 16 16:31:36.204: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
May 16 16:31:36.204: INFO: Waiting for statefulset status.replicas updated to 0
May 16 16:31:36.229: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
May 16 16:31:36.229: INFO: ss-0  ip-172-31-76-3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:16 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:16 +0000 UTC  }]
May 16 16:31:36.229: INFO: 
May 16 16:31:36.229: INFO: StatefulSet ss has not reached scale 3, at 1
May 16 16:31:37.236: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994518379s
May 16 16:31:38.245: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.987027766s
May 16 16:31:39.253: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.978613103s
May 16 16:31:40.261: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.970237694s
May 16 16:31:41.267: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.962231255s
May 16 16:31:42.274: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.956098799s
May 16 16:31:43.284: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.948927433s
May 16 16:31:44.292: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.938272706s
May 16 16:31:45.302: INFO: Verifying statefulset ss doesn't scale past 3 for another 930.388722ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5044
May 16 16:31:46.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-5044 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
May 16 16:31:46.460: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
May 16 16:31:46.460: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
May 16 16:31:46.460: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

May 16 16:31:46.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-5044 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
May 16 16:31:46.621: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
May 16 16:31:46.621: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
May 16 16:31:46.621: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

May 16 16:31:46.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-5044 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
May 16 16:31:46.781: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
May 16 16:31:46.781: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
May 16 16:31:46.781: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

May 16 16:31:46.788: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
May 16 16:31:56.797: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:31:56.797: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:31:56.797: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
May 16 16:31:56.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-5044 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
May 16 16:31:56.951: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
May 16 16:31:56.951: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
May 16 16:31:56.951: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

May 16 16:31:56.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-5044 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
May 16 16:31:57.123: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
May 16 16:31:57.123: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
May 16 16:31:57.123: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

May 16 16:31:57.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-5044 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
May 16 16:31:57.275: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
May 16 16:31:57.275: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
May 16 16:31:57.275: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

May 16 16:31:57.275: INFO: Waiting for statefulset status.replicas updated to 0
May 16 16:31:57.284: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 1
May 16 16:32:07.299: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
May 16 16:32:07.299: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
May 16 16:32:07.299: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
May 16 16:32:07.315: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
May 16 16:32:07.315: INFO: ss-0  ip-172-31-76-3    Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:16 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:16 +0000 UTC  }]
May 16 16:32:07.315: INFO: ss-1  ip-172-31-36-36   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:36 +0000 UTC  }]
May 16 16:32:07.315: INFO: ss-2  ip-172-31-10-138  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:58 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:58 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:36 +0000 UTC  }]
May 16 16:32:07.315: INFO: 
May 16 16:32:07.315: INFO: StatefulSet ss has not reached scale 0, at 3
May 16 16:32:08.320: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
May 16 16:32:08.320: INFO: ss-0  ip-172-31-76-3  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:16 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 16:31:16 +0000 UTC  }]
May 16 16:32:08.320: INFO: 
May 16 16:32:08.320: INFO: StatefulSet ss has not reached scale 0, at 1
May 16 16:32:09.326: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.989737565s
May 16 16:32:10.336: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.983268312s
May 16 16:32:11.342: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.973443463s
May 16 16:32:12.351: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.967469772s
May 16 16:32:13.360: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.95813238s
May 16 16:32:14.367: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.949579188s
May 16 16:32:15.376: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.942509895s
May 16 16:32:16.381: INFO: Verifying statefulset ss doesn't scale past 0 for another 933.906101ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5044
May 16 16:32:17.391: INFO: Scaling statefulset ss to 0
May 16 16:32:17.410: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
May 16 16:32:17.413: INFO: Deleting all statefulset in ns statefulset-5044
May 16 16:32:17.418: INFO: Scaling statefulset ss to 0
May 16 16:32:17.431: INFO: Waiting for statefulset status.replicas updated to 0
May 16 16:32:17.436: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
May 16 16:32:17.451: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5044" for this suite.

• [SLOW TEST:61.603 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":356,"completed":63,"skipped":1257,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:32:17.463: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-7205
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
May 16 16:32:17.619: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7205  9d290c66-84bd-4da5-b29a-7972996610df 11758 0 2022-05-16 16:32:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-05-16 16:32:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 16:32:17.619: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7205  9d290c66-84bd-4da5-b29a-7972996610df 11758 0 2022-05-16 16:32:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-05-16 16:32:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
May 16 16:32:17.629: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7205  9d290c66-84bd-4da5-b29a-7972996610df 11759 0 2022-05-16 16:32:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-05-16 16:32:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 16:32:17.630: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7205  9d290c66-84bd-4da5-b29a-7972996610df 11759 0 2022-05-16 16:32:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-05-16 16:32:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
May 16 16:32:17.640: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7205  9d290c66-84bd-4da5-b29a-7972996610df 11760 0 2022-05-16 16:32:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-05-16 16:32:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 16:32:17.641: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7205  9d290c66-84bd-4da5-b29a-7972996610df 11760 0 2022-05-16 16:32:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-05-16 16:32:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
May 16 16:32:17.649: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7205  9d290c66-84bd-4da5-b29a-7972996610df 11761 0 2022-05-16 16:32:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-05-16 16:32:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 16:32:17.650: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7205  9d290c66-84bd-4da5-b29a-7972996610df 11761 0 2022-05-16 16:32:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-05-16 16:32:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
May 16 16:32:17.655: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7205  fa51bd95-93fe-408c-8b4b-57ef2cb5f3de 11762 0 2022-05-16 16:32:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-05-16 16:32:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 16:32:17.655: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7205  fa51bd95-93fe-408c-8b4b-57ef2cb5f3de 11762 0 2022-05-16 16:32:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-05-16 16:32:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
May 16 16:32:27.674: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7205  fa51bd95-93fe-408c-8b4b-57ef2cb5f3de 11814 0 2022-05-16 16:32:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-05-16 16:32:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 16:32:27.674: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7205  fa51bd95-93fe-408c-8b4b-57ef2cb5f3de 11814 0 2022-05-16 16:32:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-05-16 16:32:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
May 16 16:32:37.675: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-7205" for this suite.

• [SLOW TEST:20.232 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":356,"completed":64,"skipped":1274,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:32:37.696: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename certificates
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in certificates-4358
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
May 16 16:32:39.131: INFO: starting watch
STEP: patching
STEP: updating
May 16 16:32:39.145: INFO: waiting for watch events with expected annotations
May 16 16:32:39.145: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:32:39.258: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-4358" for this suite.
•{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":356,"completed":65,"skipped":1309,"failed":0}
S
------------------------------
[sig-node] Containers 
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:32:39.270: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-2927
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override arguments
May 16 16:32:39.441: INFO: Waiting up to 5m0s for pod "client-containers-c73c5900-b71e-406f-b6e9-cb5d17b3b177" in namespace "containers-2927" to be "Succeeded or Failed"
May 16 16:32:39.455: INFO: Pod "client-containers-c73c5900-b71e-406f-b6e9-cb5d17b3b177": Phase="Pending", Reason="", readiness=false. Elapsed: 13.27986ms
May 16 16:32:41.461: INFO: Pod "client-containers-c73c5900-b71e-406f-b6e9-cb5d17b3b177": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020031311s
May 16 16:32:43.473: INFO: Pod "client-containers-c73c5900-b71e-406f-b6e9-cb5d17b3b177": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031142341s
STEP: Saw pod success
May 16 16:32:43.473: INFO: Pod "client-containers-c73c5900-b71e-406f-b6e9-cb5d17b3b177" satisfied condition "Succeeded or Failed"
May 16 16:32:43.477: INFO: Trying to get logs from node ip-172-31-76-3 pod client-containers-c73c5900-b71e-406f-b6e9-cb5d17b3b177 container agnhost-container: <nil>
STEP: delete the pod
May 16 16:32:43.508: INFO: Waiting for pod client-containers-c73c5900-b71e-406f-b6e9-cb5d17b3b177 to disappear
May 16 16:32:43.513: INFO: Pod client-containers-c73c5900-b71e-406f-b6e9-cb5d17b3b177 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
May 16 16:32:43.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-2927" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]","total":356,"completed":66,"skipped":1310,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:32:43.526: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-94
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-94/configmap-test-5028e79b-055d-4e7e-886c-f26c444c60a1
STEP: Creating a pod to test consume configMaps
May 16 16:32:43.681: INFO: Waiting up to 5m0s for pod "pod-configmaps-ce885fc5-e3e0-4272-a0e9-1cd542cc20c7" in namespace "configmap-94" to be "Succeeded or Failed"
May 16 16:32:43.685: INFO: Pod "pod-configmaps-ce885fc5-e3e0-4272-a0e9-1cd542cc20c7": Phase="Pending", Reason="", readiness=false. Elapsed: 3.226431ms
May 16 16:32:45.696: INFO: Pod "pod-configmaps-ce885fc5-e3e0-4272-a0e9-1cd542cc20c7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014680244s
May 16 16:32:47.709: INFO: Pod "pod-configmaps-ce885fc5-e3e0-4272-a0e9-1cd542cc20c7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027074322s
STEP: Saw pod success
May 16 16:32:47.709: INFO: Pod "pod-configmaps-ce885fc5-e3e0-4272-a0e9-1cd542cc20c7" satisfied condition "Succeeded or Failed"
May 16 16:32:47.713: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-configmaps-ce885fc5-e3e0-4272-a0e9-1cd542cc20c7 container env-test: <nil>
STEP: delete the pod
May 16 16:32:47.739: INFO: Waiting for pod pod-configmaps-ce885fc5-e3e0-4272-a0e9-1cd542cc20c7 to disappear
May 16 16:32:47.744: INFO: Pod pod-configmaps-ce885fc5-e3e0-4272-a0e9-1cd542cc20c7 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
May 16 16:32:47.744: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-94" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":67,"skipped":1330,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:32:47.767: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7334
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-4130437a-3b65-4cae-a33c-d0fbd1e0b6d8
STEP: Creating a pod to test consume secrets
May 16 16:32:47.925: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-d7f2def3-4582-4dad-8f18-19b87feb7a55" in namespace "projected-7334" to be "Succeeded or Failed"
May 16 16:32:47.928: INFO: Pod "pod-projected-secrets-d7f2def3-4582-4dad-8f18-19b87feb7a55": Phase="Pending", Reason="", readiness=false. Elapsed: 3.419636ms
May 16 16:32:49.937: INFO: Pod "pod-projected-secrets-d7f2def3-4582-4dad-8f18-19b87feb7a55": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012745659s
May 16 16:32:51.946: INFO: Pod "pod-projected-secrets-d7f2def3-4582-4dad-8f18-19b87feb7a55": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021064464s
STEP: Saw pod success
May 16 16:32:51.946: INFO: Pod "pod-projected-secrets-d7f2def3-4582-4dad-8f18-19b87feb7a55" satisfied condition "Succeeded or Failed"
May 16 16:32:51.949: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-projected-secrets-d7f2def3-4582-4dad-8f18-19b87feb7a55 container projected-secret-volume-test: <nil>
STEP: delete the pod
May 16 16:32:51.982: INFO: Waiting for pod pod-projected-secrets-d7f2def3-4582-4dad-8f18-19b87feb7a55 to disappear
May 16 16:32:51.988: INFO: Pod pod-projected-secrets-d7f2def3-4582-4dad-8f18-19b87feb7a55 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
May 16 16:32:51.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7334" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":68,"skipped":1352,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:32:52.001: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-5268
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 16:32:52.152: INFO: Waiting up to 5m0s for pod "downwardapi-volume-57db7950-ad24-44bb-80c9-8161c41ab51e" in namespace "downward-api-5268" to be "Succeeded or Failed"
May 16 16:32:52.160: INFO: Pod "downwardapi-volume-57db7950-ad24-44bb-80c9-8161c41ab51e": Phase="Pending", Reason="", readiness=false. Elapsed: 7.301124ms
May 16 16:32:54.170: INFO: Pod "downwardapi-volume-57db7950-ad24-44bb-80c9-8161c41ab51e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017551206s
May 16 16:32:56.175: INFO: Pod "downwardapi-volume-57db7950-ad24-44bb-80c9-8161c41ab51e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022960036s
STEP: Saw pod success
May 16 16:32:56.175: INFO: Pod "downwardapi-volume-57db7950-ad24-44bb-80c9-8161c41ab51e" satisfied condition "Succeeded or Failed"
May 16 16:32:56.181: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-57db7950-ad24-44bb-80c9-8161c41ab51e container client-container: <nil>
STEP: delete the pod
May 16 16:32:56.206: INFO: Waiting for pod downwardapi-volume-57db7950-ad24-44bb-80c9-8161c41ab51e to disappear
May 16 16:32:56.210: INFO: Pod downwardapi-volume-57db7950-ad24-44bb-80c9-8161c41ab51e no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
May 16 16:32:56.210: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-5268" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":69,"skipped":1369,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:32:56.226: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-911
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:58
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:32:56.470: INFO: The status of Pod test-webserver-bec591c3-f272-4482-b722-a6b3304fc4c9 is Pending, waiting for it to be Running (with Ready = true)
May 16 16:32:58.478: INFO: The status of Pod test-webserver-bec591c3-f272-4482-b722-a6b3304fc4c9 is Running (Ready = false)
May 16 16:33:00.483: INFO: The status of Pod test-webserver-bec591c3-f272-4482-b722-a6b3304fc4c9 is Running (Ready = false)
May 16 16:33:02.481: INFO: The status of Pod test-webserver-bec591c3-f272-4482-b722-a6b3304fc4c9 is Running (Ready = false)
May 16 16:33:04.479: INFO: The status of Pod test-webserver-bec591c3-f272-4482-b722-a6b3304fc4c9 is Running (Ready = false)
May 16 16:33:06.477: INFO: The status of Pod test-webserver-bec591c3-f272-4482-b722-a6b3304fc4c9 is Running (Ready = false)
May 16 16:33:08.479: INFO: The status of Pod test-webserver-bec591c3-f272-4482-b722-a6b3304fc4c9 is Running (Ready = false)
May 16 16:33:10.482: INFO: The status of Pod test-webserver-bec591c3-f272-4482-b722-a6b3304fc4c9 is Running (Ready = false)
May 16 16:33:12.478: INFO: The status of Pod test-webserver-bec591c3-f272-4482-b722-a6b3304fc4c9 is Running (Ready = false)
May 16 16:33:14.481: INFO: The status of Pod test-webserver-bec591c3-f272-4482-b722-a6b3304fc4c9 is Running (Ready = false)
May 16 16:33:16.476: INFO: The status of Pod test-webserver-bec591c3-f272-4482-b722-a6b3304fc4c9 is Running (Ready = true)
May 16 16:33:16.481: INFO: Container started at 2022-05-16 16:32:57 +0000 UTC, pod became ready at 2022-05-16 16:33:16 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
May 16 16:33:16.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-911" for this suite.

• [SLOW TEST:20.271 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":356,"completed":70,"skipped":1397,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:33:16.497: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-8396
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:33:16.646: INFO: Creating deployment "test-recreate-deployment"
May 16 16:33:16.653: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
May 16 16:33:16.665: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
May 16 16:33:18.675: INFO: Waiting deployment "test-recreate-deployment" to complete
May 16 16:33:18.680: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
May 16 16:33:18.693: INFO: Updating deployment test-recreate-deployment
May 16 16:33:18.693: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
May 16 16:33:18.811: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-8396  3acac09a-9723-4c0d-82bd-6b2448b5a871 12153 2 2022-05-16 16:33:16 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-05-16 16:33:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 16:33:18 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00137e658 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-05-16 16:33:18 +0000 UTC,LastTransitionTime:2022-05-16 16:33:18 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cd8586fc7" is progressing.,LastUpdateTime:2022-05-16 16:33:18 +0000 UTC,LastTransitionTime:2022-05-16 16:33:16 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

May 16 16:33:18.817: INFO: New ReplicaSet "test-recreate-deployment-cd8586fc7" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cd8586fc7  deployment-8396  4e4e221c-47b6-4f9d-bccb-d5d4d4a9b92e 12149 1 2022-05-16 16:33:18 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 3acac09a-9723-4c0d-82bd-6b2448b5a871 0xc003516a10 0xc003516a11}] []  [{kube-controller-manager Update apps/v1 2022-05-16 16:33:18 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3acac09a-9723-4c0d-82bd-6b2448b5a871\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 16:33:18 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cd8586fc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003516aa8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
May 16 16:33:18.817: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
May 16 16:33:18.818: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-848969dbcd  deployment-8396  6e1b3e6c-e07b-4726-af77-67cdf1aadd4f 12141 2 2022-05-16 16:33:16 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:848969dbcd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 3acac09a-9723-4c0d-82bd-6b2448b5a871 0xc0035168f7 0xc0035168f8}] []  [{kube-controller-manager Update apps/v1 2022-05-16 16:33:16 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3acac09a-9723-4c0d-82bd-6b2448b5a871\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 16:33:18 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 848969dbcd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:848969dbcd] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.36 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0035169a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
May 16 16:33:18.822: INFO: Pod "test-recreate-deployment-cd8586fc7-2gmk7" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cd8586fc7-2gmk7 test-recreate-deployment-cd8586fc7- deployment-8396  a9708fd6-543f-4247-835c-8a28e956f88f 12152 0 2022-05-16 16:33:18 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-recreate-deployment-cd8586fc7 4e4e221c-47b6-4f9d-bccb-d5d4d4a9b92e 0xc00137e9e0 0xc00137e9e1}] []  [{kube-controller-manager Update v1 2022-05-16 16:33:18 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4e4e221c-47b6-4f9d-bccb-d5d4d4a9b92e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:33:18 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-l5lkc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-l5lkc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:33:18 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:33:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:33:18 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:33:18 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:,StartTime:2022-05-16 16:33:18 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
May 16 16:33:18.822: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-8396" for this suite.
•{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":71,"skipped":1426,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:33:18.839: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-5458
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
May 16 16:33:19.453: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 16:33:22.490: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:33:22.499: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:33:25.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-5458" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:6.885 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":356,"completed":72,"skipped":1433,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:33:25.724: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3398
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secret-namespace-164
STEP: Creating secret with name secret-test-42a8d2fe-415a-4519-811b-27a544b02fc7
STEP: Creating a pod to test consume secrets
May 16 16:33:26.028: INFO: Waiting up to 5m0s for pod "pod-secrets-891ea649-7d64-4694-b8b7-2b7dcec48785" in namespace "secrets-3398" to be "Succeeded or Failed"
May 16 16:33:26.036: INFO: Pod "pod-secrets-891ea649-7d64-4694-b8b7-2b7dcec48785": Phase="Pending", Reason="", readiness=false. Elapsed: 7.95235ms
May 16 16:33:28.048: INFO: Pod "pod-secrets-891ea649-7d64-4694-b8b7-2b7dcec48785": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019197702s
May 16 16:33:30.056: INFO: Pod "pod-secrets-891ea649-7d64-4694-b8b7-2b7dcec48785": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027146903s
STEP: Saw pod success
May 16 16:33:30.056: INFO: Pod "pod-secrets-891ea649-7d64-4694-b8b7-2b7dcec48785" satisfied condition "Succeeded or Failed"
May 16 16:33:30.061: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-secrets-891ea649-7d64-4694-b8b7-2b7dcec48785 container secret-volume-test: <nil>
STEP: delete the pod
May 16 16:33:30.085: INFO: Waiting for pod pod-secrets-891ea649-7d64-4694-b8b7-2b7dcec48785 to disappear
May 16 16:33:30.089: INFO: Pod pod-secrets-891ea649-7d64-4694-b8b7-2b7dcec48785 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
May 16 16:33:30.089: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3398" for this suite.
STEP: Destroying namespace "secret-namespace-164" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":356,"completed":73,"skipped":1444,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:33:30.120: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8944
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-905057d5-e25e-4a2e-9e1d-6b3670e41e78
STEP: Creating a pod to test consume secrets
May 16 16:33:30.299: INFO: Waiting up to 5m0s for pod "pod-secrets-a0b3d36c-63c1-4fc3-8010-80d4fe67c796" in namespace "secrets-8944" to be "Succeeded or Failed"
May 16 16:33:30.305: INFO: Pod "pod-secrets-a0b3d36c-63c1-4fc3-8010-80d4fe67c796": Phase="Pending", Reason="", readiness=false. Elapsed: 6.242249ms
May 16 16:33:32.314: INFO: Pod "pod-secrets-a0b3d36c-63c1-4fc3-8010-80d4fe67c796": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014633804s
May 16 16:33:34.325: INFO: Pod "pod-secrets-a0b3d36c-63c1-4fc3-8010-80d4fe67c796": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025594427s
STEP: Saw pod success
May 16 16:33:34.325: INFO: Pod "pod-secrets-a0b3d36c-63c1-4fc3-8010-80d4fe67c796" satisfied condition "Succeeded or Failed"
May 16 16:33:34.329: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-secrets-a0b3d36c-63c1-4fc3-8010-80d4fe67c796 container secret-env-test: <nil>
STEP: delete the pod
May 16 16:33:34.354: INFO: Waiting for pod pod-secrets-a0b3d36c-63c1-4fc3-8010-80d4fe67c796 to disappear
May 16 16:33:34.359: INFO: Pod pod-secrets-a0b3d36c-63c1-4fc3-8010-80d4fe67c796 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
May 16 16:33:34.359: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8944" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":356,"completed":74,"skipped":1471,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:33:34.373: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-8270
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
May 16 16:33:34.522: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
May 16 16:33:34.533: INFO: Waiting for terminating namespaces to be deleted...
May 16 16:33:34.537: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-10-138 before test
May 16 16:33:34.544: INFO: default-http-backend-kubernetes-worker-6c59687bf6-bxc6r from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 16:33:34.544: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
May 16 16:33:34.544: INFO: nginx-ingress-controller-kubernetes-worker-4x6kn from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 16:33:34.544: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
May 16 16:33:34.544: INFO: coredns-86c98bfcdb-xnh2b from kube-system started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 16:33:34.544: INFO: 	Container coredns ready: true, restart count 0
May 16 16:33:34.544: INFO: kube-state-metrics-5cdbfd47b4-dbz9m from kube-system started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 16:33:34.544: INFO: 	Container kube-state-metrics ready: true, restart count 0
May 16 16:33:34.544: INFO: metrics-server-v0.5.2-6bfd958b56-t6s8k from kube-system started at 2022-05-16 15:58:42 +0000 UTC (2 container statuses recorded)
May 16 16:33:34.544: INFO: 	Container metrics-server ready: true, restart count 0
May 16 16:33:34.544: INFO: 	Container metrics-server-nanny ready: true, restart count 0
May 16 16:33:34.544: INFO: dashboard-metrics-scraper-8669b59d4f-z7nkc from kubernetes-dashboard started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 16:33:34.544: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
May 16 16:33:34.544: INFO: kubernetes-dashboard-585fc6bc87-gx2d4 from kubernetes-dashboard started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 16:33:34.544: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
May 16 16:33:34.544: INFO: sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-tklm5 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 16:33:34.544: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 16:33:34.544: INFO: 	Container systemd-logs ready: true, restart count 0
May 16 16:33:34.544: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-36-36 before test
May 16 16:33:34.552: INFO: nginx-ingress-controller-kubernetes-worker-pbnpt from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:44 +0000 UTC (1 container statuses recorded)
May 16 16:33:34.553: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
May 16 16:33:34.553: INFO: calico-kube-controllers-5976989dd9-ckg7k from kube-system started at 2022-05-16 15:58:46 +0000 UTC (1 container statuses recorded)
May 16 16:33:34.553: INFO: 	Container calico-kube-controllers ready: true, restart count 0
May 16 16:33:34.553: INFO: sonobuoy-e2e-job-93ccb66985024e88 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 16:33:34.553: INFO: 	Container e2e ready: true, restart count 0
May 16 16:33:34.553: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 16:33:34.553: INFO: sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-sj7x5 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 16:33:34.553: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 16:33:34.553: INFO: 	Container systemd-logs ready: true, restart count 0
May 16 16:33:34.553: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-76-3 before test
May 16 16:33:34.584: INFO: nginx-ingress-controller-kubernetes-worker-fnf58 from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:52 +0000 UTC (1 container statuses recorded)
May 16 16:33:34.584: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
May 16 16:33:34.584: INFO: sonobuoy from sonobuoy started at 2022-05-16 16:12:03 +0000 UTC (1 container statuses recorded)
May 16 16:33:34.584: INFO: 	Container kube-sonobuoy ready: true, restart count 0
May 16 16:33:34.584: INFO: sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-zvgk8 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 16:33:34.584: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 16:33:34.584: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-8dd1a4ef-9bf8-4130-bf3d-60ed6f4a77ee 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-8dd1a4ef-9bf8-4130-bf3d-60ed6f4a77ee off the node ip-172-31-76-3
STEP: verifying the node doesn't have the label kubernetes.io/e2e-8dd1a4ef-9bf8-4130-bf3d-60ed6f4a77ee
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
May 16 16:33:38.698: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-8270" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":356,"completed":75,"skipped":1501,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:33:38.719: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1608
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting the proxy server
May 16 16:33:38.857: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-1608 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 16:33:38.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1608" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":356,"completed":76,"skipped":1515,"failed":0}
SSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:33:38.925: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-5895
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Deleting RuntimeClass runtimeclass-5895-delete-me
STEP: Waiting for the RuntimeClass to disappear
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
May 16 16:33:39.096: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-5895" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":77,"skipped":1523,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:33:39.109: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8677
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-478c3faa-e60d-4c33-979a-b83d9b97a45b
STEP: Creating a pod to test consume secrets
May 16 16:33:39.271: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-6dfa5886-dca0-4007-bad0-55d201792ca4" in namespace "projected-8677" to be "Succeeded or Failed"
May 16 16:33:39.276: INFO: Pod "pod-projected-secrets-6dfa5886-dca0-4007-bad0-55d201792ca4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.970544ms
May 16 16:33:41.282: INFO: Pod "pod-projected-secrets-6dfa5886-dca0-4007-bad0-55d201792ca4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011237678s
May 16 16:33:43.293: INFO: Pod "pod-projected-secrets-6dfa5886-dca0-4007-bad0-55d201792ca4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021711215s
STEP: Saw pod success
May 16 16:33:43.293: INFO: Pod "pod-projected-secrets-6dfa5886-dca0-4007-bad0-55d201792ca4" satisfied condition "Succeeded or Failed"
May 16 16:33:43.296: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-projected-secrets-6dfa5886-dca0-4007-bad0-55d201792ca4 container projected-secret-volume-test: <nil>
STEP: delete the pod
May 16 16:33:43.324: INFO: Waiting for pod pod-projected-secrets-6dfa5886-dca0-4007-bad0-55d201792ca4 to disappear
May 16 16:33:43.328: INFO: Pod pod-projected-secrets-6dfa5886-dca0-4007-bad0-55d201792ca4 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
May 16 16:33:43.328: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8677" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":78,"skipped":1535,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:33:43.340: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-1321
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-1321
STEP: creating a selector
STEP: Creating the service pods in kubernetes
May 16 16:33:43.483: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
May 16 16:33:43.533: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
May 16 16:33:45.542: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:33:47.544: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:33:49.540: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:33:51.542: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:33:53.542: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:33:55.544: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:33:57.542: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:33:59.541: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:34:01.541: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:34:03.548: INFO: The status of Pod netserver-0 is Running (Ready = true)
May 16 16:34:03.562: INFO: The status of Pod netserver-1 is Running (Ready = false)
May 16 16:34:05.574: INFO: The status of Pod netserver-1 is Running (Ready = true)
May 16 16:34:05.584: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
May 16 16:34:07.638: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
May 16 16:34:07.638: INFO: Going to poll 192.168.46.113 on port 8083 at least 0 times, with a maximum of 39 tries before failing
May 16 16:34:07.642: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.46.113:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1321 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 16:34:07.642: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 16:34:07.643: INFO: ExecWithOptions: Clientset creation
May 16 16:34:07.643: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1321/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.46.113%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
May 16 16:34:07.729: INFO: Found all 1 expected endpoints: [netserver-0]
May 16 16:34:07.729: INFO: Going to poll 192.168.49.250 on port 8083 at least 0 times, with a maximum of 39 tries before failing
May 16 16:34:07.735: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.49.250:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1321 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 16:34:07.735: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 16:34:07.735: INFO: ExecWithOptions: Clientset creation
May 16 16:34:07.735: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1321/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.49.250%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
May 16 16:34:07.818: INFO: Found all 1 expected endpoints: [netserver-1]
May 16 16:34:07.818: INFO: Going to poll 192.168.238.172 on port 8083 at least 0 times, with a maximum of 39 tries before failing
May 16 16:34:07.823: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.238.172:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1321 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 16:34:07.823: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 16:34:07.823: INFO: ExecWithOptions: Clientset creation
May 16 16:34:07.823: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1321/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.238.172%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
May 16 16:34:07.910: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
May 16 16:34:07.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-1321" for this suite.

• [SLOW TEST:24.588 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":79,"skipped":1566,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:34:07.929: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1991
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-56f1f404-748a-4206-a75a-16e14df5ba73
STEP: Creating a pod to test consume secrets
May 16 16:34:08.094: INFO: Waiting up to 5m0s for pod "pod-secrets-b53c4494-ee2c-4106-aac4-5bace1241c78" in namespace "secrets-1991" to be "Succeeded or Failed"
May 16 16:34:08.101: INFO: Pod "pod-secrets-b53c4494-ee2c-4106-aac4-5bace1241c78": Phase="Pending", Reason="", readiness=false. Elapsed: 6.348431ms
May 16 16:34:10.112: INFO: Pod "pod-secrets-b53c4494-ee2c-4106-aac4-5bace1241c78": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017224078s
May 16 16:34:12.119: INFO: Pod "pod-secrets-b53c4494-ee2c-4106-aac4-5bace1241c78": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024954791s
STEP: Saw pod success
May 16 16:34:12.120: INFO: Pod "pod-secrets-b53c4494-ee2c-4106-aac4-5bace1241c78" satisfied condition "Succeeded or Failed"
May 16 16:34:12.125: INFO: Trying to get logs from node ip-172-31-36-36 pod pod-secrets-b53c4494-ee2c-4106-aac4-5bace1241c78 container secret-volume-test: <nil>
STEP: delete the pod
May 16 16:34:12.170: INFO: Waiting for pod pod-secrets-b53c4494-ee2c-4106-aac4-5bace1241c78 to disappear
May 16 16:34:12.173: INFO: Pod pod-secrets-b53c4494-ee2c-4106-aac4-5bace1241c78 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
May 16 16:34:12.174: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1991" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":80,"skipped":1610,"failed":0}
SSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:34:12.186: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-1738
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in volume subpath
May 16 16:34:12.339: INFO: Waiting up to 5m0s for pod "var-expansion-ce83e64f-8c46-41b0-be15-79b69ca96765" in namespace "var-expansion-1738" to be "Succeeded or Failed"
May 16 16:34:12.344: INFO: Pod "var-expansion-ce83e64f-8c46-41b0-be15-79b69ca96765": Phase="Pending", Reason="", readiness=false. Elapsed: 4.448348ms
May 16 16:34:14.353: INFO: Pod "var-expansion-ce83e64f-8c46-41b0-be15-79b69ca96765": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013713282s
May 16 16:34:16.360: INFO: Pod "var-expansion-ce83e64f-8c46-41b0-be15-79b69ca96765": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020406157s
May 16 16:34:18.371: INFO: Pod "var-expansion-ce83e64f-8c46-41b0-be15-79b69ca96765": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.031373412s
STEP: Saw pod success
May 16 16:34:18.371: INFO: Pod "var-expansion-ce83e64f-8c46-41b0-be15-79b69ca96765" satisfied condition "Succeeded or Failed"
May 16 16:34:18.374: INFO: Trying to get logs from node ip-172-31-36-36 pod var-expansion-ce83e64f-8c46-41b0-be15-79b69ca96765 container dapi-container: <nil>
STEP: delete the pod
May 16 16:34:18.401: INFO: Waiting for pod var-expansion-ce83e64f-8c46-41b0-be15-79b69ca96765 to disappear
May 16 16:34:18.406: INFO: Pod var-expansion-ce83e64f-8c46-41b0-be15-79b69ca96765 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
May 16 16:34:18.406: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-1738" for this suite.

• [SLOW TEST:6.233 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":356,"completed":81,"skipped":1616,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:34:18.419: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3966
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
May 16 16:34:18.564: INFO: namespace kubectl-3966
May 16 16:34:18.564: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-3966 create -f -'
May 16 16:34:19.723: INFO: stderr: ""
May 16 16:34:19.723: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
May 16 16:34:20.733: INFO: Selector matched 1 pods for map[app:agnhost]
May 16 16:34:20.733: INFO: Found 0 / 1
May 16 16:34:21.731: INFO: Selector matched 1 pods for map[app:agnhost]
May 16 16:34:21.731: INFO: Found 1 / 1
May 16 16:34:21.731: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
May 16 16:34:21.736: INFO: Selector matched 1 pods for map[app:agnhost]
May 16 16:34:21.736: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
May 16 16:34:21.736: INFO: wait on agnhost-primary startup in kubectl-3966 
May 16 16:34:21.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-3966 logs agnhost-primary-tsfwb agnhost-primary'
May 16 16:34:21.818: INFO: stderr: ""
May 16 16:34:21.818: INFO: stdout: "Paused\n"
STEP: exposing RC
May 16 16:34:21.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-3966 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
May 16 16:34:21.898: INFO: stderr: ""
May 16 16:34:21.898: INFO: stdout: "service/rm2 exposed\n"
May 16 16:34:21.903: INFO: Service rm2 in namespace kubectl-3966 found.
STEP: exposing service
May 16 16:34:23.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-3966 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
May 16 16:34:23.997: INFO: stderr: ""
May 16 16:34:23.997: INFO: stdout: "service/rm3 exposed\n"
May 16 16:34:24.002: INFO: Service rm3 in namespace kubectl-3966 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 16:34:26.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3966" for this suite.

• [SLOW TEST:7.611 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1249
    should create services for rc  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":356,"completed":82,"skipped":1633,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:34:26.030: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8420
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching services
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 16:34:26.185: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8420" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760
•{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":356,"completed":83,"skipped":1648,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:34:26.200: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-6412
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
May 16 16:34:26.666: INFO: Pod name wrapped-volume-race-0fe9a002-97c4-4aa9-863e-fbae95bb9559: Found 0 pods out of 5
May 16 16:34:31.676: INFO: Pod name wrapped-volume-race-0fe9a002-97c4-4aa9-863e-fbae95bb9559: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-0fe9a002-97c4-4aa9-863e-fbae95bb9559 in namespace emptydir-wrapper-6412, will wait for the garbage collector to delete the pods
May 16 16:34:41.791: INFO: Deleting ReplicationController wrapped-volume-race-0fe9a002-97c4-4aa9-863e-fbae95bb9559 took: 9.290751ms
May 16 16:34:41.992: INFO: Terminating ReplicationController wrapped-volume-race-0fe9a002-97c4-4aa9-863e-fbae95bb9559 pods took: 200.930496ms
STEP: Creating RC which spawns configmap-volume pods
May 16 16:34:46.314: INFO: Pod name wrapped-volume-race-f5c80163-138a-4d3c-b1b3-158faf46cd6a: Found 0 pods out of 5
May 16 16:34:51.327: INFO: Pod name wrapped-volume-race-f5c80163-138a-4d3c-b1b3-158faf46cd6a: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-f5c80163-138a-4d3c-b1b3-158faf46cd6a in namespace emptydir-wrapper-6412, will wait for the garbage collector to delete the pods
May 16 16:35:03.438: INFO: Deleting ReplicationController wrapped-volume-race-f5c80163-138a-4d3c-b1b3-158faf46cd6a took: 12.942449ms
May 16 16:35:03.538: INFO: Terminating ReplicationController wrapped-volume-race-f5c80163-138a-4d3c-b1b3-158faf46cd6a pods took: 100.599865ms
STEP: Creating RC which spawns configmap-volume pods
May 16 16:35:06.664: INFO: Pod name wrapped-volume-race-3f5d4074-8e9e-4bbb-85c2-a8e327870ce5: Found 0 pods out of 5
May 16 16:35:11.674: INFO: Pod name wrapped-volume-race-3f5d4074-8e9e-4bbb-85c2-a8e327870ce5: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-3f5d4074-8e9e-4bbb-85c2-a8e327870ce5 in namespace emptydir-wrapper-6412, will wait for the garbage collector to delete the pods
May 16 16:35:23.783: INFO: Deleting ReplicationController wrapped-volume-race-3f5d4074-8e9e-4bbb-85c2-a8e327870ce5 took: 9.310053ms
May 16 16:35:23.983: INFO: Terminating ReplicationController wrapped-volume-race-3f5d4074-8e9e-4bbb-85c2-a8e327870ce5 pods took: 200.488525ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
May 16 16:35:27.206: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-6412" for this suite.

• [SLOW TEST:61.021 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":356,"completed":84,"skipped":1653,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:35:27.221: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-3919
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
May 16 16:35:31.422: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
May 16 16:35:31.441: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-3919" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":356,"completed":85,"skipped":1665,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:35:31.456: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-2710
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensure pods equal to paralellism count is attached to the job
STEP: patching /status
STEP: updating /status
STEP: get /status
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
May 16 16:35:33.665: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-2710" for this suite.
•{"msg":"PASSED [sig-apps] Job should apply changes to a job status [Conformance]","total":356,"completed":86,"skipped":1684,"failed":0}
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:35:33.680: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-9577
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:35:33.820: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
May 16 16:35:36.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-9577 --namespace=crd-publish-openapi-9577 create -f -'
May 16 16:35:37.460: INFO: stderr: ""
May 16 16:35:37.460: INFO: stdout: "e2e-test-crd-publish-openapi-6217-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
May 16 16:35:37.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-9577 --namespace=crd-publish-openapi-9577 delete e2e-test-crd-publish-openapi-6217-crds test-cr'
May 16 16:35:37.532: INFO: stderr: ""
May 16 16:35:37.532: INFO: stdout: "e2e-test-crd-publish-openapi-6217-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
May 16 16:35:37.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-9577 --namespace=crd-publish-openapi-9577 apply -f -'
May 16 16:35:38.252: INFO: stderr: ""
May 16 16:35:38.252: INFO: stdout: "e2e-test-crd-publish-openapi-6217-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
May 16 16:35:38.252: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-9577 --namespace=crd-publish-openapi-9577 delete e2e-test-crd-publish-openapi-6217-crds test-cr'
May 16 16:35:38.323: INFO: stderr: ""
May 16 16:35:38.323: INFO: stdout: "e2e-test-crd-publish-openapi-6217-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
May 16 16:35:38.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-9577 explain e2e-test-crd-publish-openapi-6217-crds'
May 16 16:35:38.705: INFO: stderr: ""
May 16 16:35:38.705: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6217-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:35:41.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-9577" for this suite.

• [SLOW TEST:7.507 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":356,"completed":87,"skipped":1687,"failed":0}
SS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:35:41.186: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-6270
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:58
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-61159165-cb51-4c69-aaff-f283aa4133b3 in namespace container-probe-6270
May 16 16:35:43.356: INFO: Started pod liveness-61159165-cb51-4c69-aaff-f283aa4133b3 in namespace container-probe-6270
STEP: checking the pod's current state and verifying that restartCount is present
May 16 16:35:43.362: INFO: Initial restart count of pod liveness-61159165-cb51-4c69-aaff-f283aa4133b3 is 0
May 16 16:36:05.034: INFO: Restart count of pod container-probe-6270/liveness-61159165-cb51-4c69-aaff-f283aa4133b3 is now 1 (21.671840828s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
May 16 16:36:05.063: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6270" for this suite.

• [SLOW TEST:23.903 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":88,"skipped":1689,"failed":0}
S
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:36:05.089: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7267
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-3455c3e7-dc00-44e7-8431-ecbdce04b726
STEP: Creating a pod to test consume secrets
May 16 16:36:05.255: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-6ee14e46-391b-49dc-b476-2a36e77b5744" in namespace "projected-7267" to be "Succeeded or Failed"
May 16 16:36:05.259: INFO: Pod "pod-projected-secrets-6ee14e46-391b-49dc-b476-2a36e77b5744": Phase="Pending", Reason="", readiness=false. Elapsed: 4.69696ms
May 16 16:36:15.487: INFO: Pod "pod-projected-secrets-6ee14e46-391b-49dc-b476-2a36e77b5744": Phase="Pending", Reason="", readiness=false. Elapsed: 10.232779377s
May 16 16:36:17.498: INFO: Pod "pod-projected-secrets-6ee14e46-391b-49dc-b476-2a36e77b5744": Phase="Succeeded", Reason="", readiness=false. Elapsed: 12.243050608s
STEP: Saw pod success
May 16 16:36:17.498: INFO: Pod "pod-projected-secrets-6ee14e46-391b-49dc-b476-2a36e77b5744" satisfied condition "Succeeded or Failed"
May 16 16:36:17.502: INFO: Trying to get logs from node ip-172-31-36-36 pod pod-projected-secrets-6ee14e46-391b-49dc-b476-2a36e77b5744 container projected-secret-volume-test: <nil>
STEP: delete the pod
May 16 16:36:17.543: INFO: Waiting for pod pod-projected-secrets-6ee14e46-391b-49dc-b476-2a36e77b5744 to disappear
May 16 16:36:17.547: INFO: Pod pod-projected-secrets-6ee14e46-391b-49dc-b476-2a36e77b5744 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
May 16 16:36:17.548: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7267" for this suite.

• [SLOW TEST:12.472 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":89,"skipped":1690,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:36:17.562: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9186
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
May 16 16:36:20.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9186" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":356,"completed":90,"skipped":1740,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:36:20.751: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8629
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 16:36:21.449: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 16:36:24.488: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:36:24.603: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8629" for this suite.
STEP: Destroying namespace "webhook-8629-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":356,"completed":91,"skipped":1758,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:36:24.722: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1857
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
May 16 16:36:24.941: INFO: Waiting up to 5m0s for pod "downward-api-642a2ee4-2388-4de5-b851-5d47ad4cc566" in namespace "downward-api-1857" to be "Succeeded or Failed"
May 16 16:36:24.947: INFO: Pod "downward-api-642a2ee4-2388-4de5-b851-5d47ad4cc566": Phase="Pending", Reason="", readiness=false. Elapsed: 6.1226ms
May 16 16:36:26.957: INFO: Pod "downward-api-642a2ee4-2388-4de5-b851-5d47ad4cc566": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015819895s
May 16 16:36:28.967: INFO: Pod "downward-api-642a2ee4-2388-4de5-b851-5d47ad4cc566": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0263697s
STEP: Saw pod success
May 16 16:36:28.967: INFO: Pod "downward-api-642a2ee4-2388-4de5-b851-5d47ad4cc566" satisfied condition "Succeeded or Failed"
May 16 16:36:28.972: INFO: Trying to get logs from node ip-172-31-76-3 pod downward-api-642a2ee4-2388-4de5-b851-5d47ad4cc566 container dapi-container: <nil>
STEP: delete the pod
May 16 16:36:29.021: INFO: Waiting for pod downward-api-642a2ee4-2388-4de5-b851-5d47ad4cc566 to disappear
May 16 16:36:29.025: INFO: Pod downward-api-642a2ee4-2388-4de5-b851-5d47ad4cc566 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
May 16 16:36:29.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1857" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":356,"completed":92,"skipped":1766,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:36:29.042: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8689
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 16:36:29.205: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d039fd62-2381-4f2d-803e-ead5c1c45487" in namespace "projected-8689" to be "Succeeded or Failed"
May 16 16:36:29.213: INFO: Pod "downwardapi-volume-d039fd62-2381-4f2d-803e-ead5c1c45487": Phase="Pending", Reason="", readiness=false. Elapsed: 7.834779ms
May 16 16:36:31.221: INFO: Pod "downwardapi-volume-d039fd62-2381-4f2d-803e-ead5c1c45487": Phase="Running", Reason="", readiness=false. Elapsed: 2.016626373s
May 16 16:36:33.229: INFO: Pod "downwardapi-volume-d039fd62-2381-4f2d-803e-ead5c1c45487": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023934988s
STEP: Saw pod success
May 16 16:36:33.229: INFO: Pod "downwardapi-volume-d039fd62-2381-4f2d-803e-ead5c1c45487" satisfied condition "Succeeded or Failed"
May 16 16:36:33.233: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-d039fd62-2381-4f2d-803e-ead5c1c45487 container client-container: <nil>
STEP: delete the pod
May 16 16:36:33.263: INFO: Waiting for pod downwardapi-volume-d039fd62-2381-4f2d-803e-ead5c1c45487 to disappear
May 16 16:36:33.268: INFO: Pod downwardapi-volume-d039fd62-2381-4f2d-803e-ead5c1c45487 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
May 16 16:36:33.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8689" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":93,"skipped":1807,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:36:33.283: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8485
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8485.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8485.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8485.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8485.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
May 16 16:36:35.530: INFO: DNS probes using dns-test-c54710f9-e01f-4316-9f1f-1fc12c62ebb2 succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8485.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8485.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8485.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8485.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
May 16 16:36:37.600: INFO: File wheezy_udp@dns-test-service-3.dns-8485.svc.cluster.local from pod  dns-8485/dns-test-d3f057eb-995b-471f-89fa-a6f81231471c contains 'foo.example.com.
' instead of 'bar.example.com.'
May 16 16:36:37.607: INFO: File jessie_udp@dns-test-service-3.dns-8485.svc.cluster.local from pod  dns-8485/dns-test-d3f057eb-995b-471f-89fa-a6f81231471c contains 'foo.example.com.
' instead of 'bar.example.com.'
May 16 16:36:37.607: INFO: Lookups using dns-8485/dns-test-d3f057eb-995b-471f-89fa-a6f81231471c failed for: [wheezy_udp@dns-test-service-3.dns-8485.svc.cluster.local jessie_udp@dns-test-service-3.dns-8485.svc.cluster.local]

May 16 16:36:42.621: INFO: DNS probes using dns-test-d3f057eb-995b-471f-89fa-a6f81231471c succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8485.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8485.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8485.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8485.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
May 16 16:36:44.773: INFO: DNS probes using dns-test-f52f4047-5d57-4ef5-a021-50b5723baced succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
May 16 16:36:44.820: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8485" for this suite.

• [SLOW TEST:11.552 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":356,"completed":94,"skipped":1821,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:36:44.836: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-422
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 16:36:45.585: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 16:36:48.634: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:36:48.641: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9835-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:36:51.811: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-422" for this suite.
STEP: Destroying namespace "webhook-422-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:7.103 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":356,"completed":95,"skipped":1836,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:36:51.939: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4979
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
May 16 16:36:52.125: INFO: Waiting up to 5m0s for pod "pod-f01e6785-9b2e-4812-a33b-4637be5536f0" in namespace "emptydir-4979" to be "Succeeded or Failed"
May 16 16:36:52.132: INFO: Pod "pod-f01e6785-9b2e-4812-a33b-4637be5536f0": Phase="Pending", Reason="", readiness=false. Elapsed: 7.254016ms
May 16 16:36:54.141: INFO: Pod "pod-f01e6785-9b2e-4812-a33b-4637be5536f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015975268s
May 16 16:36:56.149: INFO: Pod "pod-f01e6785-9b2e-4812-a33b-4637be5536f0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023492794s
STEP: Saw pod success
May 16 16:36:56.149: INFO: Pod "pod-f01e6785-9b2e-4812-a33b-4637be5536f0" satisfied condition "Succeeded or Failed"
May 16 16:36:56.155: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-f01e6785-9b2e-4812-a33b-4637be5536f0 container test-container: <nil>
STEP: delete the pod
May 16 16:36:56.186: INFO: Waiting for pod pod-f01e6785-9b2e-4812-a33b-4637be5536f0 to disappear
May 16 16:36:56.192: INFO: Pod pod-f01e6785-9b2e-4812-a33b-4637be5536f0 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 16:36:56.192: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4979" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":96,"skipped":1849,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:36:56.208: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-8306
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
May 16 16:36:56.375: INFO: The status of Pod pod-update-activedeadlineseconds-fc7dbf27-23ec-49be-8b0b-0119331bc755 is Pending, waiting for it to be Running (with Ready = true)
May 16 16:36:58.385: INFO: The status of Pod pod-update-activedeadlineseconds-fc7dbf27-23ec-49be-8b0b-0119331bc755 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
May 16 16:36:58.914: INFO: Successfully updated pod "pod-update-activedeadlineseconds-fc7dbf27-23ec-49be-8b0b-0119331bc755"
May 16 16:36:58.914: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-fc7dbf27-23ec-49be-8b0b-0119331bc755" in namespace "pods-8306" to be "terminated due to deadline exceeded"
May 16 16:36:58.920: INFO: Pod "pod-update-activedeadlineseconds-fc7dbf27-23ec-49be-8b0b-0119331bc755": Phase="Running", Reason="", readiness=true. Elapsed: 5.398328ms
May 16 16:37:00.927: INFO: Pod "pod-update-activedeadlineseconds-fc7dbf27-23ec-49be-8b0b-0119331bc755": Phase="Running", Reason="", readiness=true. Elapsed: 2.012611157s
May 16 16:37:02.935: INFO: Pod "pod-update-activedeadlineseconds-fc7dbf27-23ec-49be-8b0b-0119331bc755": Phase="Running", Reason="", readiness=true. Elapsed: 4.020809505s
May 16 16:37:04.948: INFO: Pod "pod-update-activedeadlineseconds-fc7dbf27-23ec-49be-8b0b-0119331bc755": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 6.033399193s
May 16 16:37:04.948: INFO: Pod "pod-update-activedeadlineseconds-fc7dbf27-23ec-49be-8b0b-0119331bc755" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
May 16 16:37:04.948: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-8306" for this suite.

• [SLOW TEST:8.758 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":356,"completed":97,"skipped":1860,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:37:04.967: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-2707
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-2707
[It] should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-2707
May 16 16:37:05.132: INFO: Found 0 stateful pods, waiting for 1
May 16 16:37:15.146: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
May 16 16:37:15.192: INFO: Deleting all statefulset in ns statefulset-2707
May 16 16:37:15.199: INFO: Scaling statefulset ss to 0
May 16 16:37:25.259: INFO: Waiting for statefulset status.replicas updated to 0
May 16 16:37:25.265: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
May 16 16:37:25.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-2707" for this suite.

• [SLOW TEST:20.354 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should have a working scale subresource [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":356,"completed":98,"skipped":1882,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:37:25.324: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4141
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
May 16 16:37:25.603: INFO: The status of Pod pod-update-46e276f2-40ef-425b-ac50-0e553600e8f4 is Pending, waiting for it to be Running (with Ready = true)
May 16 16:37:27.614: INFO: The status of Pod pod-update-46e276f2-40ef-425b-ac50-0e553600e8f4 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
May 16 16:37:28.144: INFO: Successfully updated pod "pod-update-46e276f2-40ef-425b-ac50-0e553600e8f4"
STEP: verifying the updated pod is in kubernetes
May 16 16:37:28.173: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
May 16 16:37:28.173: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4141" for this suite.
•{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":356,"completed":99,"skipped":1918,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:37:28.195: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-6051
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:58
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-49fb16d2-d8af-4665-a2bf-89751db6ce27 in namespace container-probe-6051
May 16 16:37:30.366: INFO: Started pod liveness-49fb16d2-d8af-4665-a2bf-89751db6ce27 in namespace container-probe-6051
STEP: checking the pod's current state and verifying that restartCount is present
May 16 16:37:30.371: INFO: Initial restart count of pod liveness-49fb16d2-d8af-4665-a2bf-89751db6ce27 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
May 16 16:41:31.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6051" for this suite.

• [SLOW TEST:243.420 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":356,"completed":100,"skipped":1982,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:41:31.615: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-9159
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:41:31.784: INFO: The status of Pod busybox-host-aliases27d53bf7-cdef-4f5d-b92d-3269dbaa4a20 is Pending, waiting for it to be Running (with Ready = true)
May 16 16:41:33.793: INFO: The status of Pod busybox-host-aliases27d53bf7-cdef-4f5d-b92d-3269dbaa4a20 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
May 16 16:41:33.829: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-9159" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":101,"skipped":2064,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:41:33.847: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6352
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 16:41:34.657: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 16:41:37.711: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:41:37.771: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6352" for this suite.
STEP: Destroying namespace "webhook-6352-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":356,"completed":102,"skipped":2100,"failed":0}
SSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:41:37.881: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6874
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-e55cb8a3-f9af-4224-a4cb-803cda8dd76e
STEP: Creating a pod to test consume configMaps
May 16 16:41:38.042: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-c2e58005-68ef-486a-b872-bb34cb366484" in namespace "projected-6874" to be "Succeeded or Failed"
May 16 16:41:38.049: INFO: Pod "pod-projected-configmaps-c2e58005-68ef-486a-b872-bb34cb366484": Phase="Pending", Reason="", readiness=false. Elapsed: 7.031911ms
May 16 16:41:40.059: INFO: Pod "pod-projected-configmaps-c2e58005-68ef-486a-b872-bb34cb366484": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017305339s
May 16 16:41:42.066: INFO: Pod "pod-projected-configmaps-c2e58005-68ef-486a-b872-bb34cb366484": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024466898s
STEP: Saw pod success
May 16 16:41:42.066: INFO: Pod "pod-projected-configmaps-c2e58005-68ef-486a-b872-bb34cb366484" satisfied condition "Succeeded or Failed"
May 16 16:41:42.072: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-projected-configmaps-c2e58005-68ef-486a-b872-bb34cb366484 container agnhost-container: <nil>
STEP: delete the pod
May 16 16:41:42.109: INFO: Waiting for pod pod-projected-configmaps-c2e58005-68ef-486a-b872-bb34cb366484 to disappear
May 16 16:41:42.115: INFO: Pod pod-projected-configmaps-c2e58005-68ef-486a-b872-bb34cb366484 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
May 16 16:41:42.115: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6874" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":103,"skipped":2106,"failed":0}
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:41:42.132: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8116
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
May 16 16:41:42.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-8116 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
May 16 16:41:42.366: INFO: stderr: ""
May 16 16:41:42.367: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
May 16 16:41:42.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-8116 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
May 16 16:41:43.365: INFO: stderr: ""
May 16 16:41:43.365: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
May 16 16:41:43.370: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-8116 delete pods e2e-test-httpd-pod'
May 16 16:41:44.677: INFO: stderr: ""
May 16 16:41:44.677: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 16:41:44.677: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8116" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":356,"completed":104,"skipped":2111,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:41:44.697: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-4992
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:41:44.869: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
May 16 16:41:44.883: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 16:41:44.883: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
May 16 16:41:44.911: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 16:41:44.911: INFO: Node ip-172-31-76-3 is running 0 daemon pod, expected 1
May 16 16:41:45.919: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 16:41:45.919: INFO: Node ip-172-31-76-3 is running 0 daemon pod, expected 1
May 16 16:41:46.918: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
May 16 16:41:46.918: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
May 16 16:41:46.946: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
May 16 16:41:46.946: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
May 16 16:41:47.955: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 16:41:47.955: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
May 16 16:41:47.988: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 16:41:47.988: INFO: Node ip-172-31-76-3 is running 0 daemon pod, expected 1
May 16 16:41:48.997: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 16:41:48.997: INFO: Node ip-172-31-76-3 is running 0 daemon pod, expected 1
May 16 16:41:49.995: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 16:41:49.995: INFO: Node ip-172-31-76-3 is running 0 daemon pod, expected 1
May 16 16:41:50.995: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
May 16 16:41:50.996: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4992, will wait for the garbage collector to delete the pods
May 16 16:41:51.073: INFO: Deleting DaemonSet.extensions daemon-set took: 10.654186ms
May 16 16:41:51.174: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.087273ms
May 16 16:41:53.782: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 16:41:53.782: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
May 16 16:41:53.788: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15659"},"items":null}

May 16 16:41:53.793: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15659"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
May 16 16:41:53.827: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-4992" for this suite.

• [SLOW TEST:9.149 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":356,"completed":105,"skipped":2137,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:41:53.846: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-108
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-108
May 16 16:41:54.004: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
May 16 16:41:56.012: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
May 16 16:41:56.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-108 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
May 16 16:41:56.192: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
May 16 16:41:56.192: INFO: stdout: "iptables"
May 16 16:41:56.192: INFO: proxyMode: iptables
May 16 16:41:56.215: INFO: Waiting for pod kube-proxy-mode-detector to disappear
May 16 16:41:56.223: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-clusterip-timeout in namespace services-108
STEP: creating replication controller affinity-clusterip-timeout in namespace services-108
I0516 16:41:56.265109      17 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-108, replica count: 3
I0516 16:41:59.315643      17 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
May 16 16:41:59.327: INFO: Creating new exec pod
May 16 16:42:02.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-108 exec execpod-affinitywzjbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
May 16 16:42:02.499: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-timeout 80\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
May 16 16:42:02.500: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:42:02.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-108 exec execpod-affinitywzjbq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.118 80'
May 16 16:42:02.647: INFO: stderr: "+ nc -v -t -w 2 10.152.183.118 80\nConnection to 10.152.183.118 80 port [tcp/http] succeeded!\n+ echo hostName\n"
May 16 16:42:02.647: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:42:02.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-108 exec execpod-affinitywzjbq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.118:80/ ; done'
May 16 16:42:02.848: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n"
May 16 16:42:02.848: INFO: stdout: "\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn\naffinity-clusterip-timeout-mtbpn"
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Received response from host: affinity-clusterip-timeout-mtbpn
May 16 16:42:02.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-108 exec execpod-affinitywzjbq -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.152.183.118:80/'
May 16 16:42:02.998: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n"
May 16 16:42:02.998: INFO: stdout: "affinity-clusterip-timeout-mtbpn"
May 16 16:42:22.998: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-108 exec execpod-affinitywzjbq -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.152.183.118:80/'
May 16 16:42:23.154: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.152.183.118:80/\n"
May 16 16:42:23.154: INFO: stdout: "affinity-clusterip-timeout-6rmkw"
May 16 16:42:23.154: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-108, will wait for the garbage collector to delete the pods
May 16 16:42:23.247: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 11.746405ms
May 16 16:42:23.348: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 100.225189ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 16:42:25.703: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-108" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:31.910 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":106,"skipped":2148,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:42:25.757: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-9279
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:42:25.945: INFO: Pod name sample-pod: Found 0 pods out of 1
May 16 16:42:30.958: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
May 16 16:42:30.971: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
May 16 16:42:31.003: INFO: observed ReplicaSet test-rs in namespace replicaset-9279 with ReadyReplicas 1, AvailableReplicas 1
May 16 16:42:31.022: INFO: observed ReplicaSet test-rs in namespace replicaset-9279 with ReadyReplicas 1, AvailableReplicas 1
May 16 16:42:31.052: INFO: observed ReplicaSet test-rs in namespace replicaset-9279 with ReadyReplicas 1, AvailableReplicas 1
May 16 16:42:31.069: INFO: observed ReplicaSet test-rs in namespace replicaset-9279 with ReadyReplicas 1, AvailableReplicas 1
May 16 16:42:32.249: INFO: observed ReplicaSet test-rs in namespace replicaset-9279 with ReadyReplicas 2, AvailableReplicas 2
May 16 16:42:32.585: INFO: observed Replicaset test-rs in namespace replicaset-9279 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
May 16 16:42:32.585: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-9279" for this suite.

• [SLOW TEST:6.849 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":356,"completed":107,"skipped":2168,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:42:32.606: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7635
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service nodeport-service with the type=NodePort in namespace services-7635
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-7635
STEP: creating replication controller externalsvc in namespace services-7635
I0516 16:42:32.809033      17 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7635, replica count: 2
I0516 16:42:35.860172      17 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
May 16 16:42:35.902: INFO: Creating new exec pod
May 16 16:42:37.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-7635 exec execpodv4qng -- /bin/sh -x -c nslookup nodeport-service.services-7635.svc.cluster.local'
May 16 16:42:38.148: INFO: stderr: "+ nslookup nodeport-service.services-7635.svc.cluster.local\n"
May 16 16:42:38.148: INFO: stdout: "Server:\t\t10.152.183.147\nAddress:\t10.152.183.147#53\n\nnodeport-service.services-7635.svc.cluster.local\tcanonical name = externalsvc.services-7635.svc.cluster.local.\nName:\texternalsvc.services-7635.svc.cluster.local\nAddress: 10.152.183.3\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-7635, will wait for the garbage collector to delete the pods
May 16 16:42:38.219: INFO: Deleting ReplicationController externalsvc took: 14.866794ms
May 16 16:42:38.319: INFO: Terminating ReplicationController externalsvc pods took: 100.53434ms
May 16 16:42:40.349: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 16:42:40.367: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7635" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:7.778 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":356,"completed":108,"skipped":2171,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:42:40.384: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-5463
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:42:40.582: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"d85996ef-a2e1-441f-8cbd-6f0ccd3b905d", Controller:(*bool)(0xc00346a186), BlockOwnerDeletion:(*bool)(0xc00346a187)}}
May 16 16:42:40.593: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"49253b7f-0df3-451c-84c8-6af875f99b40", Controller:(*bool)(0xc00394085e), BlockOwnerDeletion:(*bool)(0xc00394085f)}}
May 16 16:42:40.617: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"72f793ca-baaf-4e36-856d-027567cc97ef", Controller:(*bool)(0xc00346abce), BlockOwnerDeletion:(*bool)(0xc00346abcf)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
May 16 16:42:45.640: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-5463" for this suite.

• [SLOW TEST:5.287 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":356,"completed":109,"skipped":2178,"failed":0}
S
------------------------------
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:42:45.671: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6081
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on tmpfs
May 16 16:42:45.825: INFO: Waiting up to 5m0s for pod "pod-34bc5e88-c0ad-47e3-8437-c0bb93417511" in namespace "emptydir-6081" to be "Succeeded or Failed"
May 16 16:42:45.833: INFO: Pod "pod-34bc5e88-c0ad-47e3-8437-c0bb93417511": Phase="Pending", Reason="", readiness=false. Elapsed: 8.142574ms
May 16 16:42:47.844: INFO: Pod "pod-34bc5e88-c0ad-47e3-8437-c0bb93417511": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018443645s
May 16 16:42:49.855: INFO: Pod "pod-34bc5e88-c0ad-47e3-8437-c0bb93417511": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029513279s
STEP: Saw pod success
May 16 16:42:49.855: INFO: Pod "pod-34bc5e88-c0ad-47e3-8437-c0bb93417511" satisfied condition "Succeeded or Failed"
May 16 16:42:49.860: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-34bc5e88-c0ad-47e3-8437-c0bb93417511 container test-container: <nil>
STEP: delete the pod
May 16 16:42:49.891: INFO: Waiting for pod pod-34bc5e88-c0ad-47e3-8437-c0bb93417511 to disappear
May 16 16:42:49.897: INFO: Pod pod-34bc5e88-c0ad-47e3-8437-c0bb93417511 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 16:42:49.897: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6081" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":110,"skipped":2179,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:42:49.915: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6278
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6278.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-6278.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6278.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6278.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
May 16 16:42:52.128: INFO: DNS probes using dns-6278/dns-test-9f798bf9-0b40-4f91-aee0-eb36384f01f8 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
May 16 16:42:52.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6278" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [Conformance]","total":356,"completed":111,"skipped":2193,"failed":0}
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:42:52.185: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename limitrange
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in limitrange-564
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
May 16 16:42:52.334: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
May 16 16:42:52.344: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
May 16 16:42:52.344: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
May 16 16:42:52.358: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
May 16 16:42:52.359: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
May 16 16:42:52.374: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
May 16 16:42:52.374: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
May 16 16:42:59.435: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:188
May 16 16:42:59.449: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-564" for this suite.

• [SLOW TEST:7.280 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":356,"completed":112,"skipped":2203,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:42:59.467: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4220
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating pod
May 16 16:42:59.654: INFO: The status of Pod pod-hostip-7e786a6c-2e9e-4465-a89e-2469cda613a5 is Pending, waiting for it to be Running (with Ready = true)
May 16 16:43:01.661: INFO: The status of Pod pod-hostip-7e786a6c-2e9e-4465-a89e-2469cda613a5 is Running (Ready = true)
May 16 16:43:01.672: INFO: Pod pod-hostip-7e786a6c-2e9e-4465-a89e-2469cda613a5 has hostIP: 172.31.76.3
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
May 16 16:43:01.672: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4220" for this suite.
•{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":356,"completed":113,"skipped":2300,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:43:01.689: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-2223
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
May 16 16:43:11.891: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0516 16:43:11.891889      17 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
May 16 16:43:11.892: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-2223" for this suite.

• [SLOW TEST:10.218 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":356,"completed":114,"skipped":2327,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:43:11.908: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename svc-latency
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svc-latency-1821
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:43:12.151: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: creating replication controller svc-latency-rc in namespace svc-latency-1821
I0516 16:43:12.159461      17 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1821, replica count: 1
I0516 16:43:13.209853      17 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0516 16:43:14.210417      17 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
May 16 16:43:14.326: INFO: Created: latency-svc-xklms
May 16 16:43:14.340: INFO: Got endpoints: latency-svc-xklms [29.871638ms]
May 16 16:43:14.368: INFO: Created: latency-svc-2hwcm
May 16 16:43:14.376: INFO: Created: latency-svc-zf428
May 16 16:43:14.379: INFO: Got endpoints: latency-svc-2hwcm [38.009615ms]
May 16 16:43:14.389: INFO: Created: latency-svc-87bg6
May 16 16:43:14.390: INFO: Got endpoints: latency-svc-zf428 [49.301941ms]
May 16 16:43:14.404: INFO: Got endpoints: latency-svc-87bg6 [61.734524ms]
May 16 16:43:14.526: INFO: Created: latency-svc-jsw4m
May 16 16:43:14.526: INFO: Created: latency-svc-rxxr4
May 16 16:43:14.529: INFO: Created: latency-svc-wlg24
May 16 16:43:14.532: INFO: Created: latency-svc-24ptl
May 16 16:43:14.532: INFO: Created: latency-svc-zcv87
May 16 16:43:14.532: INFO: Created: latency-svc-4ndpf
May 16 16:43:14.533: INFO: Created: latency-svc-7w985
May 16 16:43:14.533: INFO: Created: latency-svc-4cv6j
May 16 16:43:14.533: INFO: Created: latency-svc-l7dfd
May 16 16:43:14.535: INFO: Created: latency-svc-l64nd
May 16 16:43:14.535: INFO: Created: latency-svc-8djcq
May 16 16:43:14.537: INFO: Created: latency-svc-sgflt
May 16 16:43:14.538: INFO: Created: latency-svc-gl2dd
May 16 16:43:14.541: INFO: Created: latency-svc-h5mt8
May 16 16:43:14.541: INFO: Created: latency-svc-2sdv7
May 16 16:43:14.543: INFO: Got endpoints: latency-svc-jsw4m [200.58711ms]
May 16 16:43:14.551: INFO: Got endpoints: latency-svc-rxxr4 [208.82429ms]
May 16 16:43:14.560: INFO: Got endpoints: latency-svc-7w985 [217.869393ms]
May 16 16:43:14.565: INFO: Got endpoints: latency-svc-gl2dd [223.373359ms]
May 16 16:43:14.570: INFO: Got endpoints: latency-svc-l64nd [228.602504ms]
May 16 16:43:14.570: INFO: Got endpoints: latency-svc-zcv87 [227.368689ms]
May 16 16:43:14.570: INFO: Got endpoints: latency-svc-sgflt [166.767835ms]
May 16 16:43:14.576: INFO: Got endpoints: latency-svc-8djcq [186.33754ms]
May 16 16:43:14.577: INFO: Got endpoints: latency-svc-l7dfd [234.950784ms]
May 16 16:43:14.581: INFO: Got endpoints: latency-svc-h5mt8 [240.041412ms]
May 16 16:43:14.590: INFO: Got endpoints: latency-svc-4cv6j [248.997902ms]
May 16 16:43:14.591: INFO: Created: latency-svc-v86fq
May 16 16:43:14.591: INFO: Got endpoints: latency-svc-wlg24 [212.516967ms]
May 16 16:43:14.598: INFO: Got endpoints: latency-svc-24ptl [256.906629ms]
May 16 16:43:14.598: INFO: Got endpoints: latency-svc-4ndpf [255.804041ms]
May 16 16:43:14.600: INFO: Got endpoints: latency-svc-2sdv7 [257.341236ms]
May 16 16:43:14.603: INFO: Got endpoints: latency-svc-v86fq [59.906244ms]
May 16 16:43:14.606: INFO: Created: latency-svc-q8cwx
May 16 16:43:14.616: INFO: Got endpoints: latency-svc-q8cwx [64.774976ms]
May 16 16:43:14.617: INFO: Created: latency-svc-cz7lr
May 16 16:43:14.623: INFO: Got endpoints: latency-svc-cz7lr [62.819803ms]
May 16 16:43:14.632: INFO: Created: latency-svc-4q9gl
May 16 16:43:14.635: INFO: Got endpoints: latency-svc-4q9gl [69.475251ms]
May 16 16:43:14.638: INFO: Created: latency-svc-kqz57
May 16 16:43:14.648: INFO: Created: latency-svc-tc52f
May 16 16:43:14.648: INFO: Got endpoints: latency-svc-kqz57 [78.469642ms]
May 16 16:43:14.657: INFO: Got endpoints: latency-svc-tc52f [86.059804ms]
May 16 16:43:14.664: INFO: Created: latency-svc-rpmtl
May 16 16:43:14.670: INFO: Got endpoints: latency-svc-rpmtl [99.683183ms]
May 16 16:43:14.674: INFO: Created: latency-svc-wjxv6
May 16 16:43:14.683: INFO: Got endpoints: latency-svc-wjxv6 [106.665371ms]
May 16 16:43:14.684: INFO: Created: latency-svc-fkrtb
May 16 16:43:14.691: INFO: Got endpoints: latency-svc-fkrtb [113.903894ms]
May 16 16:43:14.698: INFO: Created: latency-svc-rwdvw
May 16 16:43:14.704: INFO: Got endpoints: latency-svc-rwdvw [122.628621ms]
May 16 16:43:14.705: INFO: Created: latency-svc-22454
May 16 16:43:14.722: INFO: Got endpoints: latency-svc-22454 [131.887634ms]
May 16 16:43:14.727: INFO: Created: latency-svc-v596b
May 16 16:43:14.733: INFO: Got endpoints: latency-svc-v596b [142.318207ms]
May 16 16:43:14.740: INFO: Created: latency-svc-kvsjx
May 16 16:43:14.755: INFO: Got endpoints: latency-svc-kvsjx [156.200692ms]
May 16 16:43:14.758: INFO: Created: latency-svc-tc8ms
May 16 16:43:14.768: INFO: Got endpoints: latency-svc-tc8ms [169.54683ms]
May 16 16:43:14.769: INFO: Created: latency-svc-kkckh
May 16 16:43:14.776: INFO: Got endpoints: latency-svc-kkckh [176.762612ms]
May 16 16:43:14.782: INFO: Created: latency-svc-g5jxm
May 16 16:43:14.786: INFO: Got endpoints: latency-svc-g5jxm [183.279078ms]
May 16 16:43:14.792: INFO: Created: latency-svc-ncvvb
May 16 16:43:14.796: INFO: Got endpoints: latency-svc-ncvvb [180.453517ms]
May 16 16:43:14.801: INFO: Created: latency-svc-2cr4t
May 16 16:43:14.809: INFO: Got endpoints: latency-svc-2cr4t [185.435354ms]
May 16 16:43:14.814: INFO: Created: latency-svc-lcmdf
May 16 16:43:14.820: INFO: Got endpoints: latency-svc-lcmdf [185.758503ms]
May 16 16:43:14.824: INFO: Created: latency-svc-dcvd6
May 16 16:43:14.835: INFO: Got endpoints: latency-svc-dcvd6 [186.248631ms]
May 16 16:43:14.837: INFO: Created: latency-svc-l76xs
May 16 16:43:14.850: INFO: Got endpoints: latency-svc-l76xs [193.727447ms]
May 16 16:43:14.853: INFO: Created: latency-svc-r59sn
May 16 16:43:14.886: INFO: Got endpoints: latency-svc-r59sn [216.700593ms]
May 16 16:43:14.962: INFO: Created: latency-svc-hb5kv
May 16 16:43:14.972: INFO: Created: latency-svc-stjlk
May 16 16:43:14.972: INFO: Created: latency-svc-ttn9v
May 16 16:43:14.972: INFO: Created: latency-svc-xfpkd
May 16 16:43:14.979: INFO: Created: latency-svc-fqdcl
May 16 16:43:14.979: INFO: Created: latency-svc-rlp27
May 16 16:43:14.980: INFO: Created: latency-svc-fkqm6
May 16 16:43:14.980: INFO: Created: latency-svc-kx89p
May 16 16:43:14.981: INFO: Created: latency-svc-d2qhz
May 16 16:43:14.981: INFO: Created: latency-svc-jtpbm
May 16 16:43:14.981: INFO: Created: latency-svc-4zq7m
May 16 16:43:14.981: INFO: Created: latency-svc-x45qc
May 16 16:43:14.982: INFO: Created: latency-svc-58pfw
May 16 16:43:14.982: INFO: Created: latency-svc-hfb5j
May 16 16:43:14.982: INFO: Created: latency-svc-k8kgz
May 16 16:43:14.986: INFO: Got endpoints: latency-svc-hb5kv [252.38851ms]
May 16 16:43:14.996: INFO: Got endpoints: latency-svc-ttn9v [199.485121ms]
May 16 16:43:15.005: INFO: Created: latency-svc-h9r2x
May 16 16:43:15.013: INFO: Created: latency-svc-fmggg
May 16 16:43:15.035: INFO: Got endpoints: latency-svc-xfpkd [200.000308ms]
May 16 16:43:15.051: INFO: Created: latency-svc-gjh9s
May 16 16:43:15.088: INFO: Got endpoints: latency-svc-stjlk [397.537429ms]
May 16 16:43:15.106: INFO: Created: latency-svc-xkb96
May 16 16:43:15.137: INFO: Got endpoints: latency-svc-kx89p [328.0497ms]
May 16 16:43:15.150: INFO: Created: latency-svc-4z2gh
May 16 16:43:15.185: INFO: Got endpoints: latency-svc-rlp27 [334.239784ms]
May 16 16:43:15.202: INFO: Created: latency-svc-msj2f
May 16 16:43:15.237: INFO: Got endpoints: latency-svc-58pfw [416.604071ms]
May 16 16:43:15.253: INFO: Created: latency-svc-4xssm
May 16 16:43:15.286: INFO: Got endpoints: latency-svc-d2qhz [564.114326ms]
May 16 16:43:15.301: INFO: Created: latency-svc-wq9t9
May 16 16:43:15.348: INFO: Got endpoints: latency-svc-x45qc [571.709455ms]
May 16 16:43:15.365: INFO: Created: latency-svc-gbwrz
May 16 16:43:15.387: INFO: Got endpoints: latency-svc-jtpbm [682.675394ms]
May 16 16:43:15.402: INFO: Created: latency-svc-qts4z
May 16 16:43:15.437: INFO: Got endpoints: latency-svc-k8kgz [550.008162ms]
May 16 16:43:15.454: INFO: Created: latency-svc-bcfdp
May 16 16:43:15.488: INFO: Got endpoints: latency-svc-fqdcl [805.045534ms]
May 16 16:43:15.505: INFO: Created: latency-svc-92bd7
May 16 16:43:15.536: INFO: Got endpoints: latency-svc-4zq7m [767.594899ms]
May 16 16:43:15.551: INFO: Created: latency-svc-smlh4
May 16 16:43:15.587: INFO: Got endpoints: latency-svc-fkqm6 [801.245462ms]
May 16 16:43:15.602: INFO: Created: latency-svc-tv5j5
May 16 16:43:15.638: INFO: Got endpoints: latency-svc-hfb5j [882.627626ms]
May 16 16:43:15.660: INFO: Created: latency-svc-75w9p
May 16 16:43:15.687: INFO: Got endpoints: latency-svc-h9r2x [701.153463ms]
May 16 16:43:15.702: INFO: Created: latency-svc-9gnmv
May 16 16:43:15.738: INFO: Got endpoints: latency-svc-fmggg [742.373302ms]
May 16 16:43:15.751: INFO: Created: latency-svc-rwwrb
May 16 16:43:15.787: INFO: Got endpoints: latency-svc-gjh9s [751.666926ms]
May 16 16:43:15.803: INFO: Created: latency-svc-lhvkx
May 16 16:43:15.834: INFO: Got endpoints: latency-svc-xkb96 [745.607955ms]
May 16 16:43:15.850: INFO: Created: latency-svc-sf6d8
May 16 16:43:15.887: INFO: Got endpoints: latency-svc-4z2gh [749.966156ms]
May 16 16:43:15.901: INFO: Created: latency-svc-kqt6t
May 16 16:43:15.943: INFO: Got endpoints: latency-svc-msj2f [758.092379ms]
May 16 16:43:15.961: INFO: Created: latency-svc-vwhrm
May 16 16:43:15.987: INFO: Got endpoints: latency-svc-4xssm [749.134609ms]
May 16 16:43:16.007: INFO: Created: latency-svc-4jth4
May 16 16:43:16.040: INFO: Got endpoints: latency-svc-wq9t9 [754.177676ms]
May 16 16:43:16.056: INFO: Created: latency-svc-j4rbx
May 16 16:43:16.084: INFO: Got endpoints: latency-svc-gbwrz [735.867379ms]
May 16 16:43:16.101: INFO: Created: latency-svc-md5lm
May 16 16:43:16.136: INFO: Got endpoints: latency-svc-qts4z [749.566709ms]
May 16 16:43:16.154: INFO: Created: latency-svc-5tcqf
May 16 16:43:16.189: INFO: Got endpoints: latency-svc-bcfdp [751.913926ms]
May 16 16:43:16.205: INFO: Created: latency-svc-8zbt8
May 16 16:43:16.234: INFO: Got endpoints: latency-svc-92bd7 [745.995245ms]
May 16 16:43:16.252: INFO: Created: latency-svc-vpnf2
May 16 16:43:16.290: INFO: Got endpoints: latency-svc-smlh4 [753.741837ms]
May 16 16:43:16.306: INFO: Created: latency-svc-vbn6l
May 16 16:43:16.336: INFO: Got endpoints: latency-svc-tv5j5 [748.456946ms]
May 16 16:43:16.350: INFO: Created: latency-svc-2scvn
May 16 16:43:16.388: INFO: Got endpoints: latency-svc-75w9p [750.650694ms]
May 16 16:43:16.404: INFO: Created: latency-svc-qmwtm
May 16 16:43:16.439: INFO: Got endpoints: latency-svc-9gnmv [750.988726ms]
May 16 16:43:16.454: INFO: Created: latency-svc-4sgbr
May 16 16:43:16.488: INFO: Got endpoints: latency-svc-rwwrb [749.292203ms]
May 16 16:43:16.502: INFO: Created: latency-svc-9k5vx
May 16 16:43:16.536: INFO: Got endpoints: latency-svc-lhvkx [748.988162ms]
May 16 16:43:16.554: INFO: Created: latency-svc-47gxh
May 16 16:43:16.586: INFO: Got endpoints: latency-svc-sf6d8 [752.136225ms]
May 16 16:43:16.602: INFO: Created: latency-svc-pqsr9
May 16 16:43:16.637: INFO: Got endpoints: latency-svc-kqt6t [749.715227ms]
May 16 16:43:16.652: INFO: Created: latency-svc-9pk8t
May 16 16:43:16.687: INFO: Got endpoints: latency-svc-vwhrm [743.608393ms]
May 16 16:43:16.708: INFO: Created: latency-svc-bvgcf
May 16 16:43:16.735: INFO: Got endpoints: latency-svc-4jth4 [748.443596ms]
May 16 16:43:16.750: INFO: Created: latency-svc-7nvsx
May 16 16:43:16.786: INFO: Got endpoints: latency-svc-j4rbx [745.780035ms]
May 16 16:43:16.866: INFO: Created: latency-svc-gpb9d
May 16 16:43:16.869: INFO: Got endpoints: latency-svc-md5lm [784.512646ms]
May 16 16:43:16.886: INFO: Created: latency-svc-dpjz6
May 16 16:43:16.889: INFO: Got endpoints: latency-svc-5tcqf [752.934451ms]
May 16 16:43:16.907: INFO: Created: latency-svc-n7cr2
May 16 16:43:16.963: INFO: Got endpoints: latency-svc-8zbt8 [774.386454ms]
May 16 16:43:16.977: INFO: Created: latency-svc-vmmf7
May 16 16:43:16.984: INFO: Got endpoints: latency-svc-vpnf2 [748.980967ms]
May 16 16:43:17.000: INFO: Created: latency-svc-rg5jg
May 16 16:43:17.065: INFO: Got endpoints: latency-svc-vbn6l [775.454802ms]
May 16 16:43:17.081: INFO: Created: latency-svc-vxstt
May 16 16:43:17.089: INFO: Got endpoints: latency-svc-2scvn [752.523433ms]
May 16 16:43:17.104: INFO: Created: latency-svc-jl9bg
May 16 16:43:17.136: INFO: Got endpoints: latency-svc-qmwtm [748.122763ms]
May 16 16:43:17.161: INFO: Created: latency-svc-ll9xd
May 16 16:43:17.186: INFO: Got endpoints: latency-svc-4sgbr [747.537715ms]
May 16 16:43:17.202: INFO: Created: latency-svc-kgdpk
May 16 16:43:17.236: INFO: Got endpoints: latency-svc-9k5vx [748.25724ms]
May 16 16:43:17.251: INFO: Created: latency-svc-xkkss
May 16 16:43:17.286: INFO: Got endpoints: latency-svc-47gxh [750.094305ms]
May 16 16:43:17.306: INFO: Created: latency-svc-86gjb
May 16 16:43:17.334: INFO: Got endpoints: latency-svc-pqsr9 [747.299341ms]
May 16 16:43:17.362: INFO: Created: latency-svc-5gjl5
May 16 16:43:17.387: INFO: Got endpoints: latency-svc-9pk8t [749.460666ms]
May 16 16:43:17.406: INFO: Created: latency-svc-bswr2
May 16 16:43:17.434: INFO: Got endpoints: latency-svc-bvgcf [747.12653ms]
May 16 16:43:17.452: INFO: Created: latency-svc-p28cf
May 16 16:43:17.489: INFO: Got endpoints: latency-svc-7nvsx [753.533041ms]
May 16 16:43:17.506: INFO: Created: latency-svc-g7fpk
May 16 16:43:17.536: INFO: Got endpoints: latency-svc-gpb9d [749.402979ms]
May 16 16:43:17.553: INFO: Created: latency-svc-m9hzg
May 16 16:43:17.586: INFO: Got endpoints: latency-svc-dpjz6 [717.180415ms]
May 16 16:43:17.601: INFO: Created: latency-svc-nmrsq
May 16 16:43:17.636: INFO: Got endpoints: latency-svc-n7cr2 [746.181112ms]
May 16 16:43:17.650: INFO: Created: latency-svc-8kg5k
May 16 16:43:17.689: INFO: Got endpoints: latency-svc-vmmf7 [725.573519ms]
May 16 16:43:17.704: INFO: Created: latency-svc-bcbjf
May 16 16:43:17.735: INFO: Got endpoints: latency-svc-rg5jg [751.368351ms]
May 16 16:43:17.758: INFO: Created: latency-svc-xnm6r
May 16 16:43:17.784: INFO: Got endpoints: latency-svc-vxstt [718.437156ms]
May 16 16:43:17.801: INFO: Created: latency-svc-4lklb
May 16 16:43:17.842: INFO: Got endpoints: latency-svc-jl9bg [752.861577ms]
May 16 16:43:17.869: INFO: Created: latency-svc-j4fb9
May 16 16:43:17.886: INFO: Got endpoints: latency-svc-ll9xd [749.800506ms]
May 16 16:43:17.901: INFO: Created: latency-svc-blhlz
May 16 16:43:17.935: INFO: Got endpoints: latency-svc-kgdpk [748.255967ms]
May 16 16:43:17.949: INFO: Created: latency-svc-62lrv
May 16 16:43:17.986: INFO: Got endpoints: latency-svc-xkkss [749.93942ms]
May 16 16:43:18.001: INFO: Created: latency-svc-hmggm
May 16 16:43:18.037: INFO: Got endpoints: latency-svc-86gjb [750.744493ms]
May 16 16:43:18.052: INFO: Created: latency-svc-nk2jz
May 16 16:43:18.084: INFO: Got endpoints: latency-svc-5gjl5 [750.395926ms]
May 16 16:43:18.102: INFO: Created: latency-svc-87cc9
May 16 16:43:18.135: INFO: Got endpoints: latency-svc-bswr2 [748.701869ms]
May 16 16:43:18.154: INFO: Created: latency-svc-7x6dz
May 16 16:43:18.187: INFO: Got endpoints: latency-svc-p28cf [752.823571ms]
May 16 16:43:18.201: INFO: Created: latency-svc-dnscw
May 16 16:43:18.236: INFO: Got endpoints: latency-svc-g7fpk [746.935765ms]
May 16 16:43:18.251: INFO: Created: latency-svc-h8jzl
May 16 16:43:18.286: INFO: Got endpoints: latency-svc-m9hzg [749.64557ms]
May 16 16:43:18.301: INFO: Created: latency-svc-ll57h
May 16 16:43:18.339: INFO: Got endpoints: latency-svc-nmrsq [753.088551ms]
May 16 16:43:18.357: INFO: Created: latency-svc-g7qx6
May 16 16:43:18.388: INFO: Got endpoints: latency-svc-8kg5k [752.613051ms]
May 16 16:43:18.403: INFO: Created: latency-svc-6ng8f
May 16 16:43:18.437: INFO: Got endpoints: latency-svc-bcbjf [747.618611ms]
May 16 16:43:18.451: INFO: Created: latency-svc-pzvzj
May 16 16:43:18.486: INFO: Got endpoints: latency-svc-xnm6r [750.91194ms]
May 16 16:43:18.504: INFO: Created: latency-svc-bnsqf
May 16 16:43:18.536: INFO: Got endpoints: latency-svc-4lklb [752.645241ms]
May 16 16:43:18.554: INFO: Created: latency-svc-7s5bk
May 16 16:43:18.586: INFO: Got endpoints: latency-svc-j4fb9 [744.070936ms]
May 16 16:43:18.601: INFO: Created: latency-svc-z2btc
May 16 16:43:18.637: INFO: Got endpoints: latency-svc-blhlz [750.360247ms]
May 16 16:43:18.652: INFO: Created: latency-svc-fl5kb
May 16 16:43:18.686: INFO: Got endpoints: latency-svc-62lrv [751.237089ms]
May 16 16:43:18.700: INFO: Created: latency-svc-8bmv6
May 16 16:43:18.790: INFO: Got endpoints: latency-svc-hmggm [804.472233ms]
May 16 16:43:18.791: INFO: Got endpoints: latency-svc-nk2jz [753.430179ms]
May 16 16:43:18.806: INFO: Created: latency-svc-qkcsx
May 16 16:43:18.812: INFO: Created: latency-svc-czjsv
May 16 16:43:18.835: INFO: Got endpoints: latency-svc-87cc9 [750.624312ms]
May 16 16:43:18.850: INFO: Created: latency-svc-zbqzx
May 16 16:43:18.887: INFO: Got endpoints: latency-svc-7x6dz [751.393397ms]
May 16 16:43:18.907: INFO: Created: latency-svc-v4xtq
May 16 16:43:18.937: INFO: Got endpoints: latency-svc-dnscw [750.347402ms]
May 16 16:43:18.951: INFO: Created: latency-svc-p5n5f
May 16 16:43:18.987: INFO: Got endpoints: latency-svc-h8jzl [751.630963ms]
May 16 16:43:19.004: INFO: Created: latency-svc-9r7pm
May 16 16:43:19.036: INFO: Got endpoints: latency-svc-ll57h [749.902566ms]
May 16 16:43:19.051: INFO: Created: latency-svc-qd844
May 16 16:43:19.092: INFO: Got endpoints: latency-svc-g7qx6 [752.399032ms]
May 16 16:43:19.107: INFO: Created: latency-svc-gtb9l
May 16 16:43:19.136: INFO: Got endpoints: latency-svc-6ng8f [747.226602ms]
May 16 16:43:19.151: INFO: Created: latency-svc-cbxk7
May 16 16:43:19.187: INFO: Got endpoints: latency-svc-pzvzj [750.857258ms]
May 16 16:43:19.203: INFO: Created: latency-svc-vhf24
May 16 16:43:19.233: INFO: Got endpoints: latency-svc-bnsqf [746.769742ms]
May 16 16:43:19.256: INFO: Created: latency-svc-rjf9f
May 16 16:43:19.284: INFO: Got endpoints: latency-svc-7s5bk [747.962531ms]
May 16 16:43:19.299: INFO: Created: latency-svc-sljr6
May 16 16:43:19.338: INFO: Got endpoints: latency-svc-z2btc [752.082201ms]
May 16 16:43:19.352: INFO: Created: latency-svc-9xfpm
May 16 16:43:19.389: INFO: Got endpoints: latency-svc-fl5kb [751.884758ms]
May 16 16:43:19.406: INFO: Created: latency-svc-hhwqt
May 16 16:43:19.439: INFO: Got endpoints: latency-svc-8bmv6 [752.80649ms]
May 16 16:43:19.460: INFO: Created: latency-svc-gtghb
May 16 16:43:19.486: INFO: Got endpoints: latency-svc-qkcsx [695.540556ms]
May 16 16:43:19.503: INFO: Created: latency-svc-9jf5b
May 16 16:43:19.535: INFO: Got endpoints: latency-svc-czjsv [744.355985ms]
May 16 16:43:19.557: INFO: Created: latency-svc-8w8ll
May 16 16:43:19.587: INFO: Got endpoints: latency-svc-zbqzx [751.612906ms]
May 16 16:43:19.601: INFO: Created: latency-svc-lv6sx
May 16 16:43:19.637: INFO: Got endpoints: latency-svc-v4xtq [750.112805ms]
May 16 16:43:19.651: INFO: Created: latency-svc-8xzg9
May 16 16:43:19.688: INFO: Got endpoints: latency-svc-p5n5f [750.280508ms]
May 16 16:43:19.707: INFO: Created: latency-svc-gm44f
May 16 16:43:19.737: INFO: Got endpoints: latency-svc-9r7pm [749.667816ms]
May 16 16:43:19.753: INFO: Created: latency-svc-7kqnd
May 16 16:43:19.785: INFO: Got endpoints: latency-svc-qd844 [749.333799ms]
May 16 16:43:19.803: INFO: Created: latency-svc-n9d79
May 16 16:43:19.836: INFO: Got endpoints: latency-svc-gtb9l [743.982156ms]
May 16 16:43:19.854: INFO: Created: latency-svc-djflz
May 16 16:43:19.886: INFO: Got endpoints: latency-svc-cbxk7 [750.501011ms]
May 16 16:43:19.908: INFO: Created: latency-svc-zgs82
May 16 16:43:19.936: INFO: Got endpoints: latency-svc-vhf24 [748.300109ms]
May 16 16:43:19.950: INFO: Created: latency-svc-mxxf9
May 16 16:43:19.990: INFO: Got endpoints: latency-svc-rjf9f [756.404153ms]
May 16 16:43:20.013: INFO: Created: latency-svc-jbcvb
May 16 16:43:20.035: INFO: Got endpoints: latency-svc-sljr6 [750.921272ms]
May 16 16:43:20.051: INFO: Created: latency-svc-zpsfl
May 16 16:43:20.085: INFO: Got endpoints: latency-svc-9xfpm [747.103372ms]
May 16 16:43:20.099: INFO: Created: latency-svc-wmww4
May 16 16:43:20.148: INFO: Got endpoints: latency-svc-hhwqt [759.458793ms]
May 16 16:43:20.203: INFO: Got endpoints: latency-svc-gtghb [763.891667ms]
May 16 16:43:20.210: INFO: Created: latency-svc-kz299
May 16 16:43:20.220: INFO: Created: latency-svc-jwlgb
May 16 16:43:20.238: INFO: Got endpoints: latency-svc-9jf5b [751.519361ms]
May 16 16:43:20.252: INFO: Created: latency-svc-jd9q2
May 16 16:43:20.286: INFO: Got endpoints: latency-svc-8w8ll [750.45656ms]
May 16 16:43:20.308: INFO: Created: latency-svc-qb9pp
May 16 16:43:20.338: INFO: Got endpoints: latency-svc-lv6sx [751.762999ms]
May 16 16:43:20.357: INFO: Created: latency-svc-f6jlx
May 16 16:43:20.392: INFO: Got endpoints: latency-svc-8xzg9 [754.15692ms]
May 16 16:43:20.409: INFO: Created: latency-svc-9p54j
May 16 16:43:20.438: INFO: Got endpoints: latency-svc-gm44f [750.556104ms]
May 16 16:43:20.455: INFO: Created: latency-svc-pn4c4
May 16 16:43:20.485: INFO: Got endpoints: latency-svc-7kqnd [747.631289ms]
May 16 16:43:20.501: INFO: Created: latency-svc-6p2zt
May 16 16:43:20.535: INFO: Got endpoints: latency-svc-n9d79 [749.996805ms]
May 16 16:43:20.555: INFO: Created: latency-svc-h9wlt
May 16 16:43:20.594: INFO: Got endpoints: latency-svc-djflz [757.891451ms]
May 16 16:43:20.611: INFO: Created: latency-svc-9dg5w
May 16 16:43:20.637: INFO: Got endpoints: latency-svc-zgs82 [750.904789ms]
May 16 16:43:20.653: INFO: Created: latency-svc-sddgc
May 16 16:43:20.687: INFO: Got endpoints: latency-svc-mxxf9 [751.081282ms]
May 16 16:43:20.700: INFO: Created: latency-svc-qlng4
May 16 16:43:20.736: INFO: Got endpoints: latency-svc-jbcvb [746.35297ms]
May 16 16:43:20.754: INFO: Created: latency-svc-4cfwg
May 16 16:43:20.785: INFO: Got endpoints: latency-svc-zpsfl [749.815006ms]
May 16 16:43:20.801: INFO: Created: latency-svc-4z2t5
May 16 16:43:20.838: INFO: Got endpoints: latency-svc-wmww4 [752.268611ms]
May 16 16:43:20.851: INFO: Created: latency-svc-v5777
May 16 16:43:20.888: INFO: Got endpoints: latency-svc-kz299 [739.543137ms]
May 16 16:43:20.904: INFO: Created: latency-svc-p478q
May 16 16:43:20.939: INFO: Got endpoints: latency-svc-jwlgb [736.536236ms]
May 16 16:43:20.955: INFO: Created: latency-svc-kq8rs
May 16 16:43:20.985: INFO: Got endpoints: latency-svc-jd9q2 [747.125394ms]
May 16 16:43:21.000: INFO: Created: latency-svc-zq2rp
May 16 16:43:21.038: INFO: Got endpoints: latency-svc-qb9pp [752.117012ms]
May 16 16:43:21.054: INFO: Created: latency-svc-89ldp
May 16 16:43:21.086: INFO: Got endpoints: latency-svc-f6jlx [747.783375ms]
May 16 16:43:21.103: INFO: Created: latency-svc-8gxxj
May 16 16:43:21.136: INFO: Got endpoints: latency-svc-9p54j [743.737406ms]
May 16 16:43:21.149: INFO: Created: latency-svc-hh6mp
May 16 16:43:21.185: INFO: Got endpoints: latency-svc-pn4c4 [746.418164ms]
May 16 16:43:21.209: INFO: Created: latency-svc-h8gvw
May 16 16:43:21.237: INFO: Got endpoints: latency-svc-6p2zt [752.138816ms]
May 16 16:43:21.252: INFO: Created: latency-svc-2mqbr
May 16 16:43:21.285: INFO: Got endpoints: latency-svc-h9wlt [749.673087ms]
May 16 16:43:21.303: INFO: Created: latency-svc-s75lj
May 16 16:43:21.339: INFO: Got endpoints: latency-svc-9dg5w [745.061723ms]
May 16 16:43:21.356: INFO: Created: latency-svc-p784m
May 16 16:43:21.386: INFO: Got endpoints: latency-svc-sddgc [749.288556ms]
May 16 16:43:21.403: INFO: Created: latency-svc-vwxht
May 16 16:43:21.436: INFO: Got endpoints: latency-svc-qlng4 [749.216737ms]
May 16 16:43:21.452: INFO: Created: latency-svc-5z7r4
May 16 16:43:21.488: INFO: Got endpoints: latency-svc-4cfwg [752.322881ms]
May 16 16:43:21.505: INFO: Created: latency-svc-887s7
May 16 16:43:21.535: INFO: Got endpoints: latency-svc-4z2t5 [750.051656ms]
May 16 16:43:21.551: INFO: Created: latency-svc-dhznh
May 16 16:43:21.587: INFO: Got endpoints: latency-svc-v5777 [749.222579ms]
May 16 16:43:21.601: INFO: Created: latency-svc-h4x7d
May 16 16:43:21.639: INFO: Got endpoints: latency-svc-p478q [750.787606ms]
May 16 16:43:21.657: INFO: Created: latency-svc-rjcnn
May 16 16:43:21.688: INFO: Got endpoints: latency-svc-kq8rs [748.731233ms]
May 16 16:43:21.706: INFO: Created: latency-svc-z6tfx
May 16 16:43:21.736: INFO: Got endpoints: latency-svc-zq2rp [750.849965ms]
May 16 16:43:21.750: INFO: Created: latency-svc-jklzt
May 16 16:43:21.784: INFO: Got endpoints: latency-svc-89ldp [745.644015ms]
May 16 16:43:21.800: INFO: Created: latency-svc-k2wjv
May 16 16:43:21.840: INFO: Got endpoints: latency-svc-8gxxj [753.598781ms]
May 16 16:43:21.858: INFO: Created: latency-svc-9j6cc
May 16 16:43:21.887: INFO: Got endpoints: latency-svc-hh6mp [750.997816ms]
May 16 16:43:21.904: INFO: Created: latency-svc-m67sf
May 16 16:43:21.939: INFO: Got endpoints: latency-svc-h8gvw [754.196946ms]
May 16 16:43:21.974: INFO: Created: latency-svc-k7d8x
May 16 16:43:21.988: INFO: Got endpoints: latency-svc-2mqbr [751.258818ms]
May 16 16:43:22.004: INFO: Created: latency-svc-9txnl
May 16 16:43:22.040: INFO: Got endpoints: latency-svc-s75lj [754.91261ms]
May 16 16:43:22.055: INFO: Created: latency-svc-kjsvs
May 16 16:43:22.090: INFO: Got endpoints: latency-svc-p784m [750.399143ms]
May 16 16:43:22.107: INFO: Created: latency-svc-vxjjr
May 16 16:43:22.137: INFO: Got endpoints: latency-svc-vwxht [750.585614ms]
May 16 16:43:22.152: INFO: Created: latency-svc-rzcj6
May 16 16:43:22.186: INFO: Got endpoints: latency-svc-5z7r4 [750.15276ms]
May 16 16:43:22.236: INFO: Got endpoints: latency-svc-887s7 [747.817821ms]
May 16 16:43:22.284: INFO: Got endpoints: latency-svc-dhznh [749.146383ms]
May 16 16:43:22.337: INFO: Got endpoints: latency-svc-h4x7d [749.762123ms]
May 16 16:43:22.386: INFO: Got endpoints: latency-svc-rjcnn [747.708168ms]
May 16 16:43:22.436: INFO: Got endpoints: latency-svc-z6tfx [747.723637ms]
May 16 16:43:22.487: INFO: Got endpoints: latency-svc-jklzt [750.535523ms]
May 16 16:43:22.536: INFO: Got endpoints: latency-svc-k2wjv [752.264842ms]
May 16 16:43:22.587: INFO: Got endpoints: latency-svc-9j6cc [746.97957ms]
May 16 16:43:22.635: INFO: Got endpoints: latency-svc-m67sf [747.948555ms]
May 16 16:43:22.688: INFO: Got endpoints: latency-svc-k7d8x [749.164165ms]
May 16 16:43:22.738: INFO: Got endpoints: latency-svc-9txnl [749.407688ms]
May 16 16:43:22.787: INFO: Got endpoints: latency-svc-kjsvs [747.172224ms]
May 16 16:43:22.840: INFO: Got endpoints: latency-svc-vxjjr [749.820522ms]
May 16 16:43:22.888: INFO: Got endpoints: latency-svc-rzcj6 [750.392976ms]
May 16 16:43:22.888: INFO: Latencies: [38.009615ms 49.301941ms 59.906244ms 61.734524ms 62.819803ms 64.774976ms 69.475251ms 78.469642ms 86.059804ms 99.683183ms 106.665371ms 113.903894ms 122.628621ms 131.887634ms 142.318207ms 156.200692ms 166.767835ms 169.54683ms 176.762612ms 180.453517ms 183.279078ms 185.435354ms 185.758503ms 186.248631ms 186.33754ms 193.727447ms 199.485121ms 200.000308ms 200.58711ms 208.82429ms 212.516967ms 216.700593ms 217.869393ms 223.373359ms 227.368689ms 228.602504ms 234.950784ms 240.041412ms 248.997902ms 252.38851ms 255.804041ms 256.906629ms 257.341236ms 328.0497ms 334.239784ms 397.537429ms 416.604071ms 550.008162ms 564.114326ms 571.709455ms 682.675394ms 695.540556ms 701.153463ms 717.180415ms 718.437156ms 725.573519ms 735.867379ms 736.536236ms 739.543137ms 742.373302ms 743.608393ms 743.737406ms 743.982156ms 744.070936ms 744.355985ms 745.061723ms 745.607955ms 745.644015ms 745.780035ms 745.995245ms 746.181112ms 746.35297ms 746.418164ms 746.769742ms 746.935765ms 746.97957ms 747.103372ms 747.125394ms 747.12653ms 747.172224ms 747.226602ms 747.299341ms 747.537715ms 747.618611ms 747.631289ms 747.708168ms 747.723637ms 747.783375ms 747.817821ms 747.948555ms 747.962531ms 748.122763ms 748.255967ms 748.25724ms 748.300109ms 748.443596ms 748.456946ms 748.701869ms 748.731233ms 748.980967ms 748.988162ms 749.134609ms 749.146383ms 749.164165ms 749.216737ms 749.222579ms 749.288556ms 749.292203ms 749.333799ms 749.402979ms 749.407688ms 749.460666ms 749.566709ms 749.64557ms 749.667816ms 749.673087ms 749.715227ms 749.762123ms 749.800506ms 749.815006ms 749.820522ms 749.902566ms 749.93942ms 749.966156ms 749.996805ms 750.051656ms 750.094305ms 750.112805ms 750.15276ms 750.280508ms 750.347402ms 750.360247ms 750.392976ms 750.395926ms 750.399143ms 750.45656ms 750.501011ms 750.535523ms 750.556104ms 750.585614ms 750.624312ms 750.650694ms 750.744493ms 750.787606ms 750.849965ms 750.857258ms 750.904789ms 750.91194ms 750.921272ms 750.988726ms 750.997816ms 751.081282ms 751.237089ms 751.258818ms 751.368351ms 751.393397ms 751.519361ms 751.612906ms 751.630963ms 751.666926ms 751.762999ms 751.884758ms 751.913926ms 752.082201ms 752.117012ms 752.136225ms 752.138816ms 752.264842ms 752.268611ms 752.322881ms 752.399032ms 752.523433ms 752.613051ms 752.645241ms 752.80649ms 752.823571ms 752.861577ms 752.934451ms 753.088551ms 753.430179ms 753.533041ms 753.598781ms 753.741837ms 754.15692ms 754.177676ms 754.196946ms 754.91261ms 756.404153ms 757.891451ms 758.092379ms 759.458793ms 763.891667ms 767.594899ms 774.386454ms 775.454802ms 784.512646ms 801.245462ms 804.472233ms 805.045534ms 882.627626ms]
May 16 16:43:22.888: INFO: 50 %ile: 748.988162ms
May 16 16:43:22.888: INFO: 90 %ile: 753.533041ms
May 16 16:43:22.888: INFO: 99 %ile: 805.045534ms
May 16 16:43:22.888: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:188
May 16 16:43:22.888: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-1821" for this suite.

• [SLOW TEST:11.011 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":356,"completed":115,"skipped":2356,"failed":0}
SSSSS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:43:22.919: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-8928
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
May 16 16:43:25.115: INFO: pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
May 16 16:43:29.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-8928" for this suite.

• [SLOW TEST:6.422 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":356,"completed":116,"skipped":2361,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:43:29.342: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5655
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-82c7499e-46f5-4705-a460-d01320d3c776
STEP: Creating a pod to test consume secrets
May 16 16:43:29.514: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-e6980c56-6bd6-4bb5-9c05-23dac222fa4f" in namespace "projected-5655" to be "Succeeded or Failed"
May 16 16:43:29.524: INFO: Pod "pod-projected-secrets-e6980c56-6bd6-4bb5-9c05-23dac222fa4f": Phase="Pending", Reason="", readiness=false. Elapsed: 10.096322ms
May 16 16:43:31.531: INFO: Pod "pod-projected-secrets-e6980c56-6bd6-4bb5-9c05-23dac222fa4f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017243956s
May 16 16:43:33.548: INFO: Pod "pod-projected-secrets-e6980c56-6bd6-4bb5-9c05-23dac222fa4f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033466772s
STEP: Saw pod success
May 16 16:43:33.548: INFO: Pod "pod-projected-secrets-e6980c56-6bd6-4bb5-9c05-23dac222fa4f" satisfied condition "Succeeded or Failed"
May 16 16:43:33.555: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-projected-secrets-e6980c56-6bd6-4bb5-9c05-23dac222fa4f container projected-secret-volume-test: <nil>
STEP: delete the pod
May 16 16:43:33.590: INFO: Waiting for pod pod-projected-secrets-e6980c56-6bd6-4bb5-9c05-23dac222fa4f to disappear
May 16 16:43:33.595: INFO: Pod pod-projected-secrets-e6980c56-6bd6-4bb5-9c05-23dac222fa4f no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
May 16 16:43:33.595: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5655" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":117,"skipped":2366,"failed":0}
SSSS
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:43:33.615: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslicemirroring-7926
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
STEP: mirroring a new custom Endpoint
May 16 16:43:33.798: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
May 16 16:43:35.820: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint
May 16 16:43:37.846: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:188
May 16 16:43:39.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-7926" for this suite.

• [SLOW TEST:6.260 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":356,"completed":118,"skipped":2370,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:43:39.875: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-9025
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod with failed condition
STEP: updating the pod
May 16 16:45:40.574: INFO: Successfully updated pod "var-expansion-cba75060-0aa6-471c-8484-f9ee424ee78d"
STEP: waiting for pod running
STEP: deleting the pod gracefully
May 16 16:45:42.592: INFO: Deleting pod "var-expansion-cba75060-0aa6-471c-8484-f9ee424ee78d" in namespace "var-expansion-9025"
May 16 16:45:42.605: INFO: Wait up to 5m0s for pod "var-expansion-cba75060-0aa6-471c-8484-f9ee424ee78d" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
May 16 16:46:14.622: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-9025" for this suite.

• [SLOW TEST:154.765 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":356,"completed":119,"skipped":2422,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:46:14.641: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2348
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
May 16 16:46:14.787: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:46:30.183: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2348" for this suite.

• [SLOW TEST:15.565 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":356,"completed":120,"skipped":2444,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:46:30.206: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-435
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-435 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-435;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-435 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-435;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-435.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-435.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-435.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-435.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-435.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-435.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-435.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-435.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-435.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-435.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-435.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-435.svc;check="$$(dig +notcp +noall +answer +search 150.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.150_udp@PTR;check="$$(dig +tcp +noall +answer +search 150.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.150_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-435 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-435;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-435 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-435;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-435.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-435.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-435.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-435.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-435.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-435.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-435.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-435.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-435.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-435.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-435.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-435.svc;check="$$(dig +notcp +noall +answer +search 150.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.150_udp@PTR;check="$$(dig +tcp +noall +answer +search 150.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.150_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
May 16 16:46:32.423: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.430: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.435: INFO: Unable to read wheezy_udp@dns-test-service.dns-435 from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.441: INFO: Unable to read wheezy_tcp@dns-test-service.dns-435 from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.447: INFO: Unable to read wheezy_udp@dns-test-service.dns-435.svc from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.452: INFO: Unable to read wheezy_tcp@dns-test-service.dns-435.svc from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.458: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-435.svc from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.464: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-435.svc from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.492: INFO: Unable to read jessie_udp@dns-test-service from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.498: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.503: INFO: Unable to read jessie_udp@dns-test-service.dns-435 from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.509: INFO: Unable to read jessie_tcp@dns-test-service.dns-435 from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.515: INFO: Unable to read jessie_udp@dns-test-service.dns-435.svc from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.520: INFO: Unable to read jessie_tcp@dns-test-service.dns-435.svc from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.526: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-435.svc from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.532: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-435.svc from pod dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588: the server could not find the requested resource (get pods dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588)
May 16 16:46:32.555: INFO: Lookups using dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-435 wheezy_tcp@dns-test-service.dns-435 wheezy_udp@dns-test-service.dns-435.svc wheezy_tcp@dns-test-service.dns-435.svc wheezy_udp@_http._tcp.dns-test-service.dns-435.svc wheezy_tcp@_http._tcp.dns-test-service.dns-435.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-435 jessie_tcp@dns-test-service.dns-435 jessie_udp@dns-test-service.dns-435.svc jessie_tcp@dns-test-service.dns-435.svc jessie_udp@_http._tcp.dns-test-service.dns-435.svc jessie_tcp@_http._tcp.dns-test-service.dns-435.svc]

May 16 16:46:37.693: INFO: DNS probes using dns-435/dns-test-08d9baa2-af4f-4f82-8ce9-cdb691f3b588 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
May 16 16:46:37.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-435" for this suite.

• [SLOW TEST:7.602 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":356,"completed":121,"skipped":2473,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:46:37.809: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2394
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 16:46:38.315: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 16:46:41.356: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:46:41.362: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:46:44.538: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2394" for this suite.
STEP: Destroying namespace "webhook-2394-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.816 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":356,"completed":122,"skipped":2485,"failed":0}
SSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:46:44.625: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3634
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-65b40e09-f323-48f0-b827-dabe5a6bb177
STEP: Creating a pod to test consume secrets
May 16 16:46:44.789: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-3d96a3a9-2075-4532-a339-542f976a4542" in namespace "projected-3634" to be "Succeeded or Failed"
May 16 16:46:44.794: INFO: Pod "pod-projected-secrets-3d96a3a9-2075-4532-a339-542f976a4542": Phase="Pending", Reason="", readiness=false. Elapsed: 5.305857ms
May 16 16:46:46.802: INFO: Pod "pod-projected-secrets-3d96a3a9-2075-4532-a339-542f976a4542": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013184714s
May 16 16:46:48.814: INFO: Pod "pod-projected-secrets-3d96a3a9-2075-4532-a339-542f976a4542": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024487455s
STEP: Saw pod success
May 16 16:46:48.814: INFO: Pod "pod-projected-secrets-3d96a3a9-2075-4532-a339-542f976a4542" satisfied condition "Succeeded or Failed"
May 16 16:46:48.818: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-projected-secrets-3d96a3a9-2075-4532-a339-542f976a4542 container projected-secret-volume-test: <nil>
STEP: delete the pod
May 16 16:46:48.863: INFO: Waiting for pod pod-projected-secrets-3d96a3a9-2075-4532-a339-542f976a4542 to disappear
May 16 16:46:48.867: INFO: Pod pod-projected-secrets-3d96a3a9-2075-4532-a339-542f976a4542 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
May 16 16:46:48.867: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3634" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":123,"skipped":2489,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:46:48.883: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-519
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 16:46:49.665: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 16:46:52.698: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:46:52.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-519" for this suite.
STEP: Destroying namespace "webhook-519-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":356,"completed":124,"skipped":2514,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:46:52.803: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-5811
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test env composition
May 16 16:46:52.955: INFO: Waiting up to 5m0s for pod "var-expansion-2b7b98a4-bca3-4d3d-9d4e-c6e1198ea814" in namespace "var-expansion-5811" to be "Succeeded or Failed"
May 16 16:46:52.965: INFO: Pod "var-expansion-2b7b98a4-bca3-4d3d-9d4e-c6e1198ea814": Phase="Pending", Reason="", readiness=false. Elapsed: 9.888592ms
May 16 16:46:54.976: INFO: Pod "var-expansion-2b7b98a4-bca3-4d3d-9d4e-c6e1198ea814": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02098548s
May 16 16:46:56.986: INFO: Pod "var-expansion-2b7b98a4-bca3-4d3d-9d4e-c6e1198ea814": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030707823s
STEP: Saw pod success
May 16 16:46:56.986: INFO: Pod "var-expansion-2b7b98a4-bca3-4d3d-9d4e-c6e1198ea814" satisfied condition "Succeeded or Failed"
May 16 16:46:56.991: INFO: Trying to get logs from node ip-172-31-76-3 pod var-expansion-2b7b98a4-bca3-4d3d-9d4e-c6e1198ea814 container dapi-container: <nil>
STEP: delete the pod
May 16 16:46:57.020: INFO: Waiting for pod var-expansion-2b7b98a4-bca3-4d3d-9d4e-c6e1198ea814 to disappear
May 16 16:46:57.025: INFO: Pod var-expansion-2b7b98a4-bca3-4d3d-9d4e-c6e1198ea814 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
May 16 16:46:57.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-5811" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":356,"completed":125,"skipped":2529,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:46:57.041: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1822
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 16:46:57.202: INFO: Waiting up to 5m0s for pod "downwardapi-volume-90797059-0baa-4796-8346-a59cd140deff" in namespace "projected-1822" to be "Succeeded or Failed"
May 16 16:46:57.208: INFO: Pod "downwardapi-volume-90797059-0baa-4796-8346-a59cd140deff": Phase="Pending", Reason="", readiness=false. Elapsed: 5.418957ms
May 16 16:46:59.219: INFO: Pod "downwardapi-volume-90797059-0baa-4796-8346-a59cd140deff": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016472843s
May 16 16:47:01.226: INFO: Pod "downwardapi-volume-90797059-0baa-4796-8346-a59cd140deff": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023504765s
STEP: Saw pod success
May 16 16:47:01.226: INFO: Pod "downwardapi-volume-90797059-0baa-4796-8346-a59cd140deff" satisfied condition "Succeeded or Failed"
May 16 16:47:01.232: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-90797059-0baa-4796-8346-a59cd140deff container client-container: <nil>
STEP: delete the pod
May 16 16:47:01.265: INFO: Waiting for pod downwardapi-volume-90797059-0baa-4796-8346-a59cd140deff to disappear
May 16 16:47:01.269: INFO: Pod downwardapi-volume-90797059-0baa-4796-8346-a59cd140deff no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
May 16 16:47:01.269: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1822" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":126,"skipped":2551,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:47:01.285: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-3813
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
May 16 16:47:01.449: INFO: Waiting up to 5m0s for pod "security-context-6de85d3c-4141-4068-9334-e518b8e50f92" in namespace "security-context-3813" to be "Succeeded or Failed"
May 16 16:47:01.455: INFO: Pod "security-context-6de85d3c-4141-4068-9334-e518b8e50f92": Phase="Pending", Reason="", readiness=false. Elapsed: 6.284236ms
May 16 16:47:03.464: INFO: Pod "security-context-6de85d3c-4141-4068-9334-e518b8e50f92": Phase="Running", Reason="", readiness=false. Elapsed: 2.014833826s
May 16 16:47:05.475: INFO: Pod "security-context-6de85d3c-4141-4068-9334-e518b8e50f92": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02609631s
STEP: Saw pod success
May 16 16:47:05.475: INFO: Pod "security-context-6de85d3c-4141-4068-9334-e518b8e50f92" satisfied condition "Succeeded or Failed"
May 16 16:47:05.480: INFO: Trying to get logs from node ip-172-31-76-3 pod security-context-6de85d3c-4141-4068-9334-e518b8e50f92 container test-container: <nil>
STEP: delete the pod
May 16 16:47:05.525: INFO: Waiting for pod security-context-6de85d3c-4141-4068-9334-e518b8e50f92 to disappear
May 16 16:47:05.530: INFO: Pod security-context-6de85d3c-4141-4068-9334-e518b8e50f92 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
May 16 16:47:05.530: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-3813" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":127,"skipped":2568,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:47:05.555: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-4407
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-z7gw
STEP: Creating a pod to test atomic-volume-subpath
May 16 16:47:05.738: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-z7gw" in namespace "subpath-4407" to be "Succeeded or Failed"
May 16 16:47:05.744: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Pending", Reason="", readiness=false. Elapsed: 5.20736ms
May 16 16:47:07.753: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Running", Reason="", readiness=true. Elapsed: 2.014295234s
May 16 16:47:09.763: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Running", Reason="", readiness=true. Elapsed: 4.024738102s
May 16 16:47:11.773: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Running", Reason="", readiness=true. Elapsed: 6.034044503s
May 16 16:47:13.786: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Running", Reason="", readiness=true. Elapsed: 8.046990956s
May 16 16:47:15.797: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Running", Reason="", readiness=true. Elapsed: 10.0589784s
May 16 16:47:17.807: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Running", Reason="", readiness=true. Elapsed: 12.068961555s
May 16 16:47:19.819: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Running", Reason="", readiness=true. Elapsed: 14.080890731s
May 16 16:47:21.828: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Running", Reason="", readiness=true. Elapsed: 16.08928055s
May 16 16:47:23.836: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Running", Reason="", readiness=true. Elapsed: 18.097642597s
May 16 16:47:25.852: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Running", Reason="", readiness=true. Elapsed: 20.113167807s
May 16 16:47:27.862: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Running", Reason="", readiness=false. Elapsed: 22.123142703s
May 16 16:47:29.871: INFO: Pod "pod-subpath-test-configmap-z7gw": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.132778301s
STEP: Saw pod success
May 16 16:47:29.871: INFO: Pod "pod-subpath-test-configmap-z7gw" satisfied condition "Succeeded or Failed"
May 16 16:47:29.877: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-subpath-test-configmap-z7gw container test-container-subpath-configmap-z7gw: <nil>
STEP: delete the pod
May 16 16:47:29.908: INFO: Waiting for pod pod-subpath-test-configmap-z7gw to disappear
May 16 16:47:29.913: INFO: Pod pod-subpath-test-configmap-z7gw no longer exists
STEP: Deleting pod pod-subpath-test-configmap-z7gw
May 16 16:47:29.913: INFO: Deleting pod "pod-subpath-test-configmap-z7gw" in namespace "subpath-4407"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
May 16 16:47:29.918: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-4407" for this suite.

• [SLOW TEST:24.379 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]","total":356,"completed":128,"skipped":2605,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:47:29.934: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6783
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 16:47:30.094: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6783541b-e519-4243-b320-0f0cd3a6ac1a" in namespace "projected-6783" to be "Succeeded or Failed"
May 16 16:47:30.100: INFO: Pod "downwardapi-volume-6783541b-e519-4243-b320-0f0cd3a6ac1a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.80559ms
May 16 16:47:32.108: INFO: Pod "downwardapi-volume-6783541b-e519-4243-b320-0f0cd3a6ac1a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014432625s
May 16 16:47:34.118: INFO: Pod "downwardapi-volume-6783541b-e519-4243-b320-0f0cd3a6ac1a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023895823s
STEP: Saw pod success
May 16 16:47:34.118: INFO: Pod "downwardapi-volume-6783541b-e519-4243-b320-0f0cd3a6ac1a" satisfied condition "Succeeded or Failed"
May 16 16:47:34.122: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-6783541b-e519-4243-b320-0f0cd3a6ac1a container client-container: <nil>
STEP: delete the pod
May 16 16:47:34.152: INFO: Waiting for pod downwardapi-volume-6783541b-e519-4243-b320-0f0cd3a6ac1a to disappear
May 16 16:47:34.157: INFO: Pod downwardapi-volume-6783541b-e519-4243-b320-0f0cd3a6ac1a no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
May 16 16:47:34.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6783" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":129,"skipped":2637,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:47:34.174: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7425
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
May 16 16:47:34.332: INFO: Waiting up to 5m0s for pod "downward-api-747dcf87-022f-4899-93cc-7be00ee2bdfe" in namespace "downward-api-7425" to be "Succeeded or Failed"
May 16 16:47:34.340: INFO: Pod "downward-api-747dcf87-022f-4899-93cc-7be00ee2bdfe": Phase="Pending", Reason="", readiness=false. Elapsed: 8.650208ms
May 16 16:47:36.349: INFO: Pod "downward-api-747dcf87-022f-4899-93cc-7be00ee2bdfe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017751678s
May 16 16:47:38.360: INFO: Pod "downward-api-747dcf87-022f-4899-93cc-7be00ee2bdfe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028369938s
STEP: Saw pod success
May 16 16:47:38.360: INFO: Pod "downward-api-747dcf87-022f-4899-93cc-7be00ee2bdfe" satisfied condition "Succeeded or Failed"
May 16 16:47:38.365: INFO: Trying to get logs from node ip-172-31-76-3 pod downward-api-747dcf87-022f-4899-93cc-7be00ee2bdfe container dapi-container: <nil>
STEP: delete the pod
May 16 16:47:38.395: INFO: Waiting for pod downward-api-747dcf87-022f-4899-93cc-7be00ee2bdfe to disappear
May 16 16:47:38.400: INFO: Pod downward-api-747dcf87-022f-4899-93cc-7be00ee2bdfe no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
May 16 16:47:38.400: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7425" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":356,"completed":130,"skipped":2653,"failed":0}
SSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:47:38.414: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-1454
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
May 16 16:47:38.608: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 16:47:38.608: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 16:47:38.613: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 16:47:38.613: INFO: Node ip-172-31-10-138 is running 0 daemon pod, expected 1
May 16 16:47:39.623: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 16:47:39.623: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 16:47:39.629: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 16:47:39.629: INFO: Node ip-172-31-10-138 is running 0 daemon pod, expected 1
May 16 16:47:40.622: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 16:47:40.622: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 16:47:40.627: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
May 16 16:47:40.627: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
May 16 16:47:40.652: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 16:47:40.652: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 16:47:40.657: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
May 16 16:47:40.658: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1454, will wait for the garbage collector to delete the pods
May 16 16:47:41.750: INFO: Deleting DaemonSet.extensions daemon-set took: 11.044523ms
May 16 16:47:41.850: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.187109ms
May 16 16:47:43.457: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 16:47:43.457: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
May 16 16:47:43.461: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19700"},"items":null}

May 16 16:47:43.466: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19700"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
May 16 16:47:43.488: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-1454" for this suite.

• [SLOW TEST:5.088 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":356,"completed":131,"skipped":2656,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:47:43.503: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2796
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name secret-emptykey-test-00b5290b-7bd3-41e3-903f-97cf50cb9c15
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
May 16 16:47:43.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2796" for this suite.
•{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":356,"completed":132,"skipped":2677,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:47:43.678: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-6356
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
May 16 16:47:43.821: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 16:47:46.273: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:47:56.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-6356" for this suite.

• [SLOW TEST:12.830 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":356,"completed":133,"skipped":2683,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:47:56.508: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-8286
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
May 16 16:47:56.692: INFO: Waiting up to 5m0s for pod "security-context-1dbf56f1-a98e-4ccf-96a6-3507eeff5dc2" in namespace "security-context-8286" to be "Succeeded or Failed"
May 16 16:47:56.697: INFO: Pod "security-context-1dbf56f1-a98e-4ccf-96a6-3507eeff5dc2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.051783ms
May 16 16:47:58.706: INFO: Pod "security-context-1dbf56f1-a98e-4ccf-96a6-3507eeff5dc2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014353369s
May 16 16:48:00.718: INFO: Pod "security-context-1dbf56f1-a98e-4ccf-96a6-3507eeff5dc2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02548927s
STEP: Saw pod success
May 16 16:48:00.718: INFO: Pod "security-context-1dbf56f1-a98e-4ccf-96a6-3507eeff5dc2" satisfied condition "Succeeded or Failed"
May 16 16:48:00.722: INFO: Trying to get logs from node ip-172-31-76-3 pod security-context-1dbf56f1-a98e-4ccf-96a6-3507eeff5dc2 container test-container: <nil>
STEP: delete the pod
May 16 16:48:00.753: INFO: Waiting for pod security-context-1dbf56f1-a98e-4ccf-96a6-3507eeff5dc2 to disappear
May 16 16:48:00.757: INFO: Pod security-context-1dbf56f1-a98e-4ccf-96a6-3507eeff5dc2 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
May 16 16:48:00.757: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-8286" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":134,"skipped":2695,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:48:00.773: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-703
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-6416
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-2543
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
May 16 16:48:14.261: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-703" for this suite.
STEP: Destroying namespace "nsdeletetest-6416" for this suite.
May 16 16:48:14.285: INFO: Namespace nsdeletetest-6416 was already deleted
STEP: Destroying namespace "nsdeletetest-2543" for this suite.

• [SLOW TEST:13.522 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":356,"completed":135,"skipped":2701,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:48:14.295: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-8800
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-8800, will wait for the garbage collector to delete the pods
May 16 16:48:16.518: INFO: Deleting Job.batch foo took: 9.918485ms
May 16 16:48:16.619: INFO: Terminating Job.batch foo pods took: 101.173873ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
May 16 16:48:48.630: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8800" for this suite.

• [SLOW TEST:34.358 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":356,"completed":136,"skipped":2723,"failed":0}
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:48:48.653: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5248
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 16:48:49.524: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 16:48:52.558: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:48:52.730: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5248" for this suite.
STEP: Destroying namespace "webhook-5248-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":356,"completed":137,"skipped":2726,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:48:52.821: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9887
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
May 16 16:48:52.988: INFO: The status of Pod annotationupdateca510fd4-e768-4ce3-92f8-85dc6b8419bb is Pending, waiting for it to be Running (with Ready = true)
May 16 16:48:54.998: INFO: The status of Pod annotationupdateca510fd4-e768-4ce3-92f8-85dc6b8419bb is Running (Ready = true)
May 16 16:48:55.532: INFO: Successfully updated pod "annotationupdateca510fd4-e768-4ce3-92f8-85dc6b8419bb"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
May 16 16:48:57.553: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9887" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":138,"skipped":2744,"failed":0}
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:48:57.572: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4697
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 16:48:57.947: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 16:49:00.988: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:49:01.297: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4697" for this suite.
STEP: Destroying namespace "webhook-4697-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":356,"completed":139,"skipped":2747,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:49:01.393: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9669
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-9669
STEP: creating service affinity-clusterip in namespace services-9669
STEP: creating replication controller affinity-clusterip in namespace services-9669
I0516 16:49:01.572635      17 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-9669, replica count: 3
I0516 16:49:04.623743      17 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
May 16 16:49:04.637: INFO: Creating new exec pod
May 16 16:49:07.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9669 exec execpod-affinityqs8p9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
May 16 16:49:07.825: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
May 16 16:49:07.825: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:49:07.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9669 exec execpod-affinityqs8p9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.124 80'
May 16 16:49:07.966: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.124 80\nConnection to 10.152.183.124 80 port [tcp/http] succeeded!\n"
May 16 16:49:07.966: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:49:07.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9669 exec execpod-affinityqs8p9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.124:80/ ; done'
May 16 16:49:08.195: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.124:80/\n"
May 16 16:49:08.195: INFO: stdout: "\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj\naffinity-clusterip-jkbpj"
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Received response from host: affinity-clusterip-jkbpj
May 16 16:49:08.195: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-9669, will wait for the garbage collector to delete the pods
May 16 16:49:08.278: INFO: Deleting ReplicationController affinity-clusterip took: 8.748434ms
May 16 16:49:08.379: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.680013ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 16:49:10.719: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9669" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:9.344 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":140,"skipped":2750,"failed":0}
SSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:49:10.737: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-2251
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:49:10.974: INFO: Creating ReplicaSet my-hostname-basic-0d7bf5a6-5b05-4c2d-b26a-211a9fde87d2
May 16 16:49:10.985: INFO: Pod name my-hostname-basic-0d7bf5a6-5b05-4c2d-b26a-211a9fde87d2: Found 0 pods out of 1
May 16 16:49:15.998: INFO: Pod name my-hostname-basic-0d7bf5a6-5b05-4c2d-b26a-211a9fde87d2: Found 1 pods out of 1
May 16 16:49:15.998: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-0d7bf5a6-5b05-4c2d-b26a-211a9fde87d2" is running
May 16 16:49:16.002: INFO: Pod "my-hostname-basic-0d7bf5a6-5b05-4c2d-b26a-211a9fde87d2-wk8kq" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-05-16 16:49:11 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-05-16 16:49:12 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-05-16 16:49:12 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-05-16 16:49:11 +0000 UTC Reason: Message:}])
May 16 16:49:16.003: INFO: Trying to dial the pod
May 16 16:49:21.032: INFO: Controller my-hostname-basic-0d7bf5a6-5b05-4c2d-b26a-211a9fde87d2: Got expected result from replica 1 [my-hostname-basic-0d7bf5a6-5b05-4c2d-b26a-211a9fde87d2-wk8kq]: "my-hostname-basic-0d7bf5a6-5b05-4c2d-b26a-211a9fde87d2-wk8kq", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
May 16 16:49:21.032: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-2251" for this suite.

• [SLOW TEST:10.311 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":141,"skipped":2754,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:49:21.048: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3294
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-3294
STEP: creating service affinity-nodeport-transition in namespace services-3294
STEP: creating replication controller affinity-nodeport-transition in namespace services-3294
I0516 16:49:21.231328      17 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-3294, replica count: 3
I0516 16:49:24.281896      17 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
May 16 16:49:24.301: INFO: Creating new exec pod
May 16 16:49:27.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-3294 exec execpod-affinity8hpt9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
May 16 16:49:27.483: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
May 16 16:49:27.483: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:49:27.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-3294 exec execpod-affinity8hpt9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.40 80'
May 16 16:49:27.623: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 10.152.183.40 80\nConnection to 10.152.183.40 80 port [tcp/http] succeeded!\n"
May 16 16:49:27.623: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:49:27.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-3294 exec execpod-affinity8hpt9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.3 31386'
May 16 16:49:27.767: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.76.3 31386\nConnection to 172.31.76.3 31386 port [tcp/*] succeeded!\n"
May 16 16:49:27.767: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:49:27.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-3294 exec execpod-affinity8hpt9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.36.36 31386'
May 16 16:49:27.902: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.36.36 31386\nConnection to 172.31.36.36 31386 port [tcp/*] succeeded!\n"
May 16 16:49:27.902: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:49:27.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-3294 exec execpod-affinity8hpt9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.138:31386/ ; done'
May 16 16:49:28.166: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n"
May 16 16:49:28.166: INFO: stdout: "\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-cqvdx\naffinity-nodeport-transition-g2xp7\naffinity-nodeport-transition-g2xp7\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-cqvdx\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-cqvdx\naffinity-nodeport-transition-g2xp7\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-g2xp7\naffinity-nodeport-transition-cqvdx\naffinity-nodeport-transition-g2xp7\naffinity-nodeport-transition-6q9z9"
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-cqvdx
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-g2xp7
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-g2xp7
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-cqvdx
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-cqvdx
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-g2xp7
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-g2xp7
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-cqvdx
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-g2xp7
May 16 16:49:28.166: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-3294 exec execpod-affinity8hpt9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.138:31386/ ; done'
May 16 16:49:28.435: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31386/\n"
May 16 16:49:28.435: INFO: stdout: "\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9\naffinity-nodeport-transition-6q9z9"
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Received response from host: affinity-nodeport-transition-6q9z9
May 16 16:49:28.435: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-3294, will wait for the garbage collector to delete the pods
May 16 16:49:28.524: INFO: Deleting ReplicationController affinity-nodeport-transition took: 9.689101ms
May 16 16:49:28.624: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.416687ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 16:49:31.064: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3294" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:10.031 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":142,"skipped":2767,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:49:31.080: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7660
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-d1449395-924e-481e-9b27-30d65f397fd8
STEP: Creating a pod to test consume configMaps
May 16 16:49:31.248: INFO: Waiting up to 5m0s for pod "pod-configmaps-06e7735f-e494-4a15-a83c-61740b022381" in namespace "configmap-7660" to be "Succeeded or Failed"
May 16 16:49:31.256: INFO: Pod "pod-configmaps-06e7735f-e494-4a15-a83c-61740b022381": Phase="Pending", Reason="", readiness=false. Elapsed: 8.706833ms
May 16 16:49:33.268: INFO: Pod "pod-configmaps-06e7735f-e494-4a15-a83c-61740b022381": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019997461s
May 16 16:49:35.278: INFO: Pod "pod-configmaps-06e7735f-e494-4a15-a83c-61740b022381": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030261434s
STEP: Saw pod success
May 16 16:49:35.278: INFO: Pod "pod-configmaps-06e7735f-e494-4a15-a83c-61740b022381" satisfied condition "Succeeded or Failed"
May 16 16:49:35.284: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-configmaps-06e7735f-e494-4a15-a83c-61740b022381 container agnhost-container: <nil>
STEP: delete the pod
May 16 16:49:35.310: INFO: Waiting for pod pod-configmaps-06e7735f-e494-4a15-a83c-61740b022381 to disappear
May 16 16:49:35.315: INFO: Pod pod-configmaps-06e7735f-e494-4a15-a83c-61740b022381 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
May 16 16:49:35.315: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7660" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":143,"skipped":2779,"failed":0}
SS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:49:35.329: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-2666
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-2666
STEP: creating a selector
STEP: Creating the service pods in kubernetes
May 16 16:49:35.473: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
May 16 16:49:35.525: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
May 16 16:49:37.534: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:49:39.535: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:49:41.533: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:49:43.531: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:49:45.536: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:49:47.535: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:49:49.536: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:49:51.533: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:49:53.532: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:49:55.535: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 16:49:57.534: INFO: The status of Pod netserver-0 is Running (Ready = true)
May 16 16:49:57.544: INFO: The status of Pod netserver-1 is Running (Ready = true)
May 16 16:49:57.554: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
May 16 16:49:59.608: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
May 16 16:49:59.608: INFO: Going to poll 192.168.46.95 on port 8081 at least 0 times, with a maximum of 39 tries before failing
May 16 16:49:59.614: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.46.95 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2666 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 16:49:59.614: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 16:49:59.615: INFO: ExecWithOptions: Clientset creation
May 16 16:49:59.615: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2666/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.46.95+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
May 16 16:50:00.702: INFO: Found all 1 expected endpoints: [netserver-0]
May 16 16:50:00.702: INFO: Going to poll 192.168.49.203 on port 8081 at least 0 times, with a maximum of 39 tries before failing
May 16 16:50:00.710: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.49.203 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2666 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 16:50:00.710: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 16:50:00.710: INFO: ExecWithOptions: Clientset creation
May 16 16:50:00.710: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2666/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.49.203+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
May 16 16:50:01.782: INFO: Found all 1 expected endpoints: [netserver-1]
May 16 16:50:01.782: INFO: Going to poll 192.168.238.186 on port 8081 at least 0 times, with a maximum of 39 tries before failing
May 16 16:50:01.791: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.238.186 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2666 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 16:50:01.791: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 16:50:01.791: INFO: ExecWithOptions: Clientset creation
May 16 16:50:01.791: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-2666/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.238.186+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
May 16 16:50:02.874: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
May 16 16:50:02.874: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-2666" for this suite.

• [SLOW TEST:27.568 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":144,"skipped":2781,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:50:02.897: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-193
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
May 16 16:50:19.222: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-193" for this suite.

• [SLOW TEST:16.342 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":356,"completed":145,"skipped":2807,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:50:19.239: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-1968
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
May 16 16:52:01.425: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-1968" for this suite.

• [SLOW TEST:102.203 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":356,"completed":146,"skipped":2821,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:52:01.443: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6081
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
May 16 16:52:01.682: INFO: Waiting up to 5m0s for pod "downward-api-d6e707c4-faf2-474e-9f8c-2e4e0749bbfe" in namespace "downward-api-6081" to be "Succeeded or Failed"
May 16 16:52:01.687: INFO: Pod "downward-api-d6e707c4-faf2-474e-9f8c-2e4e0749bbfe": Phase="Pending", Reason="", readiness=false. Elapsed: 5.360897ms
May 16 16:52:03.698: INFO: Pod "downward-api-d6e707c4-faf2-474e-9f8c-2e4e0749bbfe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015802246s
May 16 16:52:05.707: INFO: Pod "downward-api-d6e707c4-faf2-474e-9f8c-2e4e0749bbfe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025097044s
STEP: Saw pod success
May 16 16:52:05.707: INFO: Pod "downward-api-d6e707c4-faf2-474e-9f8c-2e4e0749bbfe" satisfied condition "Succeeded or Failed"
May 16 16:52:05.713: INFO: Trying to get logs from node ip-172-31-36-36 pod downward-api-d6e707c4-faf2-474e-9f8c-2e4e0749bbfe container dapi-container: <nil>
STEP: delete the pod
May 16 16:52:05.757: INFO: Waiting for pod downward-api-d6e707c4-faf2-474e-9f8c-2e4e0749bbfe to disappear
May 16 16:52:05.761: INFO: Pod downward-api-d6e707c4-faf2-474e-9f8c-2e4e0749bbfe no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
May 16 16:52:05.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6081" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":356,"completed":147,"skipped":2834,"failed":0}
SSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:52:05.777: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-6606
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
May 16 16:52:05.952: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
May 16 16:52:05.992: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-6606" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":356,"completed":148,"skipped":2842,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:52:06.009: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-9762
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:52:06.150: INFO: Creating deployment "webserver-deployment"
May 16 16:52:06.158: INFO: Waiting for observed generation 1
May 16 16:52:08.172: INFO: Waiting for all required pods to come up
May 16 16:52:08.178: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
May 16 16:52:10.195: INFO: Waiting for deployment "webserver-deployment" to complete
May 16 16:52:10.206: INFO: Updating deployment "webserver-deployment" with a non-existent image
May 16 16:52:10.220: INFO: Updating deployment webserver-deployment
May 16 16:52:10.220: INFO: Waiting for observed generation 2
May 16 16:52:12.235: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
May 16 16:52:12.240: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
May 16 16:52:12.244: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
May 16 16:52:12.259: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
May 16 16:52:12.259: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
May 16 16:52:12.264: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
May 16 16:52:12.273: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
May 16 16:52:12.273: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
May 16 16:52:12.297: INFO: Updating deployment webserver-deployment
May 16 16:52:12.297: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
May 16 16:52:12.312: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
May 16 16:52:12.319: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
May 16 16:52:12.344: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-9762  4c65b6b9-a438-4282-b9a7-18ca260fdc2f 21587 3 2022-05-16 16:52:06 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-05-16 16:52:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 16:52:10 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00386f198 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-05-16 16:52:08 +0000 UTC,LastTransitionTime:2022-05-16 16:52:08 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-57ccb67bb8" is progressing.,LastUpdateTime:2022-05-16 16:52:10 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

May 16 16:52:12.364: INFO: New ReplicaSet "webserver-deployment-57ccb67bb8" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-57ccb67bb8  deployment-9762  b444bc06-6674-4ad5-afbe-525233df0023 21595 3 2022-05-16 16:52:10 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 4c65b6b9-a438-4282-b9a7-18ca260fdc2f 0xc003734007 0xc003734008}] []  [{kube-controller-manager Update apps/v1 2022-05-16 16:52:10 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4c65b6b9-a438-4282-b9a7-18ca260fdc2f\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 16:52:10 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 57ccb67bb8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0037340a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
May 16 16:52:12.364: INFO: All old ReplicaSets of Deployment "webserver-deployment":
May 16 16:52:12.364: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-55df494869  deployment-9762  426c08b4-840d-4fe1-97f3-15789d815ffb 21590 3 2022-05-16 16:52:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 4c65b6b9-a438-4282-b9a7-18ca260fdc2f 0xc00314fc87 0xc00314fc88}] []  [{kube-controller-manager Update apps/v1 2022-05-16 16:52:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4c65b6b9-a438-4282-b9a7-18ca260fdc2f\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 16:52:07 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00314ffa8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
May 16 16:52:12.381: INFO: Pod "webserver-deployment-55df494869-2bksr" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-2bksr webserver-deployment-55df494869- deployment-9762  d1d982c2-72d5-4fe6-8b17-c5f7cbb1c0a5 21619 0 2022-05-16 16:52:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc0037345e7 0xc0037345e8}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-d8nfw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-d8nfw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-10-138,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.381: INFO: Pod "webserver-deployment-55df494869-2mrmj" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-2mrmj webserver-deployment-55df494869- deployment-9762  8a42612c-dae9-494b-95c0-7f800ac4f6f5 21449 0 2022-05-16 16:52:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc0037348f0 0xc0037348f1}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.131\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qxvmd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qxvmd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:192.168.238.131,StartTime:2022-05-16 16:52:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 16:52:07 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://c1d0b58d2051f1ea8f39260380aa2057cbeeafac5b0b1e88604bb357d6ab4829,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.238.131,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.381: INFO: Pod "webserver-deployment-55df494869-62tsh" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-62tsh webserver-deployment-55df494869- deployment-9762  6b784c77-b7fc-4074-bd19-6b8c054886f3 21599 0 2022-05-16 16:52:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc003734ad7 0xc003734ad8}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-w44wb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-w44wb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-36-36,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.381: INFO: Pod "webserver-deployment-55df494869-9wnkb" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-9wnkb webserver-deployment-55df494869- deployment-9762  2db93e9b-6d9a-48bc-a6af-8a690fa71a9a 21617 0 2022-05-16 16:52:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc003734c40 0xc003734c41}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-np4hg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-np4hg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-10-138,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.382: INFO: Pod "webserver-deployment-55df494869-cjvh6" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-cjvh6 webserver-deployment-55df494869- deployment-9762  087c65e3-74ab-40ab-92b8-de62598bf9f4 21604 0 2022-05-16 16:52:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc003734da0 0xc003734da1}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h4k77,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h4k77,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-36-36,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.382: INFO: Pod "webserver-deployment-55df494869-d88rh" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-d88rh webserver-deployment-55df494869- deployment-9762  e4909f6e-e24d-4810-a53b-d1e413cb139c 21436 0 2022-05-16 16:52:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc003734f00 0xc003734f01}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.46.94\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f48h2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f48h2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-10-138,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.10.138,PodIP:192.168.46.94,StartTime:2022-05-16 16:52:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 16:52:07 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://96c5ab06001af528cd3192c503f65c1c4c5a0ee2d73d2819f2d3b207e3832bea,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.46.94,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.382: INFO: Pod "webserver-deployment-55df494869-fmrtr" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-fmrtr webserver-deployment-55df494869- deployment-9762  ef9bba09-a002-44aa-8166-a9aa53f82037 21463 0 2022-05-16 16:52:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc0037350e7 0xc0037350e8}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.49.207\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6477v,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6477v,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-36-36,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.36.36,PodIP:192.168.49.207,StartTime:2022-05-16 16:52:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 16:52:07 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://c9bb2f8bce05cb5aa00fc5bbc92bcf63fb519348c50ab8c4e957411ef674d96b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.49.207,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.382: INFO: Pod "webserver-deployment-55df494869-jslns" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-jslns webserver-deployment-55df494869- deployment-9762  6dc5ef72-e137-44fe-85bc-ee29e0ac58b4 21429 0 2022-05-16 16:52:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc0037352d7 0xc0037352d8}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.46.106\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ck7mg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ck7mg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-10-138,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.10.138,PodIP:192.168.46.106,StartTime:2022-05-16 16:52:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 16:52:07 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://e3386fa4265f262fb88a9f02048af6d201f54df3676b5fa9ef36038268db2227,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.46.106,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.383: INFO: Pod "webserver-deployment-55df494869-kj8nj" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-kj8nj webserver-deployment-55df494869- deployment-9762  7e4ad784-babd-4783-93f7-366e5a0f2eea 21456 0 2022-05-16 16:52:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc0037354c7 0xc0037354c8}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.49.206\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lvn8z,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lvn8z,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-36-36,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:08 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.36.36,PodIP:192.168.49.206,StartTime:2022-05-16 16:52:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 16:52:07 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://2db126be6fb8e76ac1a1c7f2a9d2280172af9cbb6319e0b4fe0e287b49027173,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.49.206,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.383: INFO: Pod "webserver-deployment-55df494869-l82f9" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-l82f9 webserver-deployment-55df494869- deployment-9762  07e11a0f-b27e-4c19-9b11-2f74543383df 21618 0 2022-05-16 16:52:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc0037356b7 0xc0037356b8}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2mg2m,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2mg2m,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.383: INFO: Pod "webserver-deployment-55df494869-ljhbr" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-ljhbr webserver-deployment-55df494869- deployment-9762  450e5c1b-f997-4a68-897b-710dd7699fb3 21621 0 2022-05-16 16:52:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc003735820 0xc003735821}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kgrdv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kgrdv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-36-36,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.383: INFO: Pod "webserver-deployment-55df494869-m6z9k" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-m6z9k webserver-deployment-55df494869- deployment-9762  0dda203c-851c-4454-8583-10f314aef4e2 21446 0 2022-05-16 16:52:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc003735980 0xc003735981}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.181\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xnhlv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xnhlv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:192.168.238.181,StartTime:2022-05-16 16:52:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 16:52:07 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://f249ac777140942a5768f1a70f57f90edbe1f853325bc9b5f3ea3a32b3ccb394,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.238.181,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.383: INFO: Pod "webserver-deployment-55df494869-szh2x" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-szh2x webserver-deployment-55df494869- deployment-9762  247a452c-624c-4677-b1fd-d99dac8cdf51 21443 0 2022-05-16 16:52:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc003735b77 0xc003735b78}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.136\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qkkcr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qkkcr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:192.168.238.136,StartTime:2022-05-16 16:52:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 16:52:07 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://343a7a7c300c568fab0277e54f84d1a7fa6ec68daf8ee8eb23b3c8e3eda9a8e3,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.238.136,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.383: INFO: Pod "webserver-deployment-55df494869-vsdht" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-vsdht webserver-deployment-55df494869- deployment-9762  d135cb24-874e-49b9-a546-3e54d9dfecd4 21433 0 2022-05-16 16:52:06 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc003735db7 0xc003735db8}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:06 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.46.81\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9lkmv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9lkmv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-10-138,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:06 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.10.138,PodIP:192.168.46.81,StartTime:2022-05-16 16:52:06 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 16:52:07 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://339a6e5e9f0c216efc2056da615aa8d124c45c83ae08b8f73645a2fd50eb8d9b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.46.81,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.383: INFO: Pod "webserver-deployment-55df494869-vw8mx" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-vw8mx webserver-deployment-55df494869- deployment-9762  733bcc46-a93c-4b69-bed5-332c8a5f55cc 21603 0 2022-05-16 16:52:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 426c08b4-840d-4fe1-97f3-15789d815ffb 0xc003735fa7 0xc003735fa8}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"426c08b4-840d-4fe1-97f3-15789d815ffb\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8466z,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8466z,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.384: INFO: Pod "webserver-deployment-57ccb67bb8-69zvb" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-69zvb webserver-deployment-57ccb67bb8- deployment-9762  1907f116-8ce3-4748-97da-1fd7969e4237 21579 0 2022-05-16 16:52:10 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 b444bc06-6674-4ad5-afbe-525233df0023 0xc00473c120 0xc00473c121}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:10 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b444bc06-6674-4ad5-afbe-525233df0023\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:11 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.46.105\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gz7zj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gz7zj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-10-138,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.10.138,PodIP:192.168.46.105,StartTime:2022-05-16 16:52:10 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.46.105,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.384: INFO: Pod "webserver-deployment-57ccb67bb8-6d8sm" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-6d8sm webserver-deployment-57ccb67bb8- deployment-9762  7929355a-5aed-479d-827a-193b6b3d1da4 21614 0 2022-05-16 16:52:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 b444bc06-6674-4ad5-afbe-525233df0023 0xc00473c337 0xc00473c338}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b444bc06-6674-4ad5-afbe-525233df0023\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kt9m8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kt9m8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-10-138,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.384: INFO: Pod "webserver-deployment-57ccb67bb8-7qslq" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-7qslq webserver-deployment-57ccb67bb8- deployment-9762  c4592597-5cf3-4ea5-bf6b-5f84ae3d2e2b 21584 0 2022-05-16 16:52:10 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 b444bc06-6674-4ad5-afbe-525233df0023 0xc00473c4b0 0xc00473c4b1}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:10 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b444bc06-6674-4ad5-afbe-525233df0023\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:11 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.142\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5fvrk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5fvrk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:192.168.238.142,StartTime:2022-05-16 16:52:10 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.238.142,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.384: INFO: Pod "webserver-deployment-57ccb67bb8-dkv74" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-dkv74 webserver-deployment-57ccb67bb8- deployment-9762  c274a1cf-8df0-4b13-a982-e89eb035db79 21593 0 2022-05-16 16:52:10 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 b444bc06-6674-4ad5-afbe-525233df0023 0xc00473c6c0 0xc00473c6c1}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:10 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b444bc06-6674-4ad5-afbe-525233df0023\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:12 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.49.212\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-69zxd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-69zxd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-36-36,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.36.36,PodIP:192.168.49.212,StartTime:2022-05-16 16:52:10 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.49.212,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.384: INFO: Pod "webserver-deployment-57ccb67bb8-h5pcf" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-h5pcf webserver-deployment-57ccb67bb8- deployment-9762  0af84cb0-bded-4f13-befe-18b75b0a2496 21613 0 2022-05-16 16:52:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 b444bc06-6674-4ad5-afbe-525233df0023 0xc00473c8d7 0xc00473c8d8}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b444bc06-6674-4ad5-afbe-525233df0023\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-56r2c,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-56r2c,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.384: INFO: Pod "webserver-deployment-57ccb67bb8-hm6tn" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-hm6tn webserver-deployment-57ccb67bb8- deployment-9762  5e939089-ef61-4c42-9883-7835e3683e34 21581 0 2022-05-16 16:52:10 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 b444bc06-6674-4ad5-afbe-525233df0023 0xc00473ca27 0xc00473ca28}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:10 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b444bc06-6674-4ad5-afbe-525233df0023\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:11 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.185\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lrtrb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lrtrb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:192.168.238.185,StartTime:2022-05-16 16:52:10 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.238.185,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.386: INFO: Pod "webserver-deployment-57ccb67bb8-t78nb" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-t78nb webserver-deployment-57ccb67bb8- deployment-9762  ba1fa5bd-427d-4a0f-b272-33e2ff79622e 21605 0 2022-05-16 16:52:10 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 b444bc06-6674-4ad5-afbe-525233df0023 0xc00473cc40 0xc00473cc41}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:10 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b444bc06-6674-4ad5-afbe-525233df0023\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 16:52:12 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.49.233\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-c9jgq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-c9jgq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-36-36,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:10 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.36.36,PodIP:192.168.49.233,StartTime:2022-05-16 16:52:10 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.49.233,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 16:52:12.386: INFO: Pod "webserver-deployment-57ccb67bb8-x7gwx" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-x7gwx webserver-deployment-57ccb67bb8- deployment-9762  7020fe5c-0eb6-4ba7-99b0-ec3c546183f6 21624 0 2022-05-16 16:52:12 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 b444bc06-6674-4ad5-afbe-525233df0023 0xc00473ce57 0xc00473ce58}] []  [{kube-controller-manager Update v1 2022-05-16 16:52:12 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b444bc06-6674-4ad5-afbe-525233df0023\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wgt7p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wgt7p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-36-36,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 16:52:12 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
May 16 16:52:12.386: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-9762" for this suite.

• [SLOW TEST:6.414 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":356,"completed":149,"skipped":2853,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:52:12.424: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8406
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
May 16 16:52:28.670: INFO: DNS probes using dns-8406/dns-test-41a6bcd5-d59a-4818-8546-542e9b9861c4 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
May 16 16:52:28.691: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8406" for this suite.

• [SLOW TEST:16.282 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":356,"completed":150,"skipped":2900,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:52:28.706: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-3924
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
May 16 16:52:40.067: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-3924" for this suite.

• [SLOW TEST:11.376 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":356,"completed":151,"skipped":2924,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:52:40.082: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9089
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service nodeport-test with type=NodePort in namespace services-9089
STEP: creating replication controller nodeport-test in namespace services-9089
I0516 16:52:40.260519      17 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-9089, replica count: 2
I0516 16:52:43.311092      17 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
May 16 16:52:43.311: INFO: Creating new exec pod
May 16 16:52:46.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9089 exec execpodwdcvj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
May 16 16:52:46.497: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
May 16 16:52:46.497: INFO: stdout: ""
May 16 16:52:47.497: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9089 exec execpodwdcvj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
May 16 16:52:47.635: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
May 16 16:52:47.635: INFO: stdout: "nodeport-test-gc6jz"
May 16 16:52:47.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9089 exec execpodwdcvj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.148 80'
May 16 16:52:47.770: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.148 80\nConnection to 10.152.183.148 80 port [tcp/http] succeeded!\n"
May 16 16:52:47.770: INFO: stdout: "nodeport-test-gc6jz"
May 16 16:52:47.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9089 exec execpodwdcvj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.3 32485'
May 16 16:52:47.931: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.76.3 32485\nConnection to 172.31.76.3 32485 port [tcp/*] succeeded!\n"
May 16 16:52:47.931: INFO: stdout: ""
May 16 16:52:48.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9089 exec execpodwdcvj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.3 32485'
May 16 16:52:49.086: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.76.3 32485\nConnection to 172.31.76.3 32485 port [tcp/*] succeeded!\n"
May 16 16:52:49.086: INFO: stdout: ""
May 16 16:52:49.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9089 exec execpodwdcvj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.3 32485'
May 16 16:52:50.077: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.76.3 32485\nConnection to 172.31.76.3 32485 port [tcp/*] succeeded!\n"
May 16 16:52:50.077: INFO: stdout: ""
May 16 16:52:50.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9089 exec execpodwdcvj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.3 32485'
May 16 16:52:51.078: INFO: stderr: "+ nc -v -t -w 2 172.31.76.3 32485\n+ echo hostName\nConnection to 172.31.76.3 32485 port [tcp/*] succeeded!\n"
May 16 16:52:51.078: INFO: stdout: ""
May 16 16:52:51.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9089 exec execpodwdcvj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.3 32485'
May 16 16:52:52.064: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.76.3 32485\nConnection to 172.31.76.3 32485 port [tcp/*] succeeded!\n"
May 16 16:52:52.064: INFO: stdout: ""
May 16 16:52:52.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9089 exec execpodwdcvj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.3 32485'
May 16 16:52:53.086: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.76.3 32485\nConnection to 172.31.76.3 32485 port [tcp/*] succeeded!\n"
May 16 16:52:53.086: INFO: stdout: "nodeport-test-gc6jz"
May 16 16:52:53.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-9089 exec execpodwdcvj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.10.138 32485'
May 16 16:52:53.239: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.10.138 32485\nConnection to 172.31.10.138 32485 port [tcp/*] succeeded!\n"
May 16 16:52:53.239: INFO: stdout: "nodeport-test-gc6jz"
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 16:52:53.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9089" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:13.176 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":356,"completed":152,"skipped":2928,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:52:53.258: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-516
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
May 16 16:52:57.498: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-516" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":356,"completed":153,"skipped":2942,"failed":0}
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:52:57.514: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-6872
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-6872
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
May 16 16:52:57.679: INFO: Found 0 stateful pods, waiting for 3
May 16 16:53:07.690: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:53:07.690: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:53:07.690: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
May 16 16:53:07.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-6872 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
May 16 16:53:07.863: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
May 16 16:53:07.863: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
May 16 16:53:07.863: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
May 16 16:53:18.029: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
May 16 16:53:28.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-6872 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
May 16 16:53:28.236: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
May 16 16:53:28.236: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
May 16 16:53:28.236: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision
May 16 16:53:38.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-6872 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
May 16 16:53:38.420: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
May 16 16:53:38.420: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
May 16 16:53:38.420: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

May 16 16:53:48.476: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
May 16 16:53:58.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=statefulset-6872 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
May 16 16:53:58.692: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
May 16 16:53:58.692: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
May 16 16:53:58.692: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
May 16 16:54:08.730: INFO: Deleting all statefulset in ns statefulset-6872
May 16 16:54:08.735: INFO: Scaling statefulset ss2 to 0
May 16 16:54:18.766: INFO: Waiting for statefulset status.replicas updated to 0
May 16 16:54:18.771: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
May 16 16:54:18.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-6872" for this suite.

• [SLOW TEST:81.299 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":356,"completed":154,"skipped":2943,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:54:18.813: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-7588
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:54:18.961: INFO: Creating pod...
May 16 16:54:20.991: INFO: Creating service...
May 16 16:54:21.007: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/pods/agnhost/proxy/some/path/with/DELETE
May 16 16:54:21.014: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
May 16 16:54:21.014: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/pods/agnhost/proxy/some/path/with/GET
May 16 16:54:21.022: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
May 16 16:54:21.022: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/pods/agnhost/proxy/some/path/with/HEAD
May 16 16:54:21.036: INFO: http.Client request:HEAD | StatusCode:200
May 16 16:54:21.036: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/pods/agnhost/proxy/some/path/with/OPTIONS
May 16 16:54:21.042: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
May 16 16:54:21.042: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/pods/agnhost/proxy/some/path/with/PATCH
May 16 16:54:21.055: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
May 16 16:54:21.055: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/pods/agnhost/proxy/some/path/with/POST
May 16 16:54:21.061: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
May 16 16:54:21.061: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/pods/agnhost/proxy/some/path/with/PUT
May 16 16:54:21.066: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
May 16 16:54:21.066: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/services/test-service/proxy/some/path/with/DELETE
May 16 16:54:21.074: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
May 16 16:54:21.074: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/services/test-service/proxy/some/path/with/GET
May 16 16:54:21.083: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
May 16 16:54:21.083: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/services/test-service/proxy/some/path/with/HEAD
May 16 16:54:21.091: INFO: http.Client request:HEAD | StatusCode:200
May 16 16:54:21.091: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/services/test-service/proxy/some/path/with/OPTIONS
May 16 16:54:21.099: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
May 16 16:54:21.100: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/services/test-service/proxy/some/path/with/PATCH
May 16 16:54:21.108: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
May 16 16:54:21.108: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/services/test-service/proxy/some/path/with/POST
May 16 16:54:21.117: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
May 16 16:54:21.117: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7588/services/test-service/proxy/some/path/with/PUT
May 16 16:54:21.125: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/framework.go:188
May 16 16:54:21.125: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-7588" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":356,"completed":155,"skipped":2972,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:54:21.141: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9162
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-7ba14bbd-9b24-42d4-8b2c-e72e8c936d7f
STEP: Creating a pod to test consume secrets
May 16 16:54:21.306: INFO: Waiting up to 5m0s for pod "pod-secrets-1813dd7b-02ec-4222-ba44-ae12457f0b99" in namespace "secrets-9162" to be "Succeeded or Failed"
May 16 16:54:21.311: INFO: Pod "pod-secrets-1813dd7b-02ec-4222-ba44-ae12457f0b99": Phase="Pending", Reason="", readiness=false. Elapsed: 5.374053ms
May 16 16:54:23.323: INFO: Pod "pod-secrets-1813dd7b-02ec-4222-ba44-ae12457f0b99": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016824611s
May 16 16:54:25.331: INFO: Pod "pod-secrets-1813dd7b-02ec-4222-ba44-ae12457f0b99": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025518006s
STEP: Saw pod success
May 16 16:54:25.331: INFO: Pod "pod-secrets-1813dd7b-02ec-4222-ba44-ae12457f0b99" satisfied condition "Succeeded or Failed"
May 16 16:54:25.336: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-secrets-1813dd7b-02ec-4222-ba44-ae12457f0b99 container secret-volume-test: <nil>
STEP: delete the pod
May 16 16:54:25.380: INFO: Waiting for pod pod-secrets-1813dd7b-02ec-4222-ba44-ae12457f0b99 to disappear
May 16 16:54:25.384: INFO: Pod pod-secrets-1813dd7b-02ec-4222-ba44-ae12457f0b99 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
May 16 16:54:25.384: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9162" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":156,"skipped":2980,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:54:25.401: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5089
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-5089
STEP: creating service affinity-clusterip-transition in namespace services-5089
STEP: creating replication controller affinity-clusterip-transition in namespace services-5089
I0516 16:54:25.577676      17 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5089, replica count: 3
I0516 16:54:28.629849      17 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
May 16 16:54:28.640: INFO: Creating new exec pod
May 16 16:54:31.673: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-5089 exec execpod-affinityd7wh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
May 16 16:54:31.830: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
May 16 16:54:31.830: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:54:31.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-5089 exec execpod-affinityd7wh7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.235 80'
May 16 16:54:31.995: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.235 80\nConnection to 10.152.183.235 80 port [tcp/http] succeeded!\n"
May 16 16:54:31.995: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:54:32.008: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-5089 exec execpod-affinityd7wh7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.235:80/ ; done'
May 16 16:54:32.252: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n"
May 16 16:54:32.252: INFO: stdout: "\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-7p2j9\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-h96ln\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-7p2j9\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-h96ln\naffinity-clusterip-transition-h96ln\naffinity-clusterip-transition-7p2j9\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-7p2j9"
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-7p2j9
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-h96ln
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-7p2j9
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-h96ln
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-h96ln
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-7p2j9
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.252: INFO: Received response from host: affinity-clusterip-transition-7p2j9
May 16 16:54:32.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-5089 exec execpod-affinityd7wh7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.235:80/ ; done'
May 16 16:54:32.517: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.235:80/\n"
May 16 16:54:32.517: INFO: stdout: "\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl\naffinity-clusterip-transition-f2bfl"
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Received response from host: affinity-clusterip-transition-f2bfl
May 16 16:54:32.517: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5089, will wait for the garbage collector to delete the pods
May 16 16:54:32.600: INFO: Deleting ReplicationController affinity-clusterip-transition took: 9.452136ms
May 16 16:54:32.700: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.180962ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 16:54:35.128: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5089" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:9.751 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":157,"skipped":3017,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:54:35.152: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7053
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7053
STEP: creating service affinity-nodeport in namespace services-7053
STEP: creating replication controller affinity-nodeport in namespace services-7053
I0516 16:54:35.329720      17 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-7053, replica count: 3
I0516 16:54:38.381515      17 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
May 16 16:54:38.403: INFO: Creating new exec pod
May 16 16:54:41.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-7053 exec execpod-affinityg8htv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
May 16 16:54:41.581: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
May 16 16:54:41.581: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:54:41.581: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-7053 exec execpod-affinityg8htv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.27 80'
May 16 16:54:41.741: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.27 80\nConnection to 10.152.183.27 80 port [tcp/http] succeeded!\n"
May 16 16:54:41.741: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:54:41.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-7053 exec execpod-affinityg8htv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.36.36 30844'
May 16 16:54:41.873: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.36.36 30844\nConnection to 172.31.36.36 30844 port [tcp/*] succeeded!\n"
May 16 16:54:41.873: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:54:41.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-7053 exec execpod-affinityg8htv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.3 30844'
May 16 16:54:42.005: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.76.3 30844\nConnection to 172.31.76.3 30844 port [tcp/*] succeeded!\n"
May 16 16:54:42.005: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 16:54:42.005: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-7053 exec execpod-affinityg8htv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.138:30844/ ; done'
May 16 16:54:42.264: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:30844/\n"
May 16 16:54:42.264: INFO: stdout: "\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz\naffinity-nodeport-svmsz"
May 16 16:54:42.264: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.264: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.264: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.264: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.264: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.264: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.264: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.264: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.264: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.265: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.265: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.265: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.265: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.265: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.265: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.265: INFO: Received response from host: affinity-nodeport-svmsz
May 16 16:54:42.265: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-7053, will wait for the garbage collector to delete the pods
May 16 16:54:42.353: INFO: Deleting ReplicationController affinity-nodeport took: 10.843996ms
May 16 16:54:42.453: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.563534ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 16:54:44.698: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7053" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:9.560 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":158,"skipped":3051,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:54:44.712: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4809
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 16:54:44.938: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f8320d5a-2133-4977-ac74-be26a23d2bed" in namespace "projected-4809" to be "Succeeded or Failed"
May 16 16:54:44.943: INFO: Pod "downwardapi-volume-f8320d5a-2133-4977-ac74-be26a23d2bed": Phase="Pending", Reason="", readiness=false. Elapsed: 4.85356ms
May 16 16:54:46.953: INFO: Pod "downwardapi-volume-f8320d5a-2133-4977-ac74-be26a23d2bed": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014158827s
May 16 16:54:48.964: INFO: Pod "downwardapi-volume-f8320d5a-2133-4977-ac74-be26a23d2bed": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025418054s
STEP: Saw pod success
May 16 16:54:48.964: INFO: Pod "downwardapi-volume-f8320d5a-2133-4977-ac74-be26a23d2bed" satisfied condition "Succeeded or Failed"
May 16 16:54:48.969: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-f8320d5a-2133-4977-ac74-be26a23d2bed container client-container: <nil>
STEP: delete the pod
May 16 16:54:49.000: INFO: Waiting for pod downwardapi-volume-f8320d5a-2133-4977-ac74-be26a23d2bed to disappear
May 16 16:54:49.004: INFO: Pod downwardapi-volume-f8320d5a-2133-4977-ac74-be26a23d2bed no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
May 16 16:54:49.004: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4809" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":159,"skipped":3056,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:54:49.018: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-262
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:58
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-4df1a5d9-fba8-497e-b3d5-d16f0c008f63 in namespace container-probe-262
May 16 16:54:51.188: INFO: Started pod busybox-4df1a5d9-fba8-497e-b3d5-d16f0c008f63 in namespace container-probe-262
STEP: checking the pod's current state and verifying that restartCount is present
May 16 16:54:51.192: INFO: Initial restart count of pod busybox-4df1a5d9-fba8-497e-b3d5-d16f0c008f63 is 0
May 16 16:55:41.426: INFO: Restart count of pod container-probe-262/busybox-4df1a5d9-fba8-497e-b3d5-d16f0c008f63 is now 1 (50.23335854s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
May 16 16:55:41.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-262" for this suite.

• [SLOW TEST:52.438 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":160,"skipped":3089,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:55:41.457: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-9376
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
May 16 16:55:41.619: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-2ca35ed9-2195-4d29-bffb-67b86fd018dc" in namespace "security-context-test-9376" to be "Succeeded or Failed"
May 16 16:55:41.625: INFO: Pod "alpine-nnp-false-2ca35ed9-2195-4d29-bffb-67b86fd018dc": Phase="Pending", Reason="", readiness=false. Elapsed: 5.664896ms
May 16 16:55:43.635: INFO: Pod "alpine-nnp-false-2ca35ed9-2195-4d29-bffb-67b86fd018dc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015945993s
May 16 16:55:45.643: INFO: Pod "alpine-nnp-false-2ca35ed9-2195-4d29-bffb-67b86fd018dc": Phase="Pending", Reason="", readiness=false. Elapsed: 4.023274086s
May 16 16:55:47.653: INFO: Pod "alpine-nnp-false-2ca35ed9-2195-4d29-bffb-67b86fd018dc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.033341427s
May 16 16:55:47.653: INFO: Pod "alpine-nnp-false-2ca35ed9-2195-4d29-bffb-67b86fd018dc" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
May 16 16:55:47.668: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-9376" for this suite.

• [SLOW TEST:6.231 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:298
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":161,"skipped":3130,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:55:47.688: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7744
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 16:55:47.847: INFO: Waiting up to 5m0s for pod "downwardapi-volume-4d7b651c-ebe6-4cce-bd9a-b5852ae199a3" in namespace "downward-api-7744" to be "Succeeded or Failed"
May 16 16:55:47.851: INFO: Pod "downwardapi-volume-4d7b651c-ebe6-4cce-bd9a-b5852ae199a3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.792923ms
May 16 16:55:49.862: INFO: Pod "downwardapi-volume-4d7b651c-ebe6-4cce-bd9a-b5852ae199a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01500353s
May 16 16:55:51.870: INFO: Pod "downwardapi-volume-4d7b651c-ebe6-4cce-bd9a-b5852ae199a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023359634s
STEP: Saw pod success
May 16 16:55:51.870: INFO: Pod "downwardapi-volume-4d7b651c-ebe6-4cce-bd9a-b5852ae199a3" satisfied condition "Succeeded or Failed"
May 16 16:55:51.875: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-4d7b651c-ebe6-4cce-bd9a-b5852ae199a3 container client-container: <nil>
STEP: delete the pod
May 16 16:55:51.901: INFO: Waiting for pod downwardapi-volume-4d7b651c-ebe6-4cce-bd9a-b5852ae199a3 to disappear
May 16 16:55:51.906: INFO: Pod downwardapi-volume-4d7b651c-ebe6-4cce-bd9a-b5852ae199a3 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
May 16 16:55:51.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7744" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":162,"skipped":3148,"failed":0}

------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:55:51.920: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6135
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-d6aea02a-338b-4a4b-85f9-c4cf99dc2367
STEP: Creating a pod to test consume configMaps
May 16 16:55:52.086: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-83b89f5a-2c31-44d4-a518-8c87aa6c34ca" in namespace "projected-6135" to be "Succeeded or Failed"
May 16 16:55:52.091: INFO: Pod "pod-projected-configmaps-83b89f5a-2c31-44d4-a518-8c87aa6c34ca": Phase="Pending", Reason="", readiness=false. Elapsed: 5.007166ms
May 16 16:55:54.102: INFO: Pod "pod-projected-configmaps-83b89f5a-2c31-44d4-a518-8c87aa6c34ca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015995205s
May 16 16:55:56.108: INFO: Pod "pod-projected-configmaps-83b89f5a-2c31-44d4-a518-8c87aa6c34ca": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02192359s
STEP: Saw pod success
May 16 16:55:56.108: INFO: Pod "pod-projected-configmaps-83b89f5a-2c31-44d4-a518-8c87aa6c34ca" satisfied condition "Succeeded or Failed"
May 16 16:55:56.113: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-projected-configmaps-83b89f5a-2c31-44d4-a518-8c87aa6c34ca container projected-configmap-volume-test: <nil>
STEP: delete the pod
May 16 16:55:56.142: INFO: Waiting for pod pod-projected-configmaps-83b89f5a-2c31-44d4-a518-8c87aa6c34ca to disappear
May 16 16:55:56.147: INFO: Pod pod-projected-configmaps-83b89f5a-2c31-44d4-a518-8c87aa6c34ca no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
May 16 16:55:56.147: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6135" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":163,"skipped":3148,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:55:56.162: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3936
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 16:55:56.633: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 16:55:59.672: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 16:55:59.784: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3936" for this suite.
STEP: Destroying namespace "webhook-3936-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":356,"completed":164,"skipped":3170,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:55:59.866: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-189
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
W0516 16:56:00.697059      17 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
May 16 16:56:00.697: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
May 16 16:56:00.697: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-189" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":356,"completed":165,"skipped":3190,"failed":0}
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:56:00.714: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4805
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:56:00.886: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename disruption-2
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2-660
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-4805
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:188
May 16 16:56:07.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-660" for this suite.
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
May 16 16:56:07.161: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4805" for this suite.

• [SLOW TEST:6.461 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:77
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":356,"completed":166,"skipped":3196,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 16:56:07.175: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-8829
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:58
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-5bd242eb-cb19-4688-942a-57e97d62ded8 in namespace container-probe-8829
May 16 16:56:09.350: INFO: Started pod busybox-5bd242eb-cb19-4688-942a-57e97d62ded8 in namespace container-probe-8829
STEP: checking the pod's current state and verifying that restartCount is present
May 16 16:56:09.357: INFO: Initial restart count of pod busybox-5bd242eb-cb19-4688-942a-57e97d62ded8 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
May 16 17:00:10.607: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-8829" for this suite.

• [SLOW TEST:243.457 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":167,"skipped":3227,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:00:10.632: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-8903
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: reading a file in the container
May 16 17:00:12.812: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8903 pod-service-account-b0409112-59e8-4eb1-a02d-5aa97864b0a7 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
May 16 17:00:12.961: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8903 pod-service-account-b0409112-59e8-4eb1-a02d-5aa97864b0a7 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
May 16 17:00:13.093: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8903 pod-service-account-b0409112-59e8-4eb1-a02d-5aa97864b0a7 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
May 16 17:00:13.234: INFO: Got root ca configmap in namespace "svcaccounts-8903"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
May 16 17:00:13.237: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-8903" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":356,"completed":168,"skipped":3242,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:00:13.254: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7949
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 17:00:14.193: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 17:00:17.225: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a validating webhook configuration
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:00:17.332: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7949" for this suite.
STEP: Destroying namespace "webhook-7949-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":356,"completed":169,"skipped":3262,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:00:17.411: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-8808
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's command
May 16 17:00:17.627: INFO: Waiting up to 5m0s for pod "var-expansion-fa4646e7-d612-4e40-bfe1-103b367980d9" in namespace "var-expansion-8808" to be "Succeeded or Failed"
May 16 17:00:17.633: INFO: Pod "var-expansion-fa4646e7-d612-4e40-bfe1-103b367980d9": Phase="Pending", Reason="", readiness=false. Elapsed: 6.436021ms
May 16 17:00:19.644: INFO: Pod "var-expansion-fa4646e7-d612-4e40-bfe1-103b367980d9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017162659s
May 16 17:00:21.652: INFO: Pod "var-expansion-fa4646e7-d612-4e40-bfe1-103b367980d9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025664513s
STEP: Saw pod success
May 16 17:00:21.652: INFO: Pod "var-expansion-fa4646e7-d612-4e40-bfe1-103b367980d9" satisfied condition "Succeeded or Failed"
May 16 17:00:21.658: INFO: Trying to get logs from node ip-172-31-76-3 pod var-expansion-fa4646e7-d612-4e40-bfe1-103b367980d9 container dapi-container: <nil>
STEP: delete the pod
May 16 17:00:21.701: INFO: Waiting for pod var-expansion-fa4646e7-d612-4e40-bfe1-103b367980d9 to disappear
May 16 17:00:21.705: INFO: Pod var-expansion-fa4646e7-d612-4e40-bfe1-103b367980d9 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
May 16 17:00:21.705: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-8808" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":356,"completed":170,"skipped":3271,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:00:21.720: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-2730
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
May 16 17:00:35.880: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-2730" for this suite.

• [SLOW TEST:14.177 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":356,"completed":171,"skipped":3293,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:00:35.898: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-7704
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
May 16 17:00:36.112: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7704  7345b8b8-ba2e-4101-b1e9-2d96a666919d 24571 0 2022-05-16 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-05-16 17:00:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 17:00:36.112: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7704  7345b8b8-ba2e-4101-b1e9-2d96a666919d 24572 0 2022-05-16 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-05-16 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 17:00:36.112: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7704  7345b8b8-ba2e-4101-b1e9-2d96a666919d 24573 0 2022-05-16 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-05-16 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
May 16 17:00:46.159: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7704  7345b8b8-ba2e-4101-b1e9-2d96a666919d 24634 0 2022-05-16 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-05-16 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 17:00:46.159: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7704  7345b8b8-ba2e-4101-b1e9-2d96a666919d 24635 0 2022-05-16 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-05-16 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 17:00:46.159: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7704  7345b8b8-ba2e-4101-b1e9-2d96a666919d 24636 0 2022-05-16 17:00:36 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-05-16 17:00:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
May 16 17:00:46.159: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-7704" for this suite.

• [SLOW TEST:10.276 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":356,"completed":172,"skipped":3334,"failed":0}
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:00:46.174: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-5836
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
May 16 17:00:50.378: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
May 16 17:00:50.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-5836" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":173,"skipped":3337,"failed":0}
SSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:00:50.418: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3266
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-projected-all-test-volume-4b986274-6c43-4e4e-b2d9-2055d9d9dcc3
STEP: Creating secret with name secret-projected-all-test-volume-a0c11428-1c6a-40e5-a309-7b433bf32081
STEP: Creating a pod to test Check all projections for projected volume plugin
May 16 17:00:50.584: INFO: Waiting up to 5m0s for pod "projected-volume-7cd71d75-cbec-475a-ae78-bc41b19b9654" in namespace "projected-3266" to be "Succeeded or Failed"
May 16 17:00:50.593: INFO: Pod "projected-volume-7cd71d75-cbec-475a-ae78-bc41b19b9654": Phase="Pending", Reason="", readiness=false. Elapsed: 8.603522ms
May 16 17:00:52.603: INFO: Pod "projected-volume-7cd71d75-cbec-475a-ae78-bc41b19b9654": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018482889s
May 16 17:00:54.615: INFO: Pod "projected-volume-7cd71d75-cbec-475a-ae78-bc41b19b9654": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030822856s
STEP: Saw pod success
May 16 17:00:54.615: INFO: Pod "projected-volume-7cd71d75-cbec-475a-ae78-bc41b19b9654" satisfied condition "Succeeded or Failed"
May 16 17:00:54.620: INFO: Trying to get logs from node ip-172-31-76-3 pod projected-volume-7cd71d75-cbec-475a-ae78-bc41b19b9654 container projected-all-volume-test: <nil>
STEP: delete the pod
May 16 17:00:54.650: INFO: Waiting for pod projected-volume-7cd71d75-cbec-475a-ae78-bc41b19b9654 to disappear
May 16 17:00:54.656: INFO: Pod projected-volume-7cd71d75-cbec-475a-ae78-bc41b19b9654 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:188
May 16 17:00:54.656: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3266" for this suite.
•{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":356,"completed":174,"skipped":3340,"failed":0}
SSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:00:54.670: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-3720
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
May 16 17:00:54.855: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:54.855: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:54.860: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:00:54.860: INFO: Node ip-172-31-10-138 is running 0 daemon pod, expected 1
May 16 17:00:55.868: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:55.868: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:55.873: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:00:55.873: INFO: Node ip-172-31-10-138 is running 0 daemon pod, expected 1
May 16 17:00:56.868: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:56.868: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:56.878: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
May 16 17:00:56.878: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
May 16 17:00:56.905: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:56.905: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:56.909: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
May 16 17:00:56.909: INFO: Node ip-172-31-76-3 is running 0 daemon pod, expected 1
May 16 17:00:57.918: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:57.918: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:57.924: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
May 16 17:00:57.924: INFO: Node ip-172-31-76-3 is running 0 daemon pod, expected 1
May 16 17:00:58.920: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:58.921: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:58.926: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
May 16 17:00:58.926: INFO: Node ip-172-31-76-3 is running 0 daemon pod, expected 1
May 16 17:00:59.922: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:59.922: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:00:59.928: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
May 16 17:00:59.928: INFO: Node ip-172-31-76-3 is running 0 daemon pod, expected 1
May 16 17:01:00.919: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:01:00.919: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:01:00.925: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
May 16 17:01:00.925: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3720, will wait for the garbage collector to delete the pods
May 16 17:01:00.996: INFO: Deleting DaemonSet.extensions daemon-set took: 10.296607ms
May 16 17:01:01.097: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.117141ms
May 16 17:01:03.208: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:01:03.208: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
May 16 17:01:03.213: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24848"},"items":null}

May 16 17:01:03.218: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24848"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
May 16 17:01:03.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-3720" for this suite.

• [SLOW TEST:8.586 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":356,"completed":175,"skipped":3343,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:01:03.257: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-4092
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-downwardapi-xjcv
STEP: Creating a pod to test atomic-volume-subpath
May 16 17:01:03.437: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-xjcv" in namespace "subpath-4092" to be "Succeeded or Failed"
May 16 17:01:03.464: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Pending", Reason="", readiness=false. Elapsed: 26.957188ms
May 16 17:01:05.473: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Running", Reason="", readiness=true. Elapsed: 2.036435334s
May 16 17:01:07.482: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Running", Reason="", readiness=true. Elapsed: 4.045094866s
May 16 17:01:09.492: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Running", Reason="", readiness=true. Elapsed: 6.055684205s
May 16 17:01:11.500: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Running", Reason="", readiness=true. Elapsed: 8.063427735s
May 16 17:01:13.511: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Running", Reason="", readiness=true. Elapsed: 10.074161673s
May 16 17:01:15.525: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Running", Reason="", readiness=true. Elapsed: 12.088623891s
May 16 17:01:17.534: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Running", Reason="", readiness=true. Elapsed: 14.097429839s
May 16 17:01:19.545: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Running", Reason="", readiness=true. Elapsed: 16.108870174s
May 16 17:01:21.553: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Running", Reason="", readiness=true. Elapsed: 18.116703818s
May 16 17:01:23.564: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Running", Reason="", readiness=true. Elapsed: 20.127448344s
May 16 17:01:25.576: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Running", Reason="", readiness=false. Elapsed: 22.138962812s
May 16 17:01:27.584: INFO: Pod "pod-subpath-test-downwardapi-xjcv": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.147012351s
STEP: Saw pod success
May 16 17:01:27.584: INFO: Pod "pod-subpath-test-downwardapi-xjcv" satisfied condition "Succeeded or Failed"
May 16 17:01:27.589: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-subpath-test-downwardapi-xjcv container test-container-subpath-downwardapi-xjcv: <nil>
STEP: delete the pod
May 16 17:01:27.615: INFO: Waiting for pod pod-subpath-test-downwardapi-xjcv to disappear
May 16 17:01:27.729: INFO: Pod pod-subpath-test-downwardapi-xjcv no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-xjcv
May 16 17:01:27.729: INFO: Deleting pod "pod-subpath-test-downwardapi-xjcv" in namespace "subpath-4092"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
May 16 17:01:27.735: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-4092" for this suite.

• [SLOW TEST:24.492 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]","total":356,"completed":176,"skipped":3350,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:01:27.750: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-2506
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pod templates
May 16 17:01:27.915: INFO: created test-podtemplate-1
May 16 17:01:27.923: INFO: created test-podtemplate-2
May 16 17:01:27.929: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
May 16 17:01:27.934: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
May 16 17:01:27.973: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
May 16 17:01:27.979: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-2506" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":356,"completed":177,"skipped":3366,"failed":0}
SS
------------------------------
[sig-architecture] Conformance Tests 
  should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:01:27.994: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename conformance-tests
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in conformance-tests-5948
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
STEP: Getting node addresses
May 16 17:01:28.139: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:188
May 16 17:01:28.147: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "conformance-tests-5948" for this suite.
•{"msg":"PASSED [sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]","total":356,"completed":178,"skipped":3368,"failed":0}
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:01:28.173: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-5197
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
May 16 17:01:28.335: INFO: Waiting up to 1m0s for all nodes to be ready
May 16 17:02:28.361: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
May 16 17:02:28.393: INFO: Created pod: pod0-0-sched-preemption-low-priority
May 16 17:02:28.410: INFO: Created pod: pod0-1-sched-preemption-medium-priority
May 16 17:02:28.429: INFO: Created pod: pod1-0-sched-preemption-medium-priority
May 16 17:02:28.442: INFO: Created pod: pod1-1-sched-preemption-medium-priority
May 16 17:02:28.464: INFO: Created pod: pod2-0-sched-preemption-medium-priority
May 16 17:02:28.474: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
May 16 17:02:42.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-5197" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:74.491 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":356,"completed":179,"skipped":3377,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:02:42.664: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4189
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
STEP: create deployment with httpd image
May 16 17:02:42.819: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4189 create -f -'
May 16 17:02:43.255: INFO: stderr: ""
May 16 17:02:43.255: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
May 16 17:02:43.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4189 diff -f -'
May 16 17:02:43.652: INFO: rc: 1
May 16 17:02:43.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4189 delete -f -'
May 16 17:02:43.725: INFO: stderr: ""
May 16 17:02:43.725: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 17:02:43.725: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4189" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":356,"completed":180,"skipped":3388,"failed":0}

------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:02:43.742: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-7599
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
May 16 17:08:02.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-7599" for this suite.

• [SLOW TEST:318.284 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":356,"completed":181,"skipped":3388,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:08:02.026: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-567
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
May 16 17:08:02.209: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
May 16 17:08:02.216: INFO: starting watch
STEP: patching
STEP: updating
May 16 17:08:02.240: INFO: waiting for watch events with expected annotations
May 16 17:08:02.240: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
May 16 17:08:02.307: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-567" for this suite.
•{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":356,"completed":182,"skipped":3401,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:08:02.326: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-6796
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption-release is created
May 16 17:08:02.493: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
May 16 17:08:04.504: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
May 16 17:08:05.536: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
May 16 17:08:06.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-6796" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":356,"completed":183,"skipped":3431,"failed":0}
SSSSSSS
------------------------------
[sig-network] Services 
  should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:08:06.580: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9023
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 17:08:06.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9023" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760
•{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":356,"completed":184,"skipped":3438,"failed":0}
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:08:06.745: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-4315
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
May 16 17:08:06.902: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
May 16 17:08:06.919: INFO: Waiting for terminating namespaces to be deleted...
May 16 17:08:06.925: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-10-138 before test
May 16 17:08:06.932: INFO: default-http-backend-kubernetes-worker-6c59687bf6-bxc6r from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 17:08:06.932: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
May 16 17:08:06.932: INFO: nginx-ingress-controller-kubernetes-worker-4x6kn from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 17:08:06.932: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
May 16 17:08:06.932: INFO: coredns-86c98bfcdb-xnh2b from kube-system started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 17:08:06.932: INFO: 	Container coredns ready: true, restart count 0
May 16 17:08:06.932: INFO: kube-state-metrics-5cdbfd47b4-dbz9m from kube-system started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 17:08:06.932: INFO: 	Container kube-state-metrics ready: true, restart count 0
May 16 17:08:06.932: INFO: metrics-server-v0.5.2-6bfd958b56-t6s8k from kube-system started at 2022-05-16 15:58:42 +0000 UTC (2 container statuses recorded)
May 16 17:08:06.932: INFO: 	Container metrics-server ready: true, restart count 0
May 16 17:08:06.932: INFO: 	Container metrics-server-nanny ready: true, restart count 0
May 16 17:08:06.932: INFO: dashboard-metrics-scraper-8669b59d4f-z7nkc from kubernetes-dashboard started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 17:08:06.932: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
May 16 17:08:06.932: INFO: kubernetes-dashboard-585fc6bc87-gx2d4 from kubernetes-dashboard started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 17:08:06.932: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
May 16 17:08:06.932: INFO: sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-tklm5 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 17:08:06.932: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 17:08:06.932: INFO: 	Container systemd-logs ready: true, restart count 0
May 16 17:08:06.932: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-36-36 before test
May 16 17:08:06.939: INFO: nginx-ingress-controller-kubernetes-worker-pbnpt from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:44 +0000 UTC (1 container statuses recorded)
May 16 17:08:06.939: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
May 16 17:08:06.939: INFO: calico-kube-controllers-5976989dd9-ckg7k from kube-system started at 2022-05-16 15:58:46 +0000 UTC (1 container statuses recorded)
May 16 17:08:06.939: INFO: 	Container calico-kube-controllers ready: true, restart count 0
May 16 17:08:06.939: INFO: sonobuoy-e2e-job-93ccb66985024e88 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 17:08:06.939: INFO: 	Container e2e ready: true, restart count 0
May 16 17:08:06.939: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 17:08:06.939: INFO: sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-sj7x5 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 17:08:06.939: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 17:08:06.939: INFO: 	Container systemd-logs ready: true, restart count 0
May 16 17:08:06.939: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-76-3 before test
May 16 17:08:06.946: INFO: nginx-ingress-controller-kubernetes-worker-fnf58 from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:52 +0000 UTC (1 container statuses recorded)
May 16 17:08:06.946: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
May 16 17:08:06.946: INFO: pod-adoption-release from replicaset-6796 started at 2022-05-16 17:08:02 +0000 UTC (1 container statuses recorded)
May 16 17:08:06.946: INFO: 	Container pod-adoption-release ready: true, restart count 0
May 16 17:08:06.946: INFO: pod-adoption-release-gwsb5 from replicaset-6796 started at 2022-05-16 17:08:05 +0000 UTC (1 container statuses recorded)
May 16 17:08:06.946: INFO: 	Container pod-adoption-release ready: true, restart count 0
May 16 17:08:06.946: INFO: sonobuoy from sonobuoy started at 2022-05-16 16:12:03 +0000 UTC (1 container statuses recorded)
May 16 17:08:06.946: INFO: 	Container kube-sonobuoy ready: true, restart count 0
May 16 17:08:06.946: INFO: sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-zvgk8 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 17:08:06.946: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 17:08:06.946: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.16efa4e3e5a40c6d], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {juju.is/kubernetes-control-plane: true}, 5 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
May 16 17:08:07.984: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-4315" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":356,"completed":185,"skipped":3439,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:08:08.001: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4135
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Service
STEP: watching for the Service to be added
May 16 17:08:08.171: INFO: Found Service test-service-b9zg8 in namespace services-4135 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
May 16 17:08:08.171: INFO: Service test-service-b9zg8 created
STEP: Getting /status
May 16 17:08:08.184: INFO: Service test-service-b9zg8 has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
May 16 17:08:08.194: INFO: observed Service test-service-b9zg8 in namespace services-4135 with annotations: map[] & LoadBalancer: {[]}
May 16 17:08:08.194: INFO: Found Service test-service-b9zg8 in namespace services-4135 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
May 16 17:08:08.194: INFO: Service test-service-b9zg8 has service status patched
STEP: updating the ServiceStatus
May 16 17:08:08.208: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
May 16 17:08:08.210: INFO: Observed Service test-service-b9zg8 in namespace services-4135 with annotations: map[] & Conditions: {[]}
May 16 17:08:08.210: INFO: Observed event: &Service{ObjectMeta:{test-service-b9zg8  services-4135  cfeb2313-f968-4b3f-92cd-ae93ccd49ad4 26117 0 2022-05-16 17:08:08 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2022-05-16 17:08:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2022-05-16 17:08:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.123,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.123],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
May 16 17:08:08.210: INFO: Found Service test-service-b9zg8 in namespace services-4135 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
May 16 17:08:08.210: INFO: Service test-service-b9zg8 has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
May 16 17:08:08.226: INFO: observed Service test-service-b9zg8 in namespace services-4135 with labels: map[test-service-static:true]
May 16 17:08:08.226: INFO: observed Service test-service-b9zg8 in namespace services-4135 with labels: map[test-service-static:true]
May 16 17:08:08.226: INFO: observed Service test-service-b9zg8 in namespace services-4135 with labels: map[test-service-static:true]
May 16 17:08:08.226: INFO: Found Service test-service-b9zg8 in namespace services-4135 with labels: map[test-service:patched test-service-static:true]
May 16 17:08:08.226: INFO: Service test-service-b9zg8 patched
STEP: deleting the service
STEP: watching for the Service to be deleted
May 16 17:08:08.252: INFO: Observed event: ADDED
May 16 17:08:08.252: INFO: Observed event: MODIFIED
May 16 17:08:08.252: INFO: Observed event: MODIFIED
May 16 17:08:08.252: INFO: Observed event: MODIFIED
May 16 17:08:08.252: INFO: Found Service test-service-b9zg8 in namespace services-4135 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
May 16 17:08:08.252: INFO: Service test-service-b9zg8 deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 17:08:08.252: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4135" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760
•{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":356,"completed":186,"skipped":3544,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:08:08.267: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-7181
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
May 16 17:08:33.806: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-7181" for this suite.

• [SLOW TEST:25.555 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    when starting a container that exits
    test/e2e/common/node/runtime.go:44
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":356,"completed":187,"skipped":3570,"failed":0}
SSSSSS
------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:08:33.822: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1833
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
May 16 17:08:34.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1833" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":356,"completed":188,"skipped":3576,"failed":0}
SS
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:08:34.039: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-8308
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
May 16 17:08:34.194: INFO: Pod name pod-release: Found 0 pods out of 1
May 16 17:08:39.207: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
May 16 17:08:40.238: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-8308" for this suite.

• [SLOW TEST:6.216 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":356,"completed":189,"skipped":3578,"failed":0}
SSS
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:08:40.255: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-2369
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-b8zxn in namespace proxy-2369
I0516 17:08:40.431899      17 runners.go:193] Created replication controller with name: proxy-service-b8zxn, namespace: proxy-2369, replica count: 1
I0516 17:08:41.483243      17 runners.go:193] proxy-service-b8zxn Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0516 17:08:42.483368      17 runners.go:193] proxy-service-b8zxn Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
May 16 17:08:42.492: INFO: setup took 2.084998514s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
May 16 17:08:42.500: INFO: (0) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 7.470043ms)
May 16 17:08:42.504: INFO: (0) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 10.912071ms)
May 16 17:08:42.504: INFO: (0) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 10.622373ms)
May 16 17:08:42.508: INFO: (0) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 14.382436ms)
May 16 17:08:42.508: INFO: (0) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 15.08255ms)
May 16 17:08:42.508: INFO: (0) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 15.208284ms)
May 16 17:08:42.508: INFO: (0) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 15.817464ms)
May 16 17:08:42.508: INFO: (0) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 15.031374ms)
May 16 17:08:42.509: INFO: (0) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 15.194724ms)
May 16 17:08:42.509: INFO: (0) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 15.643912ms)
May 16 17:08:42.509: INFO: (0) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 15.372469ms)
May 16 17:08:42.509: INFO: (0) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 16.967523ms)
May 16 17:08:42.510: INFO: (0) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 17.233505ms)
May 16 17:08:42.510: INFO: (0) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 16.732319ms)
May 16 17:08:42.513: INFO: (0) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 20.150586ms)
May 16 17:08:42.514: INFO: (0) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 20.202772ms)
May 16 17:08:42.520: INFO: (1) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 6.220665ms)
May 16 17:08:42.521: INFO: (1) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 6.175604ms)
May 16 17:08:42.521: INFO: (1) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 6.928907ms)
May 16 17:08:42.523: INFO: (1) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 7.954851ms)
May 16 17:08:42.523: INFO: (1) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 8.752632ms)
May 16 17:08:42.523: INFO: (1) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 8.171008ms)
May 16 17:08:42.524: INFO: (1) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 9.034489ms)
May 16 17:08:42.524: INFO: (1) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 9.269079ms)
May 16 17:08:42.524: INFO: (1) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 9.750652ms)
May 16 17:08:42.525: INFO: (1) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 10.534552ms)
May 16 17:08:42.525: INFO: (1) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 9.816704ms)
May 16 17:08:42.526: INFO: (1) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 11.026369ms)
May 16 17:08:42.527: INFO: (1) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 12.849366ms)
May 16 17:08:42.527: INFO: (1) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 12.006899ms)
May 16 17:08:42.528: INFO: (1) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 12.990191ms)
May 16 17:08:42.529: INFO: (1) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 13.967604ms)
May 16 17:08:42.535: INFO: (2) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 5.782379ms)
May 16 17:08:42.536: INFO: (2) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 6.83423ms)
May 16 17:08:42.537: INFO: (2) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 7.54423ms)
May 16 17:08:42.537: INFO: (2) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 8.143667ms)
May 16 17:08:42.538: INFO: (2) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 8.602449ms)
May 16 17:08:42.538: INFO: (2) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 9.20133ms)
May 16 17:08:42.538: INFO: (2) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 9.024423ms)
May 16 17:08:42.539: INFO: (2) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 9.652218ms)
May 16 17:08:42.539: INFO: (2) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 9.853994ms)
May 16 17:08:42.540: INFO: (2) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 10.429545ms)
May 16 17:08:42.540: INFO: (2) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 11.260096ms)
May 16 17:08:42.541: INFO: (2) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 11.746663ms)
May 16 17:08:42.541: INFO: (2) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 12.30648ms)
May 16 17:08:42.542: INFO: (2) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 12.569092ms)
May 16 17:08:42.542: INFO: (2) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 12.888424ms)
May 16 17:08:42.543: INFO: (2) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 13.664185ms)
May 16 17:08:42.549: INFO: (3) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 5.856379ms)
May 16 17:08:42.549: INFO: (3) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 6.315377ms)
May 16 17:08:42.551: INFO: (3) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 7.658093ms)
May 16 17:08:42.552: INFO: (3) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 8.494984ms)
May 16 17:08:42.553: INFO: (3) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 9.215306ms)
May 16 17:08:42.553: INFO: (3) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 8.943476ms)
May 16 17:08:42.555: INFO: (3) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 11.139687ms)
May 16 17:08:42.555: INFO: (3) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 11.653234ms)
May 16 17:08:42.556: INFO: (3) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 13.192216ms)
May 16 17:08:42.557: INFO: (3) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 13.165632ms)
May 16 17:08:42.557: INFO: (3) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 13.113549ms)
May 16 17:08:42.557: INFO: (3) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 14.186578ms)
May 16 17:08:42.558: INFO: (3) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 14.005293ms)
May 16 17:08:42.558: INFO: (3) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 15.030678ms)
May 16 17:08:42.559: INFO: (3) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 15.667799ms)
May 16 17:08:42.559: INFO: (3) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 15.510008ms)
May 16 17:08:42.569: INFO: (4) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 9.469688ms)
May 16 17:08:42.569: INFO: (4) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 9.256667ms)
May 16 17:08:42.570: INFO: (4) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 9.933063ms)
May 16 17:08:42.570: INFO: (4) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 10.203478ms)
May 16 17:08:42.570: INFO: (4) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 9.938068ms)
May 16 17:08:42.584: INFO: (4) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 24.281887ms)
May 16 17:08:42.585: INFO: (4) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 24.8124ms)
May 16 17:08:42.586: INFO: (4) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 26.101247ms)
May 16 17:08:42.586: INFO: (4) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 26.025271ms)
May 16 17:08:42.586: INFO: (4) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 26.441857ms)
May 16 17:08:42.587: INFO: (4) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 26.553397ms)
May 16 17:08:42.587: INFO: (4) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 26.537688ms)
May 16 17:08:42.587: INFO: (4) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 27.092574ms)
May 16 17:08:42.587: INFO: (4) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 27.151522ms)
May 16 17:08:42.588: INFO: (4) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 28.204251ms)
May 16 17:08:42.588: INFO: (4) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 28.415547ms)
May 16 17:08:42.594: INFO: (5) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 5.521549ms)
May 16 17:08:42.596: INFO: (5) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 7.414939ms)
May 16 17:08:42.597: INFO: (5) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 8.086499ms)
May 16 17:08:42.597: INFO: (5) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 8.050471ms)
May 16 17:08:42.598: INFO: (5) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 9.06378ms)
May 16 17:08:42.598: INFO: (5) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 9.303902ms)
May 16 17:08:42.599: INFO: (5) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 10.638997ms)
May 16 17:08:42.600: INFO: (5) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 10.678207ms)
May 16 17:08:42.601: INFO: (5) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 12.183623ms)
May 16 17:08:42.601: INFO: (5) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 11.840329ms)
May 16 17:08:42.601: INFO: (5) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 12.130573ms)
May 16 17:08:42.601: INFO: (5) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 12.073632ms)
May 16 17:08:42.602: INFO: (5) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 12.961684ms)
May 16 17:08:42.603: INFO: (5) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 13.857925ms)
May 16 17:08:42.603: INFO: (5) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 14.019901ms)
May 16 17:08:42.603: INFO: (5) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 13.905576ms)
May 16 17:08:42.609: INFO: (6) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 6.158017ms)
May 16 17:08:42.612: INFO: (6) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 7.994001ms)
May 16 17:08:42.612: INFO: (6) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 8.309926ms)
May 16 17:08:42.612: INFO: (6) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 8.74501ms)
May 16 17:08:42.612: INFO: (6) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 9.045607ms)
May 16 17:08:42.622: INFO: (6) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 18.40975ms)
May 16 17:08:42.622: INFO: (6) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 18.59221ms)
May 16 17:08:42.623: INFO: (6) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 19.334361ms)
May 16 17:08:42.623: INFO: (6) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 19.414941ms)
May 16 17:08:42.623: INFO: (6) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 19.44772ms)
May 16 17:08:42.623: INFO: (6) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 19.715143ms)
May 16 17:08:42.623: INFO: (6) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 20.279403ms)
May 16 17:08:42.624: INFO: (6) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 20.436905ms)
May 16 17:08:42.624: INFO: (6) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 20.733661ms)
May 16 17:08:42.624: INFO: (6) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 20.663075ms)
May 16 17:08:42.626: INFO: (6) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 22.095035ms)
May 16 17:08:42.640: INFO: (7) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 12.59679ms)
May 16 17:08:42.640: INFO: (7) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 13.138845ms)
May 16 17:08:42.640: INFO: (7) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 12.836503ms)
May 16 17:08:42.641: INFO: (7) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 14.100978ms)
May 16 17:08:42.641: INFO: (7) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 14.397683ms)
May 16 17:08:42.642: INFO: (7) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 15.28288ms)
May 16 17:08:42.642: INFO: (7) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 14.829985ms)
May 16 17:08:42.642: INFO: (7) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 15.979045ms)
May 16 17:08:42.643: INFO: (7) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 15.873294ms)
May 16 17:08:42.643: INFO: (7) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 16.409562ms)
May 16 17:08:42.643: INFO: (7) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 16.032114ms)
May 16 17:08:42.643: INFO: (7) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 16.692007ms)
May 16 17:08:42.644: INFO: (7) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 17.763383ms)
May 16 17:08:42.644: INFO: (7) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 17.003508ms)
May 16 17:08:42.644: INFO: (7) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 18.355878ms)
May 16 17:08:42.647: INFO: (7) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 20.624688ms)
May 16 17:08:42.653: INFO: (8) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 5.437863ms)
May 16 17:08:42.654: INFO: (8) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 6.55129ms)
May 16 17:08:42.654: INFO: (8) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 7.051938ms)
May 16 17:08:42.655: INFO: (8) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 7.463684ms)
May 16 17:08:42.655: INFO: (8) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 7.585664ms)
May 16 17:08:42.656: INFO: (8) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 8.646532ms)
May 16 17:08:42.656: INFO: (8) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 8.311896ms)
May 16 17:08:42.657: INFO: (8) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 8.969931ms)
May 16 17:08:42.658: INFO: (8) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 10.955252ms)
May 16 17:08:42.658: INFO: (8) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 10.408021ms)
May 16 17:08:42.659: INFO: (8) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 12.42644ms)
May 16 17:08:42.660: INFO: (8) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 12.608269ms)
May 16 17:08:42.660: INFO: (8) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 11.999727ms)
May 16 17:08:42.660: INFO: (8) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 12.598687ms)
May 16 17:08:42.661: INFO: (8) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 12.648295ms)
May 16 17:08:42.661: INFO: (8) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 13.054374ms)
May 16 17:08:42.668: INFO: (9) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 6.658264ms)
May 16 17:08:42.670: INFO: (9) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 7.427015ms)
May 16 17:08:42.671: INFO: (9) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 9.376883ms)
May 16 17:08:42.671: INFO: (9) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 9.119732ms)
May 16 17:08:42.671: INFO: (9) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 9.394309ms)
May 16 17:08:42.671: INFO: (9) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 9.72693ms)
May 16 17:08:42.671: INFO: (9) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 9.877675ms)
May 16 17:08:42.672: INFO: (9) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 9.607616ms)
May 16 17:08:42.672: INFO: (9) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 10.926699ms)
May 16 17:08:42.672: INFO: (9) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 10.329697ms)
May 16 17:08:42.675: INFO: (9) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 13.669744ms)
May 16 17:08:42.677: INFO: (9) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 15.048497ms)
May 16 17:08:42.677: INFO: (9) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 15.301157ms)
May 16 17:08:42.679: INFO: (9) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 16.808869ms)
May 16 17:08:42.682: INFO: (9) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 19.977443ms)
May 16 17:08:42.686: INFO: (9) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 23.647166ms)
May 16 17:08:42.699: INFO: (10) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 12.216659ms)
May 16 17:08:42.699: INFO: (10) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 12.612252ms)
May 16 17:08:42.699: INFO: (10) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 12.614252ms)
May 16 17:08:42.706: INFO: (10) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 19.878413ms)
May 16 17:08:42.706: INFO: (10) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 19.360661ms)
May 16 17:08:42.707: INFO: (10) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 20.973635ms)
May 16 17:08:42.708: INFO: (10) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 20.854295ms)
May 16 17:08:42.708: INFO: (10) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 20.53055ms)
May 16 17:08:42.708: INFO: (10) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 21.515394ms)
May 16 17:08:42.708: INFO: (10) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 21.477131ms)
May 16 17:08:42.708: INFO: (10) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 21.01188ms)
May 16 17:08:42.708: INFO: (10) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 21.373973ms)
May 16 17:08:42.708: INFO: (10) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 21.685733ms)
May 16 17:08:42.709: INFO: (10) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 22.631661ms)
May 16 17:08:42.709: INFO: (10) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 21.855638ms)
May 16 17:08:42.709: INFO: (10) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 21.892757ms)
May 16 17:08:42.715: INFO: (11) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 5.465173ms)
May 16 17:08:42.716: INFO: (11) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 6.327195ms)
May 16 17:08:42.718: INFO: (11) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 8.312019ms)
May 16 17:08:42.718: INFO: (11) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 8.465876ms)
May 16 17:08:42.719: INFO: (11) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 9.853541ms)
May 16 17:08:42.719: INFO: (11) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 9.915599ms)
May 16 17:08:42.720: INFO: (11) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 10.884297ms)
May 16 17:08:42.720: INFO: (11) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 10.708763ms)
May 16 17:08:42.721: INFO: (11) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 11.587576ms)
May 16 17:08:42.721: INFO: (11) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 11.707594ms)
May 16 17:08:42.721: INFO: (11) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 11.555771ms)
May 16 17:08:42.722: INFO: (11) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 12.060431ms)
May 16 17:08:42.722: INFO: (11) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 13.090709ms)
May 16 17:08:42.723: INFO: (11) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 13.637838ms)
May 16 17:08:42.723: INFO: (11) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 13.770516ms)
May 16 17:08:42.723: INFO: (11) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 13.881135ms)
May 16 17:08:42.732: INFO: (12) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 7.836131ms)
May 16 17:08:42.733: INFO: (12) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 8.550579ms)
May 16 17:08:42.735: INFO: (12) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 10.650186ms)
May 16 17:08:42.735: INFO: (12) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 11.003111ms)
May 16 17:08:42.735: INFO: (12) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 11.193545ms)
May 16 17:08:42.735: INFO: (12) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 11.122548ms)
May 16 17:08:42.736: INFO: (12) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 11.670233ms)
May 16 17:08:42.737: INFO: (12) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 12.813556ms)
May 16 17:08:42.737: INFO: (12) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 13.262801ms)
May 16 17:08:42.737: INFO: (12) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 12.688326ms)
May 16 17:08:42.741: INFO: (12) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 16.706599ms)
May 16 17:08:42.741: INFO: (12) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 17.577909ms)
May 16 17:08:42.742: INFO: (12) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 17.814554ms)
May 16 17:08:42.742: INFO: (12) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 17.988382ms)
May 16 17:08:42.742: INFO: (12) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 18.279928ms)
May 16 17:08:42.742: INFO: (12) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 18.718272ms)
May 16 17:08:42.754: INFO: (13) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 10.921951ms)
May 16 17:08:42.756: INFO: (13) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 13.023137ms)
May 16 17:08:42.758: INFO: (13) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 14.736396ms)
May 16 17:08:42.758: INFO: (13) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 14.875265ms)
May 16 17:08:42.759: INFO: (13) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 15.428149ms)
May 16 17:08:42.760: INFO: (13) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 16.29506ms)
May 16 17:08:42.761: INFO: (13) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 17.849551ms)
May 16 17:08:42.761: INFO: (13) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 17.766591ms)
May 16 17:08:42.762: INFO: (13) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 18.628575ms)
May 16 17:08:42.762: INFO: (13) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 18.751323ms)
May 16 17:08:42.762: INFO: (13) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 18.28112ms)
May 16 17:08:42.762: INFO: (13) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 18.802006ms)
May 16 17:08:42.762: INFO: (13) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 18.934721ms)
May 16 17:08:42.762: INFO: (13) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 19.713927ms)
May 16 17:08:42.763: INFO: (13) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 18.865772ms)
May 16 17:08:42.763: INFO: (13) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 19.488068ms)
May 16 17:08:42.771: INFO: (14) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 7.44541ms)
May 16 17:08:42.773: INFO: (14) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 10.095354ms)
May 16 17:08:42.776: INFO: (14) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 12.058ms)
May 16 17:08:42.776: INFO: (14) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 12.33351ms)
May 16 17:08:42.776: INFO: (14) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 12.267288ms)
May 16 17:08:42.776: INFO: (14) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 12.817653ms)
May 16 17:08:42.776: INFO: (14) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 12.985386ms)
May 16 17:08:42.777: INFO: (14) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 14.248902ms)
May 16 17:08:42.778: INFO: (14) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 14.338163ms)
May 16 17:08:42.778: INFO: (14) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 14.134708ms)
May 16 17:08:42.778: INFO: (14) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 14.264556ms)
May 16 17:08:42.778: INFO: (14) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 14.978518ms)
May 16 17:08:42.779: INFO: (14) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 15.421988ms)
May 16 17:08:42.779: INFO: (14) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 15.502515ms)
May 16 17:08:42.783: INFO: (14) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 20.290704ms)
May 16 17:08:42.785: INFO: (14) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 21.152541ms)
May 16 17:08:42.791: INFO: (15) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 5.788352ms)
May 16 17:08:42.791: INFO: (15) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 6.14054ms)
May 16 17:08:42.793: INFO: (15) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 7.771886ms)
May 16 17:08:42.793: INFO: (15) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 8.39715ms)
May 16 17:08:42.794: INFO: (15) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 8.554888ms)
May 16 17:08:42.794: INFO: (15) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 8.800478ms)
May 16 17:08:42.794: INFO: (15) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 8.834006ms)
May 16 17:08:42.800: INFO: (15) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 14.429908ms)
May 16 17:08:42.800: INFO: (15) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 14.578439ms)
May 16 17:08:42.800: INFO: (15) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 14.730916ms)
May 16 17:08:42.801: INFO: (15) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 15.162032ms)
May 16 17:08:42.802: INFO: (15) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 16.296521ms)
May 16 17:08:42.802: INFO: (15) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 16.666781ms)
May 16 17:08:42.803: INFO: (15) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 17.157891ms)
May 16 17:08:42.803: INFO: (15) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 17.529172ms)
May 16 17:08:42.804: INFO: (15) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 18.741191ms)
May 16 17:08:42.810: INFO: (16) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 5.98011ms)
May 16 17:08:42.816: INFO: (16) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 10.822469ms)
May 16 17:08:42.816: INFO: (16) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 11.421859ms)
May 16 17:08:42.816: INFO: (16) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 11.268437ms)
May 16 17:08:42.818: INFO: (16) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 13.047378ms)
May 16 17:08:42.819: INFO: (16) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 13.849415ms)
May 16 17:08:42.819: INFO: (16) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 14.003587ms)
May 16 17:08:42.820: INFO: (16) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 15.211196ms)
May 16 17:08:42.826: INFO: (16) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 21.227254ms)
May 16 17:08:42.826: INFO: (16) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 21.394156ms)
May 16 17:08:42.826: INFO: (16) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 21.494943ms)
May 16 17:08:42.826: INFO: (16) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 21.707318ms)
May 16 17:08:42.826: INFO: (16) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 21.862108ms)
May 16 17:08:42.827: INFO: (16) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 22.180115ms)
May 16 17:08:42.827: INFO: (16) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 22.804147ms)
May 16 17:08:42.828: INFO: (16) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 22.982728ms)
May 16 17:08:42.839: INFO: (17) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 11.206105ms)
May 16 17:08:42.842: INFO: (17) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 13.139778ms)
May 16 17:08:42.843: INFO: (17) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 14.260914ms)
May 16 17:08:42.843: INFO: (17) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 14.826201ms)
May 16 17:08:42.843: INFO: (17) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 14.392493ms)
May 16 17:08:42.845: INFO: (17) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 15.714849ms)
May 16 17:08:42.845: INFO: (17) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 16.217874ms)
May 16 17:08:42.845: INFO: (17) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 16.979522ms)
May 16 17:08:42.846: INFO: (17) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 16.516241ms)
May 16 17:08:42.846: INFO: (17) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 17.580934ms)
May 16 17:08:42.846: INFO: (17) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 18.028273ms)
May 16 17:08:42.847: INFO: (17) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 18.851009ms)
May 16 17:08:42.848: INFO: (17) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 18.644879ms)
May 16 17:08:42.848: INFO: (17) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 18.750047ms)
May 16 17:08:42.848: INFO: (17) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 19.285397ms)
May 16 17:08:42.848: INFO: (17) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 19.275511ms)
May 16 17:08:42.855: INFO: (18) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 6.055754ms)
May 16 17:08:42.856: INFO: (18) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 7.357288ms)
May 16 17:08:42.857: INFO: (18) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 8.588757ms)
May 16 17:08:42.857: INFO: (18) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 8.094904ms)
May 16 17:08:42.858: INFO: (18) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 8.702766ms)
May 16 17:08:42.858: INFO: (18) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 8.913107ms)
May 16 17:08:42.858: INFO: (18) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 8.803447ms)
May 16 17:08:42.858: INFO: (18) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 9.388224ms)
May 16 17:08:42.859: INFO: (18) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 10.71666ms)
May 16 17:08:42.870: INFO: (18) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 21.993535ms)
May 16 17:08:42.870: INFO: (18) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 21.024155ms)
May 16 17:08:42.871: INFO: (18) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 22.107734ms)
May 16 17:08:42.872: INFO: (18) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 23.2076ms)
May 16 17:08:42.872: INFO: (18) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 22.944833ms)
May 16 17:08:42.872: INFO: (18) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 23.072915ms)
May 16 17:08:42.876: INFO: (18) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 26.151577ms)
May 16 17:08:42.884: INFO: (19) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 8.294343ms)
May 16 17:08:42.884: INFO: (19) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:462/proxy/: tls qux (200; 8.656077ms)
May 16 17:08:42.886: INFO: (19) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:460/proxy/: tls baz (200; 9.012155ms)
May 16 17:08:42.886: INFO: (19) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">... (200; 9.111261ms)
May 16 17:08:42.886: INFO: (19) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm/proxy/rewriteme">test</a> (200; 9.377873ms)
May 16 17:08:42.887: INFO: (19) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname1/proxy/: foo (200; 11.0939ms)
May 16 17:08:42.888: INFO: (19) /api/v1/namespaces/proxy-2369/services/http:proxy-service-b8zxn:portname2/proxy/: bar (200; 11.462925ms)
May 16 17:08:42.888: INFO: (19) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 11.639308ms)
May 16 17:08:42.889: INFO: (19) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:160/proxy/: foo (200; 12.345234ms)
May 16 17:08:42.889: INFO: (19) /api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/proxy-service-b8zxn-dvhsm:1080/proxy/rewriteme">test<... (200; 12.448218ms)
May 16 17:08:42.890: INFO: (19) /api/v1/namespaces/proxy-2369/pods/http:proxy-service-b8zxn-dvhsm:162/proxy/: bar (200; 13.231413ms)
May 16 17:08:42.890: INFO: (19) /api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/: <a href="/api/v1/namespaces/proxy-2369/pods/https:proxy-service-b8zxn-dvhsm:443/proxy/tlsrewritem... (200; 13.347413ms)
May 16 17:08:42.890: INFO: (19) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname2/proxy/: bar (200; 14.013576ms)
May 16 17:08:42.890: INFO: (19) /api/v1/namespaces/proxy-2369/services/proxy-service-b8zxn:portname1/proxy/: foo (200; 14.308726ms)
May 16 17:08:42.891: INFO: (19) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname1/proxy/: tls baz (200; 14.37672ms)
May 16 17:08:42.891: INFO: (19) /api/v1/namespaces/proxy-2369/services/https:proxy-service-b8zxn:tlsportname2/proxy/: tls qux (200; 14.342494ms)
STEP: deleting ReplicationController proxy-service-b8zxn in namespace proxy-2369, will wait for the garbage collector to delete the pods
May 16 17:08:42.959: INFO: Deleting ReplicationController proxy-service-b8zxn took: 10.367977ms
May 16 17:08:43.059: INFO: Terminating ReplicationController proxy-service-b8zxn pods took: 100.388826ms
[AfterEach] version v1
  test/e2e/framework/framework.go:188
May 16 17:08:45.160: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-2369" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":356,"completed":190,"skipped":3581,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:08:45.183: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4207
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-e72a59d8-26a8-4e94-95d9-70caa49e8b2c
STEP: Creating configMap with name cm-test-opt-upd-82166fbb-0bb4-40c8-8678-3bfeafcd9e97
STEP: Creating the pod
May 16 17:08:45.430: INFO: The status of Pod pod-configmaps-3f3feaa0-57b2-41b1-b6cb-7bf1244fa2bf is Pending, waiting for it to be Running (with Ready = true)
May 16 17:08:47.440: INFO: The status of Pod pod-configmaps-3f3feaa0-57b2-41b1-b6cb-7bf1244fa2bf is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-e72a59d8-26a8-4e94-95d9-70caa49e8b2c
STEP: Updating configmap cm-test-opt-upd-82166fbb-0bb4-40c8-8678-3bfeafcd9e97
STEP: Creating configMap with name cm-test-opt-create-119b6d13-faec-4946-8d7c-b9c9ff6a6e81
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
May 16 17:08:49.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4207" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":191,"skipped":3606,"failed":0}
SS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:08:49.587: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3922
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-3922
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-3922
I0516 17:08:49.772050      17 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3922, replica count: 2
May 16 17:08:52.823: INFO: Creating new exec pod
I0516 17:08:52.823200      17 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
May 16 17:08:55.855: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-3922 exec execpodmfdj4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
May 16 17:08:56.008: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
May 16 17:08:56.008: INFO: stdout: ""
May 16 17:08:57.008: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-3922 exec execpodmfdj4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
May 16 17:08:57.155: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
May 16 17:08:57.155: INFO: stdout: "externalname-service-x8lpq"
May 16 17:08:57.156: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-3922 exec execpodmfdj4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.148 80'
May 16 17:08:57.302: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.148 80\nConnection to 10.152.183.148 80 port [tcp/http] succeeded!\n"
May 16 17:08:57.302: INFO: stdout: "externalname-service-x8lpq"
May 16 17:08:57.302: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 17:08:57.329: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3922" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:7.758 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":356,"completed":192,"skipped":3608,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:08:57.345: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2057
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:08:59.521: INFO: Deleting pod "var-expansion-06bc8f65-47c2-4b1c-972e-125401d845b1" in namespace "var-expansion-2057"
May 16 17:08:59.531: INFO: Wait up to 5m0s for pod "var-expansion-06bc8f65-47c2-4b1c-972e-125401d845b1" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
May 16 17:09:01.545: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2057" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":356,"completed":193,"skipped":3634,"failed":0}
SSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:09:01.570: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-6899
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
May 16 17:09:12.793: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-6899" for this suite.

• [SLOW TEST:11.239 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":356,"completed":194,"skipped":3637,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:09:12.809: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-3835
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
May 16 17:09:15.720: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-3835" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":356,"completed":195,"skipped":3651,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:09:15.822: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7982
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7982
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-7982
STEP: Waiting until pod test-pod will start running in namespace statefulset-7982
STEP: Creating statefulset with conflicting port in namespace statefulset-7982
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7982
May 16 17:09:18.047: INFO: Observed stateful pod in namespace: statefulset-7982, name: ss-0, uid: 58c181dc-b2bf-4afe-9693-63d321638474, status phase: Pending. Waiting for statefulset controller to delete.
May 16 17:09:18.071: INFO: Observed stateful pod in namespace: statefulset-7982, name: ss-0, uid: 58c181dc-b2bf-4afe-9693-63d321638474, status phase: Failed. Waiting for statefulset controller to delete.
May 16 17:09:18.085: INFO: Observed stateful pod in namespace: statefulset-7982, name: ss-0, uid: 58c181dc-b2bf-4afe-9693-63d321638474, status phase: Failed. Waiting for statefulset controller to delete.
May 16 17:09:18.089: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-7982
STEP: Removing pod with conflicting port in namespace statefulset-7982
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7982 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
May 16 17:09:20.125: INFO: Deleting all statefulset in ns statefulset-7982
May 16 17:09:20.130: INFO: Scaling statefulset ss to 0
May 16 17:09:30.156: INFO: Waiting for statefulset status.replicas updated to 0
May 16 17:09:30.161: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
May 16 17:09:30.179: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7982" for this suite.

• [SLOW TEST:14.372 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Should recreate evicted statefulset [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":356,"completed":196,"skipped":3687,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:09:30.194: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8362
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 17:09:31.093: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 17:09:34.141: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
May 16 17:09:36.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=webhook-8362 attach --namespace=webhook-8362 to-be-attached-pod -i -c=container1'
May 16 17:09:36.271: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:09:36.281: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8362" for this suite.
STEP: Destroying namespace "webhook-8362-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.201 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":356,"completed":197,"skipped":3695,"failed":0}
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:09:36.395: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1092
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 17:09:36.942: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 17:09:39.978: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the crd webhook via the AdmissionRegistration API
STEP: Creating a custom resource definition that should be denied by the webhook
May 16 17:09:40.005: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:09:40.024: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1092" for this suite.
STEP: Destroying namespace "webhook-1092-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":356,"completed":198,"skipped":3696,"failed":0}
SSSSS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:09:40.101: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-1759
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
May 16 17:09:46.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-1759" for this suite.

• [SLOW TEST:6.256 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":356,"completed":199,"skipped":3701,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:09:46.357: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5917
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:09:46.501: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: creating the pod
STEP: submitting the pod to kubernetes
May 16 17:09:46.523: INFO: The status of Pod pod-logs-websocket-df9d6985-047c-49fe-af1a-09cae2f0de82 is Pending, waiting for it to be Running (with Ready = true)
May 16 17:09:48.533: INFO: The status of Pod pod-logs-websocket-df9d6985-047c-49fe-af1a-09cae2f0de82 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
May 16 17:09:48.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5917" for this suite.
•{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":356,"completed":200,"skipped":3731,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:09:48.584: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename discovery
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in discovery-1530
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:09:49.241: INFO: Checking APIGroup: apiregistration.k8s.io
May 16 17:09:49.243: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
May 16 17:09:49.243: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
May 16 17:09:49.243: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
May 16 17:09:49.243: INFO: Checking APIGroup: apps
May 16 17:09:49.245: INFO: PreferredVersion.GroupVersion: apps/v1
May 16 17:09:49.245: INFO: Versions found [{apps/v1 v1}]
May 16 17:09:49.245: INFO: apps/v1 matches apps/v1
May 16 17:09:49.245: INFO: Checking APIGroup: events.k8s.io
May 16 17:09:49.246: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
May 16 17:09:49.246: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
May 16 17:09:49.246: INFO: events.k8s.io/v1 matches events.k8s.io/v1
May 16 17:09:49.246: INFO: Checking APIGroup: authentication.k8s.io
May 16 17:09:49.248: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
May 16 17:09:49.248: INFO: Versions found [{authentication.k8s.io/v1 v1}]
May 16 17:09:49.248: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
May 16 17:09:49.248: INFO: Checking APIGroup: authorization.k8s.io
May 16 17:09:49.250: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
May 16 17:09:49.250: INFO: Versions found [{authorization.k8s.io/v1 v1}]
May 16 17:09:49.250: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
May 16 17:09:49.250: INFO: Checking APIGroup: autoscaling
May 16 17:09:49.251: INFO: PreferredVersion.GroupVersion: autoscaling/v2
May 16 17:09:49.251: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
May 16 17:09:49.251: INFO: autoscaling/v2 matches autoscaling/v2
May 16 17:09:49.251: INFO: Checking APIGroup: batch
May 16 17:09:49.253: INFO: PreferredVersion.GroupVersion: batch/v1
May 16 17:09:49.253: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
May 16 17:09:49.253: INFO: batch/v1 matches batch/v1
May 16 17:09:49.253: INFO: Checking APIGroup: certificates.k8s.io
May 16 17:09:49.254: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
May 16 17:09:49.254: INFO: Versions found [{certificates.k8s.io/v1 v1}]
May 16 17:09:49.254: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
May 16 17:09:49.254: INFO: Checking APIGroup: networking.k8s.io
May 16 17:09:49.256: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
May 16 17:09:49.256: INFO: Versions found [{networking.k8s.io/v1 v1}]
May 16 17:09:49.256: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
May 16 17:09:49.256: INFO: Checking APIGroup: policy
May 16 17:09:49.258: INFO: PreferredVersion.GroupVersion: policy/v1
May 16 17:09:49.258: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
May 16 17:09:49.258: INFO: policy/v1 matches policy/v1
May 16 17:09:49.258: INFO: Checking APIGroup: rbac.authorization.k8s.io
May 16 17:09:49.259: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
May 16 17:09:49.259: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
May 16 17:09:49.259: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
May 16 17:09:49.259: INFO: Checking APIGroup: storage.k8s.io
May 16 17:09:49.261: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
May 16 17:09:49.261: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
May 16 17:09:49.261: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
May 16 17:09:49.261: INFO: Checking APIGroup: admissionregistration.k8s.io
May 16 17:09:49.263: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
May 16 17:09:49.263: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
May 16 17:09:49.263: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
May 16 17:09:49.263: INFO: Checking APIGroup: apiextensions.k8s.io
May 16 17:09:49.264: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
May 16 17:09:49.264: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
May 16 17:09:49.264: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
May 16 17:09:49.264: INFO: Checking APIGroup: scheduling.k8s.io
May 16 17:09:49.266: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
May 16 17:09:49.266: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
May 16 17:09:49.266: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
May 16 17:09:49.266: INFO: Checking APIGroup: coordination.k8s.io
May 16 17:09:49.267: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
May 16 17:09:49.268: INFO: Versions found [{coordination.k8s.io/v1 v1}]
May 16 17:09:49.268: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
May 16 17:09:49.268: INFO: Checking APIGroup: node.k8s.io
May 16 17:09:49.269: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
May 16 17:09:49.269: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1}]
May 16 17:09:49.269: INFO: node.k8s.io/v1 matches node.k8s.io/v1
May 16 17:09:49.269: INFO: Checking APIGroup: discovery.k8s.io
May 16 17:09:49.271: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
May 16 17:09:49.271: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
May 16 17:09:49.271: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
May 16 17:09:49.271: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
May 16 17:09:49.272: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
May 16 17:09:49.272: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
May 16 17:09:49.272: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
May 16 17:09:49.272: INFO: Checking APIGroup: metrics.k8s.io
May 16 17:09:49.274: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
May 16 17:09:49.274: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
May 16 17:09:49.274: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:188
May 16 17:09:49.274: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-1530" for this suite.
•{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":356,"completed":201,"skipped":3742,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:09:49.292: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-2545
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-2545
May 16 17:09:49.469: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
May 16 17:09:51.476: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
May 16 17:09:51.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-2545 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
May 16 17:09:51.634: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
May 16 17:09:51.634: INFO: stdout: "iptables"
May 16 17:09:51.634: INFO: proxyMode: iptables
May 16 17:09:51.655: INFO: Waiting for pod kube-proxy-mode-detector to disappear
May 16 17:09:51.659: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-nodeport-timeout in namespace services-2545
STEP: creating replication controller affinity-nodeport-timeout in namespace services-2545
I0516 17:09:51.688167      17 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-2545, replica count: 3
I0516 17:09:54.738520      17 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
May 16 17:09:54.760: INFO: Creating new exec pod
May 16 17:09:57.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-2545 exec execpod-affinityrh89n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
May 16 17:09:57.941: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
May 16 17:09:57.941: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 17:09:57.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-2545 exec execpod-affinityrh89n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.42 80'
May 16 17:09:58.076: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.42 80\nConnection to 10.152.183.42 80 port [tcp/http] succeeded!\n"
May 16 17:09:58.076: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 17:09:58.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-2545 exec execpod-affinityrh89n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.3 31199'
May 16 17:09:58.221: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.76.3 31199\nConnection to 172.31.76.3 31199 port [tcp/*] succeeded!\n"
May 16 17:09:58.221: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 17:09:58.221: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-2545 exec execpod-affinityrh89n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.36.36 31199'
May 16 17:09:58.363: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.36.36 31199\nConnection to 172.31.36.36 31199 port [tcp/*] succeeded!\n"
May 16 17:09:58.363: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 17:09:58.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-2545 exec execpod-affinityrh89n -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.138:31199/ ; done'
May 16 17:09:58.593: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n"
May 16 17:09:58.593: INFO: stdout: "\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv\naffinity-nodeport-timeout-dhfqv"
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Received response from host: affinity-nodeport-timeout-dhfqv
May 16 17:09:58.593: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-2545 exec execpod-affinityrh89n -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.10.138:31199/'
May 16 17:09:58.738: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n"
May 16 17:09:58.738: INFO: stdout: "affinity-nodeport-timeout-dhfqv"
May 16 17:10:18.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-2545 exec execpod-affinityrh89n -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.10.138:31199/'
May 16 17:10:18.886: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.10.138:31199/\n"
May 16 17:10:18.886: INFO: stdout: "affinity-nodeport-timeout-xsdd8"
May 16 17:10:18.886: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-2545, will wait for the garbage collector to delete the pods
May 16 17:10:18.974: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 9.240373ms
May 16 17:10:19.075: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 100.743454ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 17:10:21.411: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2545" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:32.132 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":202,"skipped":3746,"failed":0}
SSSSSS
------------------------------
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:10:21.425: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-8389
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
May 16 17:10:23.603: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8389 PodName:var-expansion-1661f476-9b2e-4768-a32a-ee57eb6a2d94 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:10:23.603: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:10:23.604: INFO: ExecWithOptions: Clientset creation
May 16 17:10:23.604: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8389/pods/var-expansion-1661f476-9b2e-4768-a32a-ee57eb6a2d94/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path
May 16 17:10:23.694: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8389 PodName:var-expansion-1661f476-9b2e-4768-a32a-ee57eb6a2d94 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:10:23.694: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:10:23.694: INFO: ExecWithOptions: Clientset creation
May 16 17:10:23.694: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-8389/pods/var-expansion-1661f476-9b2e-4768-a32a-ee57eb6a2d94/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value
May 16 17:10:24.309: INFO: Successfully updated pod "var-expansion-1661f476-9b2e-4768-a32a-ee57eb6a2d94"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
May 16 17:10:24.314: INFO: Deleting pod "var-expansion-1661f476-9b2e-4768-a32a-ee57eb6a2d94" in namespace "var-expansion-8389"
May 16 17:10:24.326: INFO: Wait up to 5m0s for pod "var-expansion-1661f476-9b2e-4768-a32a-ee57eb6a2d94" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
May 16 17:10:58.340: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-8389" for this suite.

• [SLOW TEST:36.931 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":356,"completed":203,"skipped":3752,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:10:58.356: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4285
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:10:58.517: INFO: Pod name rollover-pod: Found 0 pods out of 1
May 16 17:11:03.529: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
May 16 17:11:03.529: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
May 16 17:11:05.539: INFO: Creating deployment "test-rollover-deployment"
May 16 17:11:05.553: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
May 16 17:11:07.567: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
May 16 17:11:07.578: INFO: Ensure that both replica sets have 1 created replica
May 16 17:11:07.589: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
May 16 17:11:07.605: INFO: Updating deployment test-rollover-deployment
May 16 17:11:07.605: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
May 16 17:11:09.622: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
May 16 17:11:09.631: INFO: Make sure deployment "test-rollover-deployment" is complete
May 16 17:11:09.641: INFO: all replica sets need to contain the pod-template-hash label
May 16 17:11:09.641: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 11, 9, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-77745f886c\" is progressing."}}, CollisionCount:(*int32)(nil)}
May 16 17:11:11.656: INFO: all replica sets need to contain the pod-template-hash label
May 16 17:11:11.656: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 11, 9, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-77745f886c\" is progressing."}}, CollisionCount:(*int32)(nil)}
May 16 17:11:13.656: INFO: all replica sets need to contain the pod-template-hash label
May 16 17:11:13.656: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 11, 9, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-77745f886c\" is progressing."}}, CollisionCount:(*int32)(nil)}
May 16 17:11:15.659: INFO: all replica sets need to contain the pod-template-hash label
May 16 17:11:15.659: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 11, 9, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-77745f886c\" is progressing."}}, CollisionCount:(*int32)(nil)}
May 16 17:11:17.660: INFO: all replica sets need to contain the pod-template-hash label
May 16 17:11:17.660: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 11, 9, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 11, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-77745f886c\" is progressing."}}, CollisionCount:(*int32)(nil)}
May 16 17:11:19.658: INFO: 
May 16 17:11:19.658: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
May 16 17:11:19.672: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-4285  2affd4f4-274e-4a1b-963f-c0cd5adbbcb6 27767 2 2022-05-16 17:11:05 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-05-16 17:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:11:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.36 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00456abb8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-05-16 17:11:05 +0000 UTC,LastTransitionTime:2022-05-16 17:11:05 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-77745f886c" has successfully progressed.,LastUpdateTime:2022-05-16 17:11:19 +0000 UTC,LastTransitionTime:2022-05-16 17:11:05 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

May 16 17:11:19.679: INFO: New ReplicaSet "test-rollover-deployment-77745f886c" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-77745f886c  deployment-4285  4abeb60d-5351-4454-962d-ebee2e9b29d0 27758 2 2022-05-16 17:11:07 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:77745f886c] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment 2affd4f4-274e-4a1b-963f-c0cd5adbbcb6 0xc00456b077 0xc00456b078}] []  [{kube-controller-manager Update apps/v1 2022-05-16 17:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2affd4f4-274e-4a1b-963f-c0cd5adbbcb6\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:11:19 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 77745f886c,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:77745f886c] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.36 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00456b128 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
May 16 17:11:19.679: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
May 16 17:11:19.679: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-4285  eddd0ccc-8e67-410d-815d-817c79ca7fb3 27766 2 2022-05-16 17:10:58 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment 2affd4f4-274e-4a1b-963f-c0cd5adbbcb6 0xc00456af47 0xc00456af48}] []  [{e2e.test Update apps/v1 2022-05-16 17:10:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:11:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2affd4f4-274e-4a1b-963f-c0cd5adbbcb6\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:11:19 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00456b008 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
May 16 17:11:19.680: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-87f8f6dcf  deployment-4285  4941b8df-286a-4311-8c7a-fcc9629614d7 27718 2 2022-05-16 17:11:05 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment 2affd4f4-274e-4a1b-963f-c0cd5adbbcb6 0xc00456b190 0xc00456b191}] []  [{kube-controller-manager Update apps/v1 2022-05-16 17:11:05 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2affd4f4-274e-4a1b-963f-c0cd5adbbcb6\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:11:07 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 87f8f6dcf,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00456b238 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
May 16 17:11:19.685: INFO: Pod "test-rollover-deployment-77745f886c-98wxd" is available:
&Pod{ObjectMeta:{test-rollover-deployment-77745f886c-98wxd test-rollover-deployment-77745f886c- deployment-4285  ae1bb9c9-2b13-46c2-88e5-6715a3372193 27736 0 2022-05-16 17:11:07 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:77745f886c] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rollover-deployment-77745f886c 4abeb60d-5351-4454-962d-ebee2e9b29d0 0xc003f86157 0xc003f86158}] []  [{kube-controller-manager Update v1 2022-05-16 17:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4abeb60d-5351-4454-962d-ebee2e9b29d0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 17:11:09 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.172\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-thj4f,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.36,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-thj4f,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:11:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:11:09 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:192.168.238.172,StartTime:2022-05-16 17:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 17:11:08 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.36,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:f5241226198f5a54d22540acf2b3933ea0f49458f90c51fc75833d0c428687b8,ContainerID:containerd://aaff155070b0a4f9fc0398d01908eb025aab1cc327bb820c920d21f5b7f4363c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.238.172,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
May 16 17:11:19.685: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4285" for this suite.

• [SLOW TEST:21.344 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":356,"completed":204,"skipped":3766,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:11:19.701: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7897
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
May 16 17:11:19.872: INFO: The status of Pod labelsupdateaee2844e-31f8-4aa5-80c1-ce2dccc129da is Pending, waiting for it to be Running (with Ready = true)
May 16 17:11:21.880: INFO: The status of Pod labelsupdateaee2844e-31f8-4aa5-80c1-ce2dccc129da is Running (Ready = true)
May 16 17:11:22.423: INFO: Successfully updated pod "labelsupdateaee2844e-31f8-4aa5-80c1-ce2dccc129da"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
May 16 17:11:26.459: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7897" for this suite.

• [SLOW TEST:6.774 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":205,"skipped":3794,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:11:26.476: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-6642
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
May 16 17:11:37.266: INFO: 68 pods remaining
May 16 17:11:37.266: INFO: 68 pods has nil DeletionTimestamp
May 16 17:11:37.266: INFO: 
STEP: Gathering metrics
May 16 17:11:42.268: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

May 16 17:11:42.268: INFO: Deleting pod "simpletest-rc-to-be-deleted-2gmsm" in namespace "gc-6642"
W0516 17:11:42.268051      17 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
May 16 17:11:42.292: INFO: Deleting pod "simpletest-rc-to-be-deleted-2k24v" in namespace "gc-6642"
May 16 17:11:42.309: INFO: Deleting pod "simpletest-rc-to-be-deleted-449pd" in namespace "gc-6642"
May 16 17:11:42.328: INFO: Deleting pod "simpletest-rc-to-be-deleted-44s48" in namespace "gc-6642"
May 16 17:11:42.346: INFO: Deleting pod "simpletest-rc-to-be-deleted-45mtt" in namespace "gc-6642"
May 16 17:11:42.365: INFO: Deleting pod "simpletest-rc-to-be-deleted-45z6d" in namespace "gc-6642"
May 16 17:11:42.382: INFO: Deleting pod "simpletest-rc-to-be-deleted-49dlg" in namespace "gc-6642"
May 16 17:11:42.401: INFO: Deleting pod "simpletest-rc-to-be-deleted-4d8tx" in namespace "gc-6642"
May 16 17:11:42.438: INFO: Deleting pod "simpletest-rc-to-be-deleted-4fv9f" in namespace "gc-6642"
May 16 17:11:42.513: INFO: Deleting pod "simpletest-rc-to-be-deleted-4jjmv" in namespace "gc-6642"
May 16 17:11:42.531: INFO: Deleting pod "simpletest-rc-to-be-deleted-4l28x" in namespace "gc-6642"
May 16 17:11:42.550: INFO: Deleting pod "simpletest-rc-to-be-deleted-4q65g" in namespace "gc-6642"
May 16 17:11:42.569: INFO: Deleting pod "simpletest-rc-to-be-deleted-57ggk" in namespace "gc-6642"
May 16 17:11:42.583: INFO: Deleting pod "simpletest-rc-to-be-deleted-5bvm9" in namespace "gc-6642"
May 16 17:11:42.607: INFO: Deleting pod "simpletest-rc-to-be-deleted-5dkpq" in namespace "gc-6642"
May 16 17:11:42.622: INFO: Deleting pod "simpletest-rc-to-be-deleted-5thxg" in namespace "gc-6642"
May 16 17:11:42.638: INFO: Deleting pod "simpletest-rc-to-be-deleted-6v5cd" in namespace "gc-6642"
May 16 17:11:42.658: INFO: Deleting pod "simpletest-rc-to-be-deleted-6vsjb" in namespace "gc-6642"
May 16 17:11:42.678: INFO: Deleting pod "simpletest-rc-to-be-deleted-6x6s2" in namespace "gc-6642"
May 16 17:11:42.698: INFO: Deleting pod "simpletest-rc-to-be-deleted-76m49" in namespace "gc-6642"
May 16 17:11:42.713: INFO: Deleting pod "simpletest-rc-to-be-deleted-76vqx" in namespace "gc-6642"
May 16 17:11:42.736: INFO: Deleting pod "simpletest-rc-to-be-deleted-7blhp" in namespace "gc-6642"
May 16 17:11:42.754: INFO: Deleting pod "simpletest-rc-to-be-deleted-7jj22" in namespace "gc-6642"
May 16 17:11:42.773: INFO: Deleting pod "simpletest-rc-to-be-deleted-7qc2d" in namespace "gc-6642"
May 16 17:11:42.788: INFO: Deleting pod "simpletest-rc-to-be-deleted-7qjwv" in namespace "gc-6642"
May 16 17:11:42.817: INFO: Deleting pod "simpletest-rc-to-be-deleted-7t66f" in namespace "gc-6642"
May 16 17:11:42.836: INFO: Deleting pod "simpletest-rc-to-be-deleted-85pg7" in namespace "gc-6642"
May 16 17:11:42.853: INFO: Deleting pod "simpletest-rc-to-be-deleted-8l7cz" in namespace "gc-6642"
May 16 17:11:42.873: INFO: Deleting pod "simpletest-rc-to-be-deleted-946lr" in namespace "gc-6642"
May 16 17:11:42.892: INFO: Deleting pod "simpletest-rc-to-be-deleted-956h5" in namespace "gc-6642"
May 16 17:11:42.917: INFO: Deleting pod "simpletest-rc-to-be-deleted-99pjv" in namespace "gc-6642"
May 16 17:11:42.943: INFO: Deleting pod "simpletest-rc-to-be-deleted-9b8t8" in namespace "gc-6642"
May 16 17:11:42.971: INFO: Deleting pod "simpletest-rc-to-be-deleted-9bpjm" in namespace "gc-6642"
May 16 17:11:42.989: INFO: Deleting pod "simpletest-rc-to-be-deleted-9djl8" in namespace "gc-6642"
May 16 17:11:43.006: INFO: Deleting pod "simpletest-rc-to-be-deleted-9mlbq" in namespace "gc-6642"
May 16 17:11:43.029: INFO: Deleting pod "simpletest-rc-to-be-deleted-bgj8k" in namespace "gc-6642"
May 16 17:11:43.047: INFO: Deleting pod "simpletest-rc-to-be-deleted-bhzcw" in namespace "gc-6642"
May 16 17:11:43.066: INFO: Deleting pod "simpletest-rc-to-be-deleted-c2qbj" in namespace "gc-6642"
May 16 17:11:43.090: INFO: Deleting pod "simpletest-rc-to-be-deleted-ckfmf" in namespace "gc-6642"
May 16 17:11:43.111: INFO: Deleting pod "simpletest-rc-to-be-deleted-cvqw7" in namespace "gc-6642"
May 16 17:11:43.144: INFO: Deleting pod "simpletest-rc-to-be-deleted-cwxn2" in namespace "gc-6642"
May 16 17:11:43.162: INFO: Deleting pod "simpletest-rc-to-be-deleted-d68h2" in namespace "gc-6642"
May 16 17:11:43.181: INFO: Deleting pod "simpletest-rc-to-be-deleted-dlf64" in namespace "gc-6642"
May 16 17:11:43.195: INFO: Deleting pod "simpletest-rc-to-be-deleted-dqt4w" in namespace "gc-6642"
May 16 17:11:43.210: INFO: Deleting pod "simpletest-rc-to-be-deleted-dvlxj" in namespace "gc-6642"
May 16 17:11:43.223: INFO: Deleting pod "simpletest-rc-to-be-deleted-f96tn" in namespace "gc-6642"
May 16 17:11:43.243: INFO: Deleting pod "simpletest-rc-to-be-deleted-fd4zw" in namespace "gc-6642"
May 16 17:11:43.337: INFO: Deleting pod "simpletest-rc-to-be-deleted-fjs5f" in namespace "gc-6642"
May 16 17:11:43.371: INFO: Deleting pod "simpletest-rc-to-be-deleted-glpjv" in namespace "gc-6642"
May 16 17:11:43.400: INFO: Deleting pod "simpletest-rc-to-be-deleted-h785b" in namespace "gc-6642"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
May 16 17:11:43.419: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6642" for this suite.

• [SLOW TEST:16.964 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":356,"completed":206,"skipped":3845,"failed":0}
SSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:11:43.440: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2505
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
May 16 17:12:11.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2505" for this suite.

• [SLOW TEST:28.237 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":356,"completed":207,"skipped":3848,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:12:11.678: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-multiple-pods-2891
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:348
May 16 17:12:11.828: INFO: Waiting up to 1m0s for all nodes to be ready
May 16 17:13:11.849: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:13:11.855: INFO: Starting informer...
STEP: Starting pods...
May 16 17:13:12.085: INFO: Pod1 is running on ip-172-31-76-3. Tainting Node
May 16 17:13:14.320: INFO: Pod2 is running on ip-172-31-76-3. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
May 16 17:13:20.630: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
May 16 17:13:40.666: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:188
May 16 17:13:40.696: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-2891" for this suite.

• [SLOW TEST:89.036 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":356,"completed":208,"skipped":3897,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:13:40.715: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2434
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating secret secrets-2434/secret-test-48eddee5-5c55-44bc-8850-c437418a1f85
STEP: Creating a pod to test consume secrets
May 16 17:13:40.917: INFO: Waiting up to 5m0s for pod "pod-configmaps-bc7814b0-b584-427c-98ff-672827dc90de" in namespace "secrets-2434" to be "Succeeded or Failed"
May 16 17:13:40.922: INFO: Pod "pod-configmaps-bc7814b0-b584-427c-98ff-672827dc90de": Phase="Pending", Reason="", readiness=false. Elapsed: 5.140545ms
May 16 17:13:42.930: INFO: Pod "pod-configmaps-bc7814b0-b584-427c-98ff-672827dc90de": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012295287s
May 16 17:13:44.941: INFO: Pod "pod-configmaps-bc7814b0-b584-427c-98ff-672827dc90de": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023428484s
STEP: Saw pod success
May 16 17:13:44.941: INFO: Pod "pod-configmaps-bc7814b0-b584-427c-98ff-672827dc90de" satisfied condition "Succeeded or Failed"
May 16 17:13:44.945: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-configmaps-bc7814b0-b584-427c-98ff-672827dc90de container env-test: <nil>
STEP: delete the pod
May 16 17:13:44.983: INFO: Waiting for pod pod-configmaps-bc7814b0-b584-427c-98ff-672827dc90de to disappear
May 16 17:13:44.988: INFO: Pod pod-configmaps-bc7814b0-b584-427c-98ff-672827dc90de no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
May 16 17:13:44.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2434" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":209,"skipped":3910,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:13:45.003: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-9753
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
May 16 17:13:45.197: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:13:45.197: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:13:45.202: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:13:45.202: INFO: Node ip-172-31-10-138 is running 0 daemon pod, expected 1
May 16 17:13:46.210: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:13:46.210: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:13:46.217: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:13:46.217: INFO: Node ip-172-31-10-138 is running 0 daemon pod, expected 1
May 16 17:13:47.210: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:13:47.210: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:13:47.215: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
May 16 17:13:47.215: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
May 16 17:13:47.254: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30332"},"items":null}

May 16 17:13:47.259: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30332"},"items":[{"metadata":{"name":"daemon-set-5z748","generateName":"daemon-set-","namespace":"daemonsets-9753","uid":"e21040e1-b4d7-471d-afd1-19411fda8946","resourceVersion":"30330","creationTimestamp":"2022-05-16T17:13:45Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"33b007a9-54d1-4ae8-951c-b7fbe9e08a76","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-05-16T17:13:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"33b007a9-54d1-4ae8-951c-b7fbe9e08a76\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-05-16T17:13:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.46.124\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-v5lk6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-v5lk6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-10-138","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-10-138"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-05-16T17:13:45Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-05-16T17:13:47Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-05-16T17:13:47Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-05-16T17:13:45Z"}],"hostIP":"172.31.10.138","podIP":"192.168.46.124","podIPs":[{"ip":"192.168.46.124"}],"startTime":"2022-05-16T17:13:45Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-05-16T17:13:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://e7ee2e5cfdc50c05e5079eafcaeaa828dcb870e0f5667efc09742a0bc3adb762","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-hp8zq","generateName":"daemon-set-","namespace":"daemonsets-9753","uid":"a9f5e6f3-e6af-4927-9bd3-5e966ad1a7c4","resourceVersion":"30325","creationTimestamp":"2022-05-16T17:13:45Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"33b007a9-54d1-4ae8-951c-b7fbe9e08a76","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-05-16T17:13:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"33b007a9-54d1-4ae8-951c-b7fbe9e08a76\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-05-16T17:13:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.49.197\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wqhhk","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wqhhk","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-36-36","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-36-36"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-05-16T17:13:45Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-05-16T17:13:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-05-16T17:13:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-05-16T17:13:45Z"}],"hostIP":"172.31.36.36","podIP":"192.168.49.197","podIPs":[{"ip":"192.168.49.197"}],"startTime":"2022-05-16T17:13:45Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-05-16T17:13:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://04b7ecc24df240a7401cfdcb869a793070ff45aed52b33206f302e1408cc72dd","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-wjzhn","generateName":"daemon-set-","namespace":"daemonsets-9753","uid":"50a2da79-8ea7-4cdd-a2da-538089dbbf1f","resourceVersion":"30328","creationTimestamp":"2022-05-16T17:13:45Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"33b007a9-54d1-4ae8-951c-b7fbe9e08a76","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-05-16T17:13:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"33b007a9-54d1-4ae8-951c-b7fbe9e08a76\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-05-16T17:13:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.156\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-zlhdr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-zlhdr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-76-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-76-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-05-16T17:13:45Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-05-16T17:13:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-05-16T17:13:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-05-16T17:13:45Z"}],"hostIP":"172.31.76.3","podIP":"192.168.238.156","podIPs":[{"ip":"192.168.238.156"}],"startTime":"2022-05-16T17:13:45Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-05-16T17:13:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://4ba2dccab9d44e7766c9f111c5cca26ac2f75deae5808a5bfbf9497e738b9841","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
May 16 17:13:47.284: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-9753" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":356,"completed":210,"skipped":3920,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:13:47.301: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-6596
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:13:47.501: INFO: Got root ca configmap in namespace "svcaccounts-6596"
May 16 17:13:47.510: INFO: Deleted root ca configmap in namespace "svcaccounts-6596"
STEP: waiting for a new root ca configmap created
May 16 17:13:48.018: INFO: Recreated root ca configmap in namespace "svcaccounts-6596"
May 16 17:13:48.025: INFO: Updated root ca configmap in namespace "svcaccounts-6596"
STEP: waiting for the root ca configmap reconciled
May 16 17:13:48.532: INFO: Reconciled root ca configmap in namespace "svcaccounts-6596"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
May 16 17:13:48.533: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-6596" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":356,"completed":211,"skipped":3958,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:13:48.548: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-368
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 17:13:50.141: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 17:13:53.178: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:14:03.336: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-368" for this suite.
STEP: Destroying namespace "webhook-368-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:14.883 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":356,"completed":212,"skipped":3972,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:14:03.431: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4893
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:14:03.585: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties
May 16 17:14:06.061: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 --namespace=crd-publish-openapi-4893 create -f -'
May 16 17:14:07.654: INFO: stderr: ""
May 16 17:14:07.654: INFO: stdout: "e2e-test-crd-publish-openapi-4908-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
May 16 17:14:07.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 --namespace=crd-publish-openapi-4893 delete e2e-test-crd-publish-openapi-4908-crds test-foo'
May 16 17:14:07.725: INFO: stderr: ""
May 16 17:14:07.726: INFO: stdout: "e2e-test-crd-publish-openapi-4908-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
May 16 17:14:07.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 --namespace=crd-publish-openapi-4893 apply -f -'
May 16 17:14:08.002: INFO: stderr: ""
May 16 17:14:08.002: INFO: stdout: "e2e-test-crd-publish-openapi-4908-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
May 16 17:14:08.002: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 --namespace=crd-publish-openapi-4893 delete e2e-test-crd-publish-openapi-4908-crds test-foo'
May 16 17:14:08.108: INFO: stderr: ""
May 16 17:14:08.108: INFO: stdout: "e2e-test-crd-publish-openapi-4908-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values
May 16 17:14:08.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 --namespace=crd-publish-openapi-4893 create -f -'
May 16 17:14:08.767: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
May 16 17:14:08.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 --namespace=crd-publish-openapi-4893 create -f -'
May 16 17:14:08.924: INFO: rc: 1
May 16 17:14:08.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 --namespace=crd-publish-openapi-4893 apply -f -'
May 16 17:14:09.090: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties
May 16 17:14:09.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 --namespace=crd-publish-openapi-4893 create -f -'
May 16 17:14:09.242: INFO: rc: 1
May 16 17:14:09.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 --namespace=crd-publish-openapi-4893 apply -f -'
May 16 17:14:09.402: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
May 16 17:14:09.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 explain e2e-test-crd-publish-openapi-4908-crds'
May 16 17:14:09.560: INFO: stderr: ""
May 16 17:14:09.560: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4908-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
May 16 17:14:09.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 explain e2e-test-crd-publish-openapi-4908-crds.metadata'
May 16 17:14:09.723: INFO: stderr: ""
May 16 17:14:09.723: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4908-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     Deprecated: ClusterName is a legacy field that was always cleared by the\n     system and never used; it will be removed completely in 1.25.\n\n     The name in the go struct is changed to help clients detect accidental use.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
May 16 17:14:09.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 explain e2e-test-crd-publish-openapi-4908-crds.spec'
May 16 17:14:09.902: INFO: stderr: ""
May 16 17:14:09.902: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4908-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
May 16 17:14:09.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 explain e2e-test-crd-publish-openapi-4908-crds.spec.bars'
May 16 17:14:10.063: INFO: stderr: ""
May 16 17:14:10.063: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4908-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
May 16 17:14:10.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-4893 explain e2e-test-crd-publish-openapi-4908-crds.spec.bars2'
May 16 17:14:10.228: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:14:12.670: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4893" for this suite.

• [SLOW TEST:9.261 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":356,"completed":213,"skipped":3988,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:14:12.693: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-46
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
May 16 17:14:12.865: INFO: Waiting up to 1m0s for all nodes to be ready
May 16 17:15:12.897: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:15:12.902: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-8266
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:690
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:15:13.064: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
May 16 17:15:13.070: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/framework.go:188
May 16 17:15:13.098: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-8266" for this suite.
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:706
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
May 16 17:15:13.137: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-46" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:60.521 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:683
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":356,"completed":214,"skipped":4084,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:15:13.215: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-7651
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:15:13.367: INFO: Pod name cleanup-pod: Found 0 pods out of 1
May 16 17:15:18.381: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
May 16 17:15:18.381: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
May 16 17:15:18.418: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-7651  2879c9b0-4193-4183-8fd4-caf10c12a102 30754 1 2022-05-16 17:15:18 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  [{e2e.test Update apps/v1 2022-05-16 17:15:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.36 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003386af8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

May 16 17:15:18.425: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
May 16 17:15:18.425: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
May 16 17:15:18.425: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-7651  6d7bb236-62f2-4b00-b049-7dfc61004b6e 30755 1 2022-05-16 17:15:13 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment 2879c9b0-4193-4183-8fd4-caf10c12a102 0xc003386e17 0xc003386e18}] []  [{e2e.test Update apps/v1 2022-05-16 17:15:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:15:14 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2022-05-16 17:15:18 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"2879c9b0-4193-4183-8fd4-caf10c12a102\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc003386ed8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
May 16 17:15:18.434: INFO: Pod "test-cleanup-controller-pksbm" is available:
&Pod{ObjectMeta:{test-cleanup-controller-pksbm test-cleanup-controller- deployment-7651  6bc26191-5546-46c4-a216-50233000bc0d 30740 0 2022-05-16 17:15:13 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-cleanup-controller 6d7bb236-62f2-4b00-b049-7dfc61004b6e 0xc0033871d7 0xc0033871d8}] []  [{kube-controller-manager Update v1 2022-05-16 17:15:13 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6d7bb236-62f2-4b00-b049-7dfc61004b6e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 17:15:14 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.158\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hrfzp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hrfzp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:15:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:15:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:15:14 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:15:13 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:192.168.238.158,StartTime:2022-05-16 17:15:13 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 17:15:14 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://f0366b2bbb624aa61bc5508bee17176abb85df8199ac8284b571f5ad33d2fa30,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.238.158,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
May 16 17:15:18.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7651" for this suite.

• [SLOW TEST:5.241 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":356,"completed":215,"skipped":4140,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:15:18.457: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-3727
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-7563
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-9446
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
May 16 17:15:24.930: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-3727" for this suite.
STEP: Destroying namespace "nsdeletetest-7563" for this suite.
May 16 17:15:24.954: INFO: Namespace nsdeletetest-7563 was already deleted
STEP: Destroying namespace "nsdeletetest-9446" for this suite.

• [SLOW TEST:6.508 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":356,"completed":216,"skipped":4148,"failed":0}
SS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:15:24.965: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4061
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
May 16 17:15:25.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 create -f -'
May 16 17:15:25.652: INFO: stderr: ""
May 16 17:15:25.652: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
May 16 17:15:25.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
May 16 17:15:25.719: INFO: stderr: ""
May 16 17:15:25.719: INFO: stdout: "update-demo-nautilus-8kxwx update-demo-nautilus-f9kgd "
May 16 17:15:25.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 get pods update-demo-nautilus-8kxwx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
May 16 17:15:25.780: INFO: stderr: ""
May 16 17:15:25.780: INFO: stdout: ""
May 16 17:15:25.780: INFO: update-demo-nautilus-8kxwx is created but not running
May 16 17:15:30.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
May 16 17:15:30.848: INFO: stderr: ""
May 16 17:15:30.849: INFO: stdout: "update-demo-nautilus-8kxwx update-demo-nautilus-f9kgd "
May 16 17:15:30.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 get pods update-demo-nautilus-8kxwx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
May 16 17:15:30.915: INFO: stderr: ""
May 16 17:15:30.915: INFO: stdout: ""
May 16 17:15:30.915: INFO: update-demo-nautilus-8kxwx is created but not running
May 16 17:15:35.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
May 16 17:15:35.992: INFO: stderr: ""
May 16 17:15:35.993: INFO: stdout: "update-demo-nautilus-8kxwx update-demo-nautilus-f9kgd "
May 16 17:15:35.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 get pods update-demo-nautilus-8kxwx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
May 16 17:15:36.066: INFO: stderr: ""
May 16 17:15:36.066: INFO: stdout: "true"
May 16 17:15:36.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 get pods update-demo-nautilus-8kxwx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
May 16 17:15:36.129: INFO: stderr: ""
May 16 17:15:36.129: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
May 16 17:15:36.129: INFO: validating pod update-demo-nautilus-8kxwx
May 16 17:15:36.137: INFO: got data: {
  "image": "nautilus.jpg"
}

May 16 17:15:36.137: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
May 16 17:15:36.137: INFO: update-demo-nautilus-8kxwx is verified up and running
May 16 17:15:36.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 get pods update-demo-nautilus-f9kgd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
May 16 17:15:36.201: INFO: stderr: ""
May 16 17:15:36.201: INFO: stdout: "true"
May 16 17:15:36.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 get pods update-demo-nautilus-f9kgd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
May 16 17:15:36.264: INFO: stderr: ""
May 16 17:15:36.264: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
May 16 17:15:36.264: INFO: validating pod update-demo-nautilus-f9kgd
May 16 17:15:36.272: INFO: got data: {
  "image": "nautilus.jpg"
}

May 16 17:15:36.272: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
May 16 17:15:36.272: INFO: update-demo-nautilus-f9kgd is verified up and running
STEP: using delete to clean up resources
May 16 17:15:36.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 delete --grace-period=0 --force -f -'
May 16 17:15:36.344: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
May 16 17:15:36.344: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
May 16 17:15:36.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 get rc,svc -l name=update-demo --no-headers'
May 16 17:15:36.422: INFO: stderr: "No resources found in kubectl-4061 namespace.\n"
May 16 17:15:36.422: INFO: stdout: ""
May 16 17:15:36.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4061 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
May 16 17:15:36.499: INFO: stderr: ""
May 16 17:15:36.499: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 17:15:36.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4061" for this suite.

• [SLOW TEST:11.550 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should create and stop a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":356,"completed":217,"skipped":4150,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:15:36.515: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-328
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:15:36.659: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:15:43.044: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-328" for this suite.

• [SLOW TEST:6.547 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":356,"completed":218,"skipped":4197,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:15:43.063: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-4244
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
May 16 17:15:43.209: INFO: PodSpec: initContainers in spec.initContainers
May 16 17:16:27.944: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-55ab64ee-0073-49be-9bf5-5481460d5421", GenerateName:"", Namespace:"init-container-4244", SelfLink:"", UID:"1d52b3ec-df50-40e0-b716-910d476d2d29", ResourceVersion:"31157", Generation:0, CreationTimestamp:time.Date(2022, time.May, 16, 17, 15, 43, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"209879698"}, Annotations:map[string]string{"kubernetes.io/psp":"e2e-test-privileged-psp"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.May, 16, 17, 15, 43, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001e54e70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.May, 16, 17, 15, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001e54ea0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-sscnt", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003642000), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-sscnt", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-sscnt", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.7", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-sscnt", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004531b90), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-76-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00299c310), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004531c20)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004531c40)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004531c48), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004531c4c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc001f3b420), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.May, 16, 17, 15, 43, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.May, 16, 17, 15, 43, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.May, 16, 17, 15, 43, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.May, 16, 17, 15, 43, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.76.3", PodIP:"192.168.238.160", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.238.160"}}, StartTime:time.Date(2022, time.May, 16, 17, 15, 43, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00299c3f0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00299c460)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"containerd://d2ca893a4de15ac9a6ff337a37af3549d60a8ca92f3e48682995e84bdcbadd97", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003642080), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003642060), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.7", ImageID:"", ContainerID:"", Started:(*bool)(0xc004531ccf)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
May 16 17:16:27.945: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-4244" for this suite.

• [SLOW TEST:44.905 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":356,"completed":219,"skipped":4251,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:16:27.968: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6022
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 17:16:28.121: INFO: Waiting up to 5m0s for pod "downwardapi-volume-75772dce-c02a-485a-bc61-665487cc7d9a" in namespace "projected-6022" to be "Succeeded or Failed"
May 16 17:16:28.126: INFO: Pod "downwardapi-volume-75772dce-c02a-485a-bc61-665487cc7d9a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.531079ms
May 16 17:16:30.134: INFO: Pod "downwardapi-volume-75772dce-c02a-485a-bc61-665487cc7d9a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01332863s
May 16 17:16:32.145: INFO: Pod "downwardapi-volume-75772dce-c02a-485a-bc61-665487cc7d9a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023686392s
STEP: Saw pod success
May 16 17:16:32.145: INFO: Pod "downwardapi-volume-75772dce-c02a-485a-bc61-665487cc7d9a" satisfied condition "Succeeded or Failed"
May 16 17:16:32.149: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-75772dce-c02a-485a-bc61-665487cc7d9a container client-container: <nil>
STEP: delete the pod
May 16 17:16:32.192: INFO: Waiting for pod downwardapi-volume-75772dce-c02a-485a-bc61-665487cc7d9a to disappear
May 16 17:16:32.196: INFO: Pod downwardapi-volume-75772dce-c02a-485a-bc61-665487cc7d9a no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
May 16 17:16:32.196: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6022" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":220,"skipped":4256,"failed":0}
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:16:32.214: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-998
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
May 16 17:16:32.372: INFO: Waiting up to 5m0s for pod "pod-05bd8e99-27ae-4455-8550-27c9a2dbfcd3" in namespace "emptydir-998" to be "Succeeded or Failed"
May 16 17:16:32.377: INFO: Pod "pod-05bd8e99-27ae-4455-8550-27c9a2dbfcd3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.300254ms
May 16 17:16:34.387: INFO: Pod "pod-05bd8e99-27ae-4455-8550-27c9a2dbfcd3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015216165s
May 16 17:16:36.398: INFO: Pod "pod-05bd8e99-27ae-4455-8550-27c9a2dbfcd3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026415016s
STEP: Saw pod success
May 16 17:16:36.398: INFO: Pod "pod-05bd8e99-27ae-4455-8550-27c9a2dbfcd3" satisfied condition "Succeeded or Failed"
May 16 17:16:36.403: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-05bd8e99-27ae-4455-8550-27c9a2dbfcd3 container test-container: <nil>
STEP: delete the pod
May 16 17:16:36.433: INFO: Waiting for pod pod-05bd8e99-27ae-4455-8550-27c9a2dbfcd3 to disappear
May 16 17:16:36.437: INFO: Pod pod-05bd8e99-27ae-4455-8550-27c9a2dbfcd3 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 17:16:36.437: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-998" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":221,"skipped":4262,"failed":0}
S
------------------------------
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:16:36.452: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-8943
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
May 16 17:16:36.707: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-8943" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":222,"skipped":4263,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:16:36.723: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-4506
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:16:36.863: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:16:37.423: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-4506" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":356,"completed":223,"skipped":4298,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:16:37.447: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1334
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
May 16 17:16:37.609: INFO: Waiting up to 5m0s for pod "pod-dab3c0c3-b9f2-4bfb-afa7-0fe56e023245" in namespace "emptydir-1334" to be "Succeeded or Failed"
May 16 17:16:37.614: INFO: Pod "pod-dab3c0c3-b9f2-4bfb-afa7-0fe56e023245": Phase="Pending", Reason="", readiness=false. Elapsed: 5.227368ms
May 16 17:16:39.622: INFO: Pod "pod-dab3c0c3-b9f2-4bfb-afa7-0fe56e023245": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012682085s
May 16 17:16:41.632: INFO: Pod "pod-dab3c0c3-b9f2-4bfb-afa7-0fe56e023245": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022561533s
STEP: Saw pod success
May 16 17:16:41.632: INFO: Pod "pod-dab3c0c3-b9f2-4bfb-afa7-0fe56e023245" satisfied condition "Succeeded or Failed"
May 16 17:16:41.638: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-dab3c0c3-b9f2-4bfb-afa7-0fe56e023245 container test-container: <nil>
STEP: delete the pod
May 16 17:16:41.663: INFO: Waiting for pod pod-dab3c0c3-b9f2-4bfb-afa7-0fe56e023245 to disappear
May 16 17:16:41.669: INFO: Pod pod-dab3c0c3-b9f2-4bfb-afa7-0fe56e023245 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 17:16:41.669: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1334" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":224,"skipped":4325,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:16:41.685: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9101
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
May 16 17:16:41.850: INFO: Waiting up to 5m0s for pod "pod-7f1fe3be-fdab-454b-a822-60c0e800d75e" in namespace "emptydir-9101" to be "Succeeded or Failed"
May 16 17:16:41.857: INFO: Pod "pod-7f1fe3be-fdab-454b-a822-60c0e800d75e": Phase="Pending", Reason="", readiness=false. Elapsed: 7.530334ms
May 16 17:16:43.868: INFO: Pod "pod-7f1fe3be-fdab-454b-a822-60c0e800d75e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018429925s
May 16 17:16:45.876: INFO: Pod "pod-7f1fe3be-fdab-454b-a822-60c0e800d75e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02606211s
STEP: Saw pod success
May 16 17:16:45.876: INFO: Pod "pod-7f1fe3be-fdab-454b-a822-60c0e800d75e" satisfied condition "Succeeded or Failed"
May 16 17:16:45.882: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-7f1fe3be-fdab-454b-a822-60c0e800d75e container test-container: <nil>
STEP: delete the pod
May 16 17:16:45.907: INFO: Waiting for pod pod-7f1fe3be-fdab-454b-a822-60c0e800d75e to disappear
May 16 17:16:45.912: INFO: Pod pod-7f1fe3be-fdab-454b-a822-60c0e800d75e no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 17:16:45.912: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9101" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":225,"skipped":4344,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:16:45.929: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5751
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
May 16 17:16:46.110: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5751" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":356,"completed":226,"skipped":4352,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:16:46.124: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-5927
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
May 16 17:16:46.295: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
May 16 17:16:48.301: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
May 16 17:16:48.320: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
May 16 17:16:50.328: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
May 16 17:16:50.375: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
May 16 17:16:50.381: INFO: Pod pod-with-poststart-exec-hook still exists
May 16 17:16:52.382: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
May 16 17:16:52.387: INFO: Pod pod-with-poststart-exec-hook still exists
May 16 17:16:54.381: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
May 16 17:16:54.391: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
May 16 17:16:54.392: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-5927" for this suite.

• [SLOW TEST:8.283 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":356,"completed":227,"skipped":4361,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:16:54.408: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-2789
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:16:54.566: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-e4fd6643-c174-4b2b-8726-e9f9734296a4" in namespace "security-context-test-2789" to be "Succeeded or Failed"
May 16 17:16:54.572: INFO: Pod "busybox-readonly-false-e4fd6643-c174-4b2b-8726-e9f9734296a4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.170564ms
May 16 17:16:56.583: INFO: Pod "busybox-readonly-false-e4fd6643-c174-4b2b-8726-e9f9734296a4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016925584s
May 16 17:16:58.592: INFO: Pod "busybox-readonly-false-e4fd6643-c174-4b2b-8726-e9f9734296a4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025766866s
May 16 17:16:58.592: INFO: Pod "busybox-readonly-false-e4fd6643-c174-4b2b-8726-e9f9734296a4" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
May 16 17:16:58.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-2789" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":356,"completed":228,"skipped":4389,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:16:58.620: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2890
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
May 16 17:16:58.779: INFO: Waiting up to 5m0s for pod "pod-6fe8c383-3f8b-4df9-a90a-f8661bc8b669" in namespace "emptydir-2890" to be "Succeeded or Failed"
May 16 17:16:58.784: INFO: Pod "pod-6fe8c383-3f8b-4df9-a90a-f8661bc8b669": Phase="Pending", Reason="", readiness=false. Elapsed: 5.034415ms
May 16 17:17:00.795: INFO: Pod "pod-6fe8c383-3f8b-4df9-a90a-f8661bc8b669": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016798811s
May 16 17:17:02.804: INFO: Pod "pod-6fe8c383-3f8b-4df9-a90a-f8661bc8b669": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025481477s
STEP: Saw pod success
May 16 17:17:02.804: INFO: Pod "pod-6fe8c383-3f8b-4df9-a90a-f8661bc8b669" satisfied condition "Succeeded or Failed"
May 16 17:17:02.810: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-6fe8c383-3f8b-4df9-a90a-f8661bc8b669 container test-container: <nil>
STEP: delete the pod
May 16 17:17:02.840: INFO: Waiting for pod pod-6fe8c383-3f8b-4df9-a90a-f8661bc8b669 to disappear
May 16 17:17:02.844: INFO: Pod pod-6fe8c383-3f8b-4df9-a90a-f8661bc8b669 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 17:17:02.844: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2890" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":229,"skipped":4398,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:02.860: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-8494
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
May 16 17:17:03.002: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
May 16 17:17:07.394: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-8494" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":356,"completed":230,"skipped":4407,"failed":0}
SSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:07.411: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5823
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-6de64230-224e-4242-9624-64fcebb410e3
STEP: Creating a pod to test consume configMaps
May 16 17:17:07.571: INFO: Waiting up to 5m0s for pod "pod-configmaps-45e2274b-3b33-4668-aa31-b2ace9dfebb5" in namespace "configmap-5823" to be "Succeeded or Failed"
May 16 17:17:07.577: INFO: Pod "pod-configmaps-45e2274b-3b33-4668-aa31-b2ace9dfebb5": Phase="Pending", Reason="", readiness=false. Elapsed: 5.493529ms
May 16 17:17:09.585: INFO: Pod "pod-configmaps-45e2274b-3b33-4668-aa31-b2ace9dfebb5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014038496s
May 16 17:17:11.597: INFO: Pod "pod-configmaps-45e2274b-3b33-4668-aa31-b2ace9dfebb5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025563423s
STEP: Saw pod success
May 16 17:17:11.597: INFO: Pod "pod-configmaps-45e2274b-3b33-4668-aa31-b2ace9dfebb5" satisfied condition "Succeeded or Failed"
May 16 17:17:11.602: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-configmaps-45e2274b-3b33-4668-aa31-b2ace9dfebb5 container agnhost-container: <nil>
STEP: delete the pod
May 16 17:17:11.637: INFO: Waiting for pod pod-configmaps-45e2274b-3b33-4668-aa31-b2ace9dfebb5 to disappear
May 16 17:17:11.641: INFO: Pod pod-configmaps-45e2274b-3b33-4668-aa31-b2ace9dfebb5 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
May 16 17:17:11.642: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5823" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":231,"skipped":4410,"failed":0}
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:11.657: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-2593
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
May 16 17:17:11.818: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
May 16 17:17:13.828: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
May 16 17:17:13.848: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
May 16 17:17:15.857: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
May 16 17:17:15.883: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
May 16 17:17:15.889: INFO: Pod pod-with-poststart-http-hook still exists
May 16 17:17:17.889: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
May 16 17:17:17.898: INFO: Pod pod-with-poststart-http-hook still exists
May 16 17:17:19.889: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
May 16 17:17:19.899: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
May 16 17:17:19.899: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-2593" for this suite.

• [SLOW TEST:8.259 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":356,"completed":232,"skipped":4411,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:19.917: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-8798
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
May 16 17:17:20.069: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-8798" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":233,"skipped":4440,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:20.087: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-6161
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
May 16 17:17:20.263: INFO: observed Pod pod-test in namespace pods-6161 in phase Pending with labels: map[test-pod-static:true] & conditions []
May 16 17:17:20.269: INFO: observed Pod pod-test in namespace pods-6161 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:20 +0000 UTC  }]
May 16 17:17:20.290: INFO: observed Pod pod-test in namespace pods-6161 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:20 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:20 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:20 +0000 UTC  }]
May 16 17:17:22.101: INFO: Found Pod pod-test in namespace pods-6161 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:20 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:22 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:22 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:20 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
May 16 17:17:22.156: INFO: observed event type MODIFIED
May 16 17:17:24.100: INFO: observed event type MODIFIED
May 16 17:17:25.105: INFO: observed event type MODIFIED
May 16 17:17:25.117: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
May 16 17:17:25.132: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-6161" for this suite.

• [SLOW TEST:5.061 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":356,"completed":234,"skipped":4472,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:25.149: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7944
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pods
May 16 17:17:25.313: INFO: created test-pod-1
May 16 17:17:25.331: INFO: created test-pod-2
May 16 17:17:25.350: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running
May 16 17:17:25.350: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-7944' to be running and ready
May 16 17:17:25.389: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
May 16 17:17:25.389: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
May 16 17:17:25.389: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
May 16 17:17:25.389: INFO: 0 / 3 pods in namespace 'pods-7944' are running and ready (0 seconds elapsed)
May 16 17:17:25.389: INFO: expected 0 pod replicas in namespace 'pods-7944', 0 are Running and Ready.
May 16 17:17:25.389: INFO: POD         NODE            PHASE    GRACE  CONDITIONS
May 16 17:17:25.389: INFO: test-pod-1  ip-172-31-76-3  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:25 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:25 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:25 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:25 +0000 UTC  }]
May 16 17:17:25.389: INFO: test-pod-2  ip-172-31-76-3  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:25 +0000 UTC  }]
May 16 17:17:25.389: INFO: test-pod-3  ip-172-31-76-3  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-05-16 17:17:25 +0000 UTC  }]
May 16 17:17:25.389: INFO: 
May 16 17:17:27.409: INFO: 3 / 3 pods in namespace 'pods-7944' are running and ready (2 seconds elapsed)
May 16 17:17:27.409: INFO: expected 0 pod replicas in namespace 'pods-7944', 0 are Running and Ready.
STEP: waiting for all pods to be deleted
May 16 17:17:27.445: INFO: Pod quantity 3 is different from expected quantity 0
May 16 17:17:28.451: INFO: Pod quantity 3 is different from expected quantity 0
May 16 17:17:29.453: INFO: Pod quantity 3 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
May 16 17:17:30.453: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7944" for this suite.

• [SLOW TEST:5.322 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":356,"completed":235,"skipped":4527,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:30.472: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-24
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's args
May 16 17:17:30.634: INFO: Waiting up to 5m0s for pod "var-expansion-1e633e52-0411-435e-bd48-247498d3b865" in namespace "var-expansion-24" to be "Succeeded or Failed"
May 16 17:17:30.640: INFO: Pod "var-expansion-1e633e52-0411-435e-bd48-247498d3b865": Phase="Pending", Reason="", readiness=false. Elapsed: 5.572178ms
May 16 17:17:32.651: INFO: Pod "var-expansion-1e633e52-0411-435e-bd48-247498d3b865": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016553603s
May 16 17:17:34.660: INFO: Pod "var-expansion-1e633e52-0411-435e-bd48-247498d3b865": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025867042s
STEP: Saw pod success
May 16 17:17:34.660: INFO: Pod "var-expansion-1e633e52-0411-435e-bd48-247498d3b865" satisfied condition "Succeeded or Failed"
May 16 17:17:34.665: INFO: Trying to get logs from node ip-172-31-76-3 pod var-expansion-1e633e52-0411-435e-bd48-247498d3b865 container dapi-container: <nil>
STEP: delete the pod
May 16 17:17:34.797: INFO: Waiting for pod var-expansion-1e633e52-0411-435e-bd48-247498d3b865 to disappear
May 16 17:17:34.803: INFO: Pod var-expansion-1e633e52-0411-435e-bd48-247498d3b865 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
May 16 17:17:34.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-24" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":356,"completed":236,"skipped":4549,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:34.821: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-2329
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a pod template
STEP: Replace a pod template
May 16 17:17:34.995: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
May 16 17:17:34.995: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-2329" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should replace a pod template [Conformance]","total":356,"completed":237,"skipped":4562,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:35.012: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5033
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-ae628531-5bdc-46c6-8377-2393a8de4374
STEP: Creating a pod to test consume configMaps
May 16 17:17:35.179: INFO: Waiting up to 5m0s for pod "pod-configmaps-848dd575-97b7-4d0f-acb0-554e0b982dd1" in namespace "configmap-5033" to be "Succeeded or Failed"
May 16 17:17:35.184: INFO: Pod "pod-configmaps-848dd575-97b7-4d0f-acb0-554e0b982dd1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.405552ms
May 16 17:17:37.192: INFO: Pod "pod-configmaps-848dd575-97b7-4d0f-acb0-554e0b982dd1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013081405s
May 16 17:17:39.203: INFO: Pod "pod-configmaps-848dd575-97b7-4d0f-acb0-554e0b982dd1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023785042s
STEP: Saw pod success
May 16 17:17:39.203: INFO: Pod "pod-configmaps-848dd575-97b7-4d0f-acb0-554e0b982dd1" satisfied condition "Succeeded or Failed"
May 16 17:17:39.209: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-configmaps-848dd575-97b7-4d0f-acb0-554e0b982dd1 container agnhost-container: <nil>
STEP: delete the pod
May 16 17:17:39.245: INFO: Waiting for pod pod-configmaps-848dd575-97b7-4d0f-acb0-554e0b982dd1 to disappear
May 16 17:17:39.251: INFO: Pod pod-configmaps-848dd575-97b7-4d0f-acb0-554e0b982dd1 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
May 16 17:17:39.251: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5033" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":238,"skipped":4579,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:39.270: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4984
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-797ac5ca-d438-483b-b47d-dde9c1145f63
STEP: Creating a pod to test consume secrets
May 16 17:17:39.451: INFO: Waiting up to 5m0s for pod "pod-secrets-de9c838a-49f8-4b4a-ab76-24dfafdf5a6e" in namespace "secrets-4984" to be "Succeeded or Failed"
May 16 17:17:39.457: INFO: Pod "pod-secrets-de9c838a-49f8-4b4a-ab76-24dfafdf5a6e": Phase="Pending", Reason="", readiness=false. Elapsed: 5.451099ms
May 16 17:17:41.466: INFO: Pod "pod-secrets-de9c838a-49f8-4b4a-ab76-24dfafdf5a6e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014574452s
May 16 17:17:43.479: INFO: Pod "pod-secrets-de9c838a-49f8-4b4a-ab76-24dfafdf5a6e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027022744s
STEP: Saw pod success
May 16 17:17:43.479: INFO: Pod "pod-secrets-de9c838a-49f8-4b4a-ab76-24dfafdf5a6e" satisfied condition "Succeeded or Failed"
May 16 17:17:43.486: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-secrets-de9c838a-49f8-4b4a-ab76-24dfafdf5a6e container secret-volume-test: <nil>
STEP: delete the pod
May 16 17:17:43.517: INFO: Waiting for pod pod-secrets-de9c838a-49f8-4b4a-ab76-24dfafdf5a6e to disappear
May 16 17:17:43.523: INFO: Pod pod-secrets-de9c838a-49f8-4b4a-ab76-24dfafdf5a6e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
May 16 17:17:43.523: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4984" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":239,"skipped":4594,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:43.542: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-1752
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
May 16 17:17:43.738: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1752  2b153aa8-e3b4-4edb-b054-462d68bbea04 32043 0 2022-05-16 17:17:43 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-05-16 17:17:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 17:17:43.738: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1752  2b153aa8-e3b4-4edb-b054-462d68bbea04 32044 0 2022-05-16 17:17:43 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-05-16 17:17:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
May 16 17:17:43.738: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-1752" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":356,"completed":240,"skipped":4611,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:43.765: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8507
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Starting the proxy
May 16 17:17:43.908: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-8507 proxy --unix-socket=/tmp/kubectl-proxy-unix4147559887/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 17:17:43.949: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8507" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":356,"completed":241,"skipped":4654,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:43.967: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename aggregator
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in aggregator-5082
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:79
May 16 17:17:44.119: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the sample API server.
May 16 17:17:44.984: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
May 16 17:17:47.074: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 17, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
May 16 17:17:49.082: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 17, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
May 16 17:17:51.084: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 17, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
May 16 17:17:53.083: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 17, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
May 16 17:17:55.082: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 17, 45, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 17, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
May 16 17:17:57.626: INFO: Waited 529.589106ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
May 16 17:17:57.707: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:69
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:188
May 16 17:17:58.111: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-5082" for this suite.

• [SLOW TEST:14.248 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":356,"completed":242,"skipped":4676,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:17:58.216: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-6995
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-6995
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-6995
May 16 17:17:58.391: INFO: Found 0 stateful pods, waiting for 1
May 16 17:18:08.399: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
May 16 17:18:08.428: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
May 16 17:18:08.441: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
May 16 17:18:08.444: INFO: Observed &StatefulSet event: ADDED
May 16 17:18:08.444: INFO: Found Statefulset ss in namespace statefulset-6995 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
May 16 17:18:08.444: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
May 16 17:18:08.444: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
May 16 17:18:08.453: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
May 16 17:18:08.455: INFO: Observed &StatefulSet event: ADDED
May 16 17:18:08.455: INFO: Observed Statefulset ss in namespace statefulset-6995 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
May 16 17:18:08.455: INFO: Observed &StatefulSet event: MODIFIED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
May 16 17:18:08.456: INFO: Deleting all statefulset in ns statefulset-6995
May 16 17:18:08.460: INFO: Scaling statefulset ss to 0
May 16 17:18:18.506: INFO: Waiting for statefulset status.replicas updated to 0
May 16 17:18:18.512: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
May 16 17:18:18.537: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-6995" for this suite.

• [SLOW TEST:20.340 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":356,"completed":243,"skipped":4688,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:18:18.556: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-4993
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:18:18.703: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-4993" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":356,"completed":244,"skipped":4698,"failed":0}
SSSSSS
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:18:18.719: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2416
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:18:18.881: INFO: The status of Pod server-envvars-7b6f6c33-362a-433b-bfce-909475d931f0 is Pending, waiting for it to be Running (with Ready = true)
May 16 17:18:20.892: INFO: The status of Pod server-envvars-7b6f6c33-362a-433b-bfce-909475d931f0 is Running (Ready = true)
May 16 17:18:20.925: INFO: Waiting up to 5m0s for pod "client-envvars-1fb5b406-ccbc-473b-a8e8-c23fd9dd9982" in namespace "pods-2416" to be "Succeeded or Failed"
May 16 17:18:20.937: INFO: Pod "client-envvars-1fb5b406-ccbc-473b-a8e8-c23fd9dd9982": Phase="Pending", Reason="", readiness=false. Elapsed: 12.350515ms
May 16 17:18:22.946: INFO: Pod "client-envvars-1fb5b406-ccbc-473b-a8e8-c23fd9dd9982": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021057283s
May 16 17:18:24.956: INFO: Pod "client-envvars-1fb5b406-ccbc-473b-a8e8-c23fd9dd9982": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030864306s
STEP: Saw pod success
May 16 17:18:24.956: INFO: Pod "client-envvars-1fb5b406-ccbc-473b-a8e8-c23fd9dd9982" satisfied condition "Succeeded or Failed"
May 16 17:18:24.962: INFO: Trying to get logs from node ip-172-31-76-3 pod client-envvars-1fb5b406-ccbc-473b-a8e8-c23fd9dd9982 container env3cont: <nil>
STEP: delete the pod
May 16 17:18:24.992: INFO: Waiting for pod client-envvars-1fb5b406-ccbc-473b-a8e8-c23fd9dd9982 to disappear
May 16 17:18:24.997: INFO: Pod client-envvars-1fb5b406-ccbc-473b-a8e8-c23fd9dd9982 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
May 16 17:18:24.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2416" for this suite.

• [SLOW TEST:6.295 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":356,"completed":245,"skipped":4704,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:18:25.014: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5341
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Pod
STEP: Reading file content from the nginx-container
May 16 17:18:27.202: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-5341 PodName:pod-sharedvolume-649b5460-f29e-4188-a7b8-954eb940a9ff ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:18:27.202: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:18:27.203: INFO: ExecWithOptions: Clientset creation
May 16 17:18:27.203: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-5341/pods/pod-sharedvolume-649b5460-f29e-4188-a7b8-954eb940a9ff/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
May 16 17:18:27.288: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 17:18:27.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5341" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":356,"completed":246,"skipped":4785,"failed":0}
SSSSS
------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:18:27.305: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-8538
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
May 16 17:18:27.484: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
May 16 17:18:27.491: INFO: starting watch
STEP: patching
STEP: updating
May 16 17:18:27.512: INFO: waiting for watch events with expected annotations
May 16 17:18:27.512: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
May 16 17:18:27.555: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-8538" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":356,"completed":247,"skipped":4790,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:18:27.570: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename ingress
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingress-136
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
May 16 17:18:27.753: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
May 16 17:18:27.760: INFO: starting watch
STEP: patching
STEP: updating
May 16 17:18:27.857: INFO: waiting for watch events with expected annotations
May 16 17:18:27.857: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:188
May 16 17:18:27.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-136" for this suite.
•{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":356,"completed":248,"skipped":4822,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:18:27.962: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-7785
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
May 16 17:18:28.119: INFO: created test-event-1
May 16 17:18:28.125: INFO: created test-event-2
May 16 17:18:28.132: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
May 16 17:18:28.138: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
May 16 17:18:28.178: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
May 16 17:18:28.184: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-7785" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":356,"completed":249,"skipped":4833,"failed":0}

------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:18:28.199: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-3999
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:18:28.342: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
May 16 17:18:28.359: INFO: Pod name sample-pod: Found 0 pods out of 1
May 16 17:18:33.367: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
May 16 17:18:33.367: INFO: Creating deployment "test-rolling-update-deployment"
May 16 17:18:33.375: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
May 16 17:18:33.390: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
May 16 17:18:35.404: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
May 16 17:18:35.410: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
May 16 17:18:35.426: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-3999  106eeddb-5293-435c-ad27-4f582bc2052d 32625 1 2022-05-16 17:18:33 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2022-05-16 17:18:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:18:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.36 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004a9b358 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-05-16 17:18:33 +0000 UTC,LastTransitionTime:2022-05-16 17:18:33 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-5579c56cf8" has successfully progressed.,LastUpdateTime:2022-05-16 17:18:35 +0000 UTC,LastTransitionTime:2022-05-16 17:18:33 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

May 16 17:18:35.431: INFO: New ReplicaSet "test-rolling-update-deployment-5579c56cf8" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-5579c56cf8  deployment-3999  ccbf0de7-2489-48fd-8304-7e42de791b28 32615 1 2022-05-16 17:18:33 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:5579c56cf8] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 106eeddb-5293-435c-ad27-4f582bc2052d 0xc00390b887 0xc00390b888}] []  [{kube-controller-manager Update apps/v1 2022-05-16 17:18:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"106eeddb-5293-435c-ad27-4f582bc2052d\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:18:35 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 5579c56cf8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:5579c56cf8] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.36 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00390b938 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
May 16 17:18:35.431: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
May 16 17:18:35.431: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-3999  4f5ce4dd-b612-4c6f-a9bd-789fc6645444 32624 2 2022-05-16 17:18:28 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 106eeddb-5293-435c-ad27-4f582bc2052d 0xc00390b757 0xc00390b758}] []  [{e2e.test Update apps/v1 2022-05-16 17:18:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:18:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"106eeddb-5293-435c-ad27-4f582bc2052d\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:18:35 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00390b818 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
May 16 17:18:35.437: INFO: Pod "test-rolling-update-deployment-5579c56cf8-mfk2p" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-5579c56cf8-mfk2p test-rolling-update-deployment-5579c56cf8- deployment-3999  37f15a42-c4a4-4e36-be7b-ef2e8963845d 32614 0 2022-05-16 17:18:33 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:5579c56cf8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rolling-update-deployment-5579c56cf8 ccbf0de7-2489-48fd-8304-7e42de791b28 0xc004a9b6f7 0xc004a9b6f8}] []  [{kube-controller-manager Update v1 2022-05-16 17:18:33 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ccbf0de7-2489-48fd-8304-7e42de791b28\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 17:18:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.137\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-khk2p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.36,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-khk2p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:18:33 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:18:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:18:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:18:33 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:192.168.238.137,StartTime:2022-05-16 17:18:33 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 17:18:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.36,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:f5241226198f5a54d22540acf2b3933ea0f49458f90c51fc75833d0c428687b8,ContainerID:containerd://4e791765046196c201baf1a680069a3fee84b1f1c8a0d8511eae56656387cb7a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.238.137,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
May 16 17:18:35.437: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-3999" for this suite.

• [SLOW TEST:7.262 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":250,"skipped":4833,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:18:35.462: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-8548
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-8548
STEP: creating a selector
STEP: Creating the service pods in kubernetes
May 16 17:18:35.603: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
May 16 17:18:35.659: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
May 16 17:18:37.670: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 17:18:39.668: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 17:18:41.667: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 17:18:43.671: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 17:18:45.667: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 17:18:47.670: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 17:18:49.666: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 17:18:51.671: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 17:18:53.669: INFO: The status of Pod netserver-0 is Running (Ready = false)
May 16 17:18:55.666: INFO: The status of Pod netserver-0 is Running (Ready = true)
May 16 17:18:55.680: INFO: The status of Pod netserver-1 is Running (Ready = true)
May 16 17:18:55.689: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
May 16 17:18:57.724: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
May 16 17:18:57.724: INFO: Breadth first check of 192.168.46.72 on host 172.31.10.138...
May 16 17:18:57.730: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.238.132:9080/dial?request=hostname&protocol=udp&host=192.168.46.72&port=8081&tries=1'] Namespace:pod-network-test-8548 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:18:57.730: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:18:57.730: INFO: ExecWithOptions: Clientset creation
May 16 17:18:57.730: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8548/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.238.132%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.46.72%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
May 16 17:18:57.823: INFO: Waiting for responses: map[]
May 16 17:18:57.823: INFO: reached 192.168.46.72 after 0/1 tries
May 16 17:18:57.823: INFO: Breadth first check of 192.168.49.199 on host 172.31.36.36...
May 16 17:18:57.828: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.238.132:9080/dial?request=hostname&protocol=udp&host=192.168.49.199&port=8081&tries=1'] Namespace:pod-network-test-8548 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:18:57.828: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:18:57.829: INFO: ExecWithOptions: Clientset creation
May 16 17:18:57.829: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8548/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.238.132%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.49.199%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
May 16 17:18:57.918: INFO: Waiting for responses: map[]
May 16 17:18:57.918: INFO: reached 192.168.49.199 after 0/1 tries
May 16 17:18:57.918: INFO: Breadth first check of 192.168.238.180 on host 172.31.76.3...
May 16 17:18:57.924: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.238.132:9080/dial?request=hostname&protocol=udp&host=192.168.238.180&port=8081&tries=1'] Namespace:pod-network-test-8548 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:18:57.924: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:18:57.925: INFO: ExecWithOptions: Clientset creation
May 16 17:18:57.925: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8548/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.238.132%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.238.180%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
May 16 17:18:58.011: INFO: Waiting for responses: map[]
May 16 17:18:58.011: INFO: reached 192.168.238.180 after 0/1 tries
May 16 17:18:58.011: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
May 16 17:18:58.011: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-8548" for this suite.

• [SLOW TEST:22.568 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":356,"completed":251,"skipped":4874,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:18:58.030: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-55
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
May 16 17:18:58.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-55" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":356,"completed":252,"skipped":4904,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:18:58.238: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3112
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-cf49bc6a-9a42-420a-9e27-e1a9fc030839
STEP: Creating a pod to test consume configMaps
May 16 17:18:58.399: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-548f31b7-2ae0-4cb2-a9e3-e10f56fe3673" in namespace "projected-3112" to be "Succeeded or Failed"
May 16 17:18:58.405: INFO: Pod "pod-projected-configmaps-548f31b7-2ae0-4cb2-a9e3-e10f56fe3673": Phase="Pending", Reason="", readiness=false. Elapsed: 5.914232ms
May 16 17:19:00.412: INFO: Pod "pod-projected-configmaps-548f31b7-2ae0-4cb2-a9e3-e10f56fe3673": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013160824s
May 16 17:19:02.424: INFO: Pod "pod-projected-configmaps-548f31b7-2ae0-4cb2-a9e3-e10f56fe3673": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025231878s
STEP: Saw pod success
May 16 17:19:02.424: INFO: Pod "pod-projected-configmaps-548f31b7-2ae0-4cb2-a9e3-e10f56fe3673" satisfied condition "Succeeded or Failed"
May 16 17:19:02.429: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-projected-configmaps-548f31b7-2ae0-4cb2-a9e3-e10f56fe3673 container agnhost-container: <nil>
STEP: delete the pod
May 16 17:19:02.466: INFO: Waiting for pod pod-projected-configmaps-548f31b7-2ae0-4cb2-a9e3-e10f56fe3673 to disappear
May 16 17:19:02.471: INFO: Pod pod-projected-configmaps-548f31b7-2ae0-4cb2-a9e3-e10f56fe3673 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
May 16 17:19:02.471: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3112" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":253,"skipped":4913,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:02.488: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5194
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 17:19:02.859: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 17:19:05.900: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:19:05.952: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5194" for this suite.
STEP: Destroying namespace "webhook-5194-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":356,"completed":254,"skipped":4925,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:06.070: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-6190
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
May 16 17:19:10.263: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-6190" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":255,"skipped":4943,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:10.281: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8814
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a collection of services
May 16 17:19:10.422: INFO: Creating e2e-svc-a-xmlc5
May 16 17:19:10.439: INFO: Creating e2e-svc-b-8cf29
May 16 17:19:10.456: INFO: Creating e2e-svc-c-hdlz5
STEP: deleting service collection
May 16 17:19:10.529: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 17:19:10.529: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8814" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760
•{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":356,"completed":256,"skipped":4976,"failed":0}

------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:10.544: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-8301
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
May 16 17:19:12.771: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
May 16 17:19:14.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-8301" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":356,"completed":257,"skipped":4976,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:14.814: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4935
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
May 16 17:19:17.000: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
May 16 17:19:19.067: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4935" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":356,"completed":258,"skipped":4998,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:19.089: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-3917
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
May 16 17:19:19.226: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
May 16 17:19:19.239: INFO: Waiting for terminating namespaces to be deleted...
May 16 17:19:19.244: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-10-138 before test
May 16 17:19:19.252: INFO: default-http-backend-kubernetes-worker-6c59687bf6-bxc6r from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.252: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
May 16 17:19:19.252: INFO: nginx-ingress-controller-kubernetes-worker-4x6kn from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.252: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
May 16 17:19:19.252: INFO: coredns-86c98bfcdb-xnh2b from kube-system started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.252: INFO: 	Container coredns ready: true, restart count 0
May 16 17:19:19.252: INFO: kube-state-metrics-5cdbfd47b4-dbz9m from kube-system started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.252: INFO: 	Container kube-state-metrics ready: true, restart count 0
May 16 17:19:19.252: INFO: metrics-server-v0.5.2-6bfd958b56-t6s8k from kube-system started at 2022-05-16 15:58:42 +0000 UTC (2 container statuses recorded)
May 16 17:19:19.252: INFO: 	Container metrics-server ready: true, restart count 0
May 16 17:19:19.252: INFO: 	Container metrics-server-nanny ready: true, restart count 0
May 16 17:19:19.252: INFO: dashboard-metrics-scraper-8669b59d4f-z7nkc from kubernetes-dashboard started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.252: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
May 16 17:19:19.252: INFO: kubernetes-dashboard-585fc6bc87-gx2d4 from kubernetes-dashboard started at 2022-05-16 15:58:42 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.252: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
May 16 17:19:19.252: INFO: sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-tklm5 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 17:19:19.252: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 17:19:19.252: INFO: 	Container systemd-logs ready: true, restart count 0
May 16 17:19:19.252: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-36-36 before test
May 16 17:19:19.260: INFO: pod-2 from disruption-8301 started at 2022-05-16 17:19:12 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.260: INFO: 	Container donothing ready: true, restart count 0
May 16 17:19:19.260: INFO: nginx-ingress-controller-kubernetes-worker-pbnpt from ingress-nginx-kubernetes-worker started at 2022-05-16 15:58:44 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.260: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
May 16 17:19:19.260: INFO: calico-kube-controllers-5976989dd9-ckg7k from kube-system started at 2022-05-16 15:58:46 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.260: INFO: 	Container calico-kube-controllers ready: true, restart count 0
May 16 17:19:19.260: INFO: sonobuoy-e2e-job-93ccb66985024e88 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 17:19:19.260: INFO: 	Container e2e ready: true, restart count 0
May 16 17:19:19.260: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 17:19:19.260: INFO: sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-sj7x5 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 17:19:19.260: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 17:19:19.260: INFO: 	Container systemd-logs ready: true, restart count 0
May 16 17:19:19.260: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-76-3 before test
May 16 17:19:19.276: INFO: pod-0 from disruption-4935 started at 2022-05-16 17:19:17 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.276: INFO: 	Container donothing ready: true, restart count 0
May 16 17:19:19.276: INFO: pod-0 from disruption-8301 started at 2022-05-16 17:19:12 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.276: INFO: 	Container donothing ready: true, restart count 0
May 16 17:19:19.276: INFO: pod-1 from disruption-8301 started at 2022-05-16 17:19:12 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.276: INFO: 	Container donothing ready: true, restart count 0
May 16 17:19:19.276: INFO: nginx-ingress-controller-kubernetes-worker-jctxv from ingress-nginx-kubernetes-worker started at 2022-05-16 17:13:40 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.276: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
May 16 17:19:19.276: INFO: sonobuoy from sonobuoy started at 2022-05-16 16:12:03 +0000 UTC (1 container statuses recorded)
May 16 17:19:19.276: INFO: 	Container kube-sonobuoy ready: true, restart count 0
May 16 17:19:19.276: INFO: sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-zvgk8 from sonobuoy started at 2022-05-16 16:12:06 +0000 UTC (2 container statuses recorded)
May 16 17:19:19.276: INFO: 	Container sonobuoy-worker ready: true, restart count 0
May 16 17:19:19.276: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
STEP: verifying the node has the label node ip-172-31-10-138
STEP: verifying the node has the label node ip-172-31-36-36
STEP: verifying the node has the label node ip-172-31-76-3
May 16 17:19:19.370: INFO: Pod pod-0 requesting resource cpu=0m on Node ip-172-31-76-3
May 16 17:19:19.370: INFO: Pod pod-0 requesting resource cpu=0m on Node ip-172-31-76-3
May 16 17:19:19.370: INFO: Pod pod-1 requesting resource cpu=0m on Node ip-172-31-76-3
May 16 17:19:19.370: INFO: Pod pod-2 requesting resource cpu=0m on Node ip-172-31-36-36
May 16 17:19:19.370: INFO: Pod default-http-backend-kubernetes-worker-6c59687bf6-bxc6r requesting resource cpu=10m on Node ip-172-31-10-138
May 16 17:19:19.370: INFO: Pod nginx-ingress-controller-kubernetes-worker-4x6kn requesting resource cpu=0m on Node ip-172-31-10-138
May 16 17:19:19.370: INFO: Pod nginx-ingress-controller-kubernetes-worker-jctxv requesting resource cpu=0m on Node ip-172-31-76-3
May 16 17:19:19.370: INFO: Pod nginx-ingress-controller-kubernetes-worker-pbnpt requesting resource cpu=0m on Node ip-172-31-36-36
May 16 17:19:19.370: INFO: Pod calico-kube-controllers-5976989dd9-ckg7k requesting resource cpu=0m on Node ip-172-31-36-36
May 16 17:19:19.370: INFO: Pod coredns-86c98bfcdb-xnh2b requesting resource cpu=100m on Node ip-172-31-10-138
May 16 17:19:19.370: INFO: Pod kube-state-metrics-5cdbfd47b4-dbz9m requesting resource cpu=0m on Node ip-172-31-10-138
May 16 17:19:19.370: INFO: Pod metrics-server-v0.5.2-6bfd958b56-t6s8k requesting resource cpu=5m on Node ip-172-31-10-138
May 16 17:19:19.370: INFO: Pod dashboard-metrics-scraper-8669b59d4f-z7nkc requesting resource cpu=0m on Node ip-172-31-10-138
May 16 17:19:19.370: INFO: Pod kubernetes-dashboard-585fc6bc87-gx2d4 requesting resource cpu=0m on Node ip-172-31-10-138
May 16 17:19:19.370: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-76-3
May 16 17:19:19.370: INFO: Pod sonobuoy-e2e-job-93ccb66985024e88 requesting resource cpu=0m on Node ip-172-31-36-36
May 16 17:19:19.370: INFO: Pod sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-sj7x5 requesting resource cpu=0m on Node ip-172-31-36-36
May 16 17:19:19.370: INFO: Pod sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-tklm5 requesting resource cpu=0m on Node ip-172-31-10-138
May 16 17:19:19.370: INFO: Pod sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-zvgk8 requesting resource cpu=0m on Node ip-172-31-76-3
STEP: Starting Pods to consume most of the cluster CPU.
May 16 17:19:19.370: INFO: Creating a pod which consumes cpu=1319m on Node ip-172-31-10-138
May 16 17:19:19.392: INFO: Creating a pod which consumes cpu=1400m on Node ip-172-31-36-36
May 16 17:19:19.404: INFO: Creating a pod which consumes cpu=1400m on Node ip-172-31-76-3
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-4094d9db-1f6e-4f19-9902-e890804a6feb.16efa5807552fe35], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3917/filler-pod-4094d9db-1f6e-4f19-9902-e890804a6feb to ip-172-31-10-138]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-4094d9db-1f6e-4f19-9902-e890804a6feb.16efa580a00102ac], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-4094d9db-1f6e-4f19-9902-e890804a6feb.16efa580a48e7af7], Reason = [Created], Message = [Created container filler-pod-4094d9db-1f6e-4f19-9902-e890804a6feb]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-4094d9db-1f6e-4f19-9902-e890804a6feb.16efa580a8b251d1], Reason = [Started], Message = [Started container filler-pod-4094d9db-1f6e-4f19-9902-e890804a6feb]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-6f722909-4d52-449a-aaa6-4804eb10faa2.16efa5807644e013], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3917/filler-pod-6f722909-4d52-449a-aaa6-4804eb10faa2 to ip-172-31-36-36]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-6f722909-4d52-449a-aaa6-4804eb10faa2.16efa5809dcfd14e], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-6f722909-4d52-449a-aaa6-4804eb10faa2.16efa580a12b0ed0], Reason = [Created], Message = [Created container filler-pod-6f722909-4d52-449a-aaa6-4804eb10faa2]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-6f722909-4d52-449a-aaa6-4804eb10faa2.16efa580a4e147dd], Reason = [Started], Message = [Started container filler-pod-6f722909-4d52-449a-aaa6-4804eb10faa2]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-c585dce4-9467-4c64-bee3-85fcaad20801.16efa58076cff0e4], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3917/filler-pod-c585dce4-9467-4c64-bee3-85fcaad20801 to ip-172-31-76-3]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-c585dce4-9467-4c64-bee3-85fcaad20801.16efa5809f07c376], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-c585dce4-9467-4c64-bee3-85fcaad20801.16efa580a2255a85], Reason = [Created], Message = [Created container filler-pod-c585dce4-9467-4c64-bee3-85fcaad20801]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-c585dce4-9467-4c64-bee3-85fcaad20801.16efa580a6047586], Reason = [Started], Message = [Started container filler-pod-c585dce4-9467-4c64-bee3-85fcaad20801]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.16efa580f190ad79], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {juju.is/kubernetes-control-plane: true}, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.]
STEP: removing the label node off the node ip-172-31-10-138
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node ip-172-31-36-36
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node ip-172-31-76-3
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
May 16 17:19:22.569: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-3917" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":356,"completed":259,"skipped":5017,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:22.586: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1917
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-0bcfa779-35c4-45be-8ea1-53a95e63d99b
STEP: Creating a pod to test consume secrets
May 16 17:19:22.741: INFO: Waiting up to 5m0s for pod "pod-secrets-b4179855-1708-43e3-b8a9-6f73510db171" in namespace "secrets-1917" to be "Succeeded or Failed"
May 16 17:19:22.747: INFO: Pod "pod-secrets-b4179855-1708-43e3-b8a9-6f73510db171": Phase="Pending", Reason="", readiness=false. Elapsed: 5.576782ms
May 16 17:19:24.754: INFO: Pod "pod-secrets-b4179855-1708-43e3-b8a9-6f73510db171": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013041896s
May 16 17:19:26.762: INFO: Pod "pod-secrets-b4179855-1708-43e3-b8a9-6f73510db171": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021271558s
STEP: Saw pod success
May 16 17:19:26.762: INFO: Pod "pod-secrets-b4179855-1708-43e3-b8a9-6f73510db171" satisfied condition "Succeeded or Failed"
May 16 17:19:26.768: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-secrets-b4179855-1708-43e3-b8a9-6f73510db171 container secret-volume-test: <nil>
STEP: delete the pod
May 16 17:19:26.797: INFO: Waiting for pod pod-secrets-b4179855-1708-43e3-b8a9-6f73510db171 to disappear
May 16 17:19:26.803: INFO: Pod pod-secrets-b4179855-1708-43e3-b8a9-6f73510db171 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
May 16 17:19:26.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1917" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":260,"skipped":5033,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:26.820: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7047
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
May 16 17:19:33.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7047" for this suite.

• [SLOW TEST:7.181 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":356,"completed":261,"skipped":5040,"failed":0}
SSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:34.001: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-7126
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating cluster-info
May 16 17:19:34.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7126 cluster-info'
May 16 17:19:34.210: INFO: stderr: ""
May 16 17:19:34.210: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 17:19:34.210: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7126" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":356,"completed":262,"skipped":5043,"failed":0}
SS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:34.234: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2413
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-67dd7be1-0d44-4b7c-8e89-d417f8707a20
STEP: Creating a pod to test consume configMaps
May 16 17:19:34.399: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-6a123951-88be-4165-a71e-d2825e8be67c" in namespace "projected-2413" to be "Succeeded or Failed"
May 16 17:19:34.405: INFO: Pod "pod-projected-configmaps-6a123951-88be-4165-a71e-d2825e8be67c": Phase="Pending", Reason="", readiness=false. Elapsed: 5.70563ms
May 16 17:19:36.411: INFO: Pod "pod-projected-configmaps-6a123951-88be-4165-a71e-d2825e8be67c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012634739s
May 16 17:19:38.421: INFO: Pod "pod-projected-configmaps-6a123951-88be-4165-a71e-d2825e8be67c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02184582s
STEP: Saw pod success
May 16 17:19:38.421: INFO: Pod "pod-projected-configmaps-6a123951-88be-4165-a71e-d2825e8be67c" satisfied condition "Succeeded or Failed"
May 16 17:19:38.427: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-projected-configmaps-6a123951-88be-4165-a71e-d2825e8be67c container agnhost-container: <nil>
STEP: delete the pod
May 16 17:19:38.456: INFO: Waiting for pod pod-projected-configmaps-6a123951-88be-4165-a71e-d2825e8be67c to disappear
May 16 17:19:38.461: INFO: Pod pod-projected-configmaps-6a123951-88be-4165-a71e-d2825e8be67c no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
May 16 17:19:38.461: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2413" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":263,"skipped":5045,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:38.477: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-116
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nspatchtest-1a6f4c97-e4ce-4d92-8896-983dab0ebacb-8910
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
May 16 17:19:38.772: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-116" for this suite.
STEP: Destroying namespace "nspatchtest-1a6f4c97-e4ce-4d92-8896-983dab0ebacb-8910" for this suite.
•{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":356,"completed":264,"skipped":5053,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:38.798: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-2589
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
May 16 17:19:38.956: INFO: Pod name sample-pod: Found 0 pods out of 1
May 16 17:19:43.971: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
May 16 17:19:44.024: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-2589" for this suite.

• [SLOW TEST:5.269 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":356,"completed":265,"skipped":5074,"failed":0}
SSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:19:44.067: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-7827
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
May 16 17:19:44.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 create -f -'
May 16 17:19:45.245: INFO: stderr: ""
May 16 17:19:45.245: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
May 16 17:19:45.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
May 16 17:19:45.379: INFO: stderr: ""
May 16 17:19:45.379: INFO: stdout: "update-demo-nautilus-nvhmp update-demo-nautilus-twrlk "
May 16 17:19:45.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods update-demo-nautilus-nvhmp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
May 16 17:19:45.440: INFO: stderr: ""
May 16 17:19:45.440: INFO: stdout: ""
May 16 17:19:45.440: INFO: update-demo-nautilus-nvhmp is created but not running
May 16 17:19:50.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
May 16 17:19:50.507: INFO: stderr: ""
May 16 17:19:50.507: INFO: stdout: "update-demo-nautilus-nvhmp update-demo-nautilus-twrlk "
May 16 17:19:50.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods update-demo-nautilus-nvhmp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
May 16 17:19:50.577: INFO: stderr: ""
May 16 17:19:50.577: INFO: stdout: "true"
May 16 17:19:50.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods update-demo-nautilus-nvhmp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
May 16 17:19:50.639: INFO: stderr: ""
May 16 17:19:50.639: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
May 16 17:19:50.639: INFO: validating pod update-demo-nautilus-nvhmp
May 16 17:19:50.646: INFO: got data: {
  "image": "nautilus.jpg"
}

May 16 17:19:50.646: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
May 16 17:19:50.646: INFO: update-demo-nautilus-nvhmp is verified up and running
May 16 17:19:50.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods update-demo-nautilus-twrlk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
May 16 17:19:50.709: INFO: stderr: ""
May 16 17:19:50.709: INFO: stdout: "true"
May 16 17:19:50.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods update-demo-nautilus-twrlk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
May 16 17:19:50.772: INFO: stderr: ""
May 16 17:19:50.772: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
May 16 17:19:50.772: INFO: validating pod update-demo-nautilus-twrlk
May 16 17:19:50.780: INFO: got data: {
  "image": "nautilus.jpg"
}

May 16 17:19:50.780: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
May 16 17:19:50.780: INFO: update-demo-nautilus-twrlk is verified up and running
STEP: scaling down the replication controller
May 16 17:19:50.782: INFO: scanned /root for discovery docs: <nil>
May 16 17:19:50.782: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
May 16 17:19:51.869: INFO: stderr: ""
May 16 17:19:51.869: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
May 16 17:19:51.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
May 16 17:19:51.936: INFO: stderr: ""
May 16 17:19:51.936: INFO: stdout: "update-demo-nautilus-nvhmp update-demo-nautilus-twrlk "
STEP: Replicas for name=update-demo: expected=1 actual=2
May 16 17:19:56.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
May 16 17:19:57.016: INFO: stderr: ""
May 16 17:19:57.016: INFO: stdout: "update-demo-nautilus-twrlk "
May 16 17:19:57.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods update-demo-nautilus-twrlk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
May 16 17:19:57.076: INFO: stderr: ""
May 16 17:19:57.076: INFO: stdout: "true"
May 16 17:19:57.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods update-demo-nautilus-twrlk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
May 16 17:19:57.142: INFO: stderr: ""
May 16 17:19:57.142: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
May 16 17:19:57.142: INFO: validating pod update-demo-nautilus-twrlk
May 16 17:19:57.148: INFO: got data: {
  "image": "nautilus.jpg"
}

May 16 17:19:57.148: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
May 16 17:19:57.148: INFO: update-demo-nautilus-twrlk is verified up and running
STEP: scaling up the replication controller
May 16 17:19:57.149: INFO: scanned /root for discovery docs: <nil>
May 16 17:19:57.149: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
May 16 17:19:58.237: INFO: stderr: ""
May 16 17:19:58.237: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
May 16 17:19:58.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
May 16 17:19:58.305: INFO: stderr: ""
May 16 17:19:58.305: INFO: stdout: "update-demo-nautilus-k7kg2 update-demo-nautilus-twrlk "
May 16 17:19:58.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods update-demo-nautilus-k7kg2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
May 16 17:19:58.368: INFO: stderr: ""
May 16 17:19:58.368: INFO: stdout: ""
May 16 17:19:58.368: INFO: update-demo-nautilus-k7kg2 is created but not running
May 16 17:20:03.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
May 16 17:20:03.443: INFO: stderr: ""
May 16 17:20:03.443: INFO: stdout: "update-demo-nautilus-k7kg2 update-demo-nautilus-twrlk "
May 16 17:20:03.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods update-demo-nautilus-k7kg2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
May 16 17:20:03.503: INFO: stderr: ""
May 16 17:20:03.503: INFO: stdout: "true"
May 16 17:20:03.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods update-demo-nautilus-k7kg2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
May 16 17:20:03.570: INFO: stderr: ""
May 16 17:20:03.570: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
May 16 17:20:03.570: INFO: validating pod update-demo-nautilus-k7kg2
May 16 17:20:03.579: INFO: got data: {
  "image": "nautilus.jpg"
}

May 16 17:20:03.579: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
May 16 17:20:03.579: INFO: update-demo-nautilus-k7kg2 is verified up and running
May 16 17:20:03.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods update-demo-nautilus-twrlk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
May 16 17:20:03.641: INFO: stderr: ""
May 16 17:20:03.641: INFO: stdout: "true"
May 16 17:20:03.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods update-demo-nautilus-twrlk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
May 16 17:20:03.702: INFO: stderr: ""
May 16 17:20:03.702: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
May 16 17:20:03.702: INFO: validating pod update-demo-nautilus-twrlk
May 16 17:20:03.708: INFO: got data: {
  "image": "nautilus.jpg"
}

May 16 17:20:03.708: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
May 16 17:20:03.708: INFO: update-demo-nautilus-twrlk is verified up and running
STEP: using delete to clean up resources
May 16 17:20:03.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 delete --grace-period=0 --force -f -'
May 16 17:20:03.778: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
May 16 17:20:03.778: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
May 16 17:20:03.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get rc,svc -l name=update-demo --no-headers'
May 16 17:20:03.865: INFO: stderr: "No resources found in kubectl-7827 namespace.\n"
May 16 17:20:03.865: INFO: stdout: ""
May 16 17:20:03.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-7827 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
May 16 17:20:03.942: INFO: stderr: ""
May 16 17:20:03.942: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 17:20:03.942: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7827" for this suite.

• [SLOW TEST:19.894 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should scale a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":356,"completed":266,"skipped":5078,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:20:03.961: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-106
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:20:04.108: INFO: Creating pod...
May 16 17:20:06.134: INFO: Creating service...
May 16 17:20:06.153: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/pods/agnhost/proxy?method=DELETE
May 16 17:20:06.162: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
May 16 17:20:06.162: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/pods/agnhost/proxy?method=OPTIONS
May 16 17:20:06.168: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
May 16 17:20:06.168: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/pods/agnhost/proxy?method=PATCH
May 16 17:20:06.175: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
May 16 17:20:06.175: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/pods/agnhost/proxy?method=POST
May 16 17:20:06.181: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
May 16 17:20:06.181: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/pods/agnhost/proxy?method=PUT
May 16 17:20:06.186: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
May 16 17:20:06.186: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/services/e2e-proxy-test-service/proxy?method=DELETE
May 16 17:20:06.196: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
May 16 17:20:06.196: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/services/e2e-proxy-test-service/proxy?method=OPTIONS
May 16 17:20:06.205: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
May 16 17:20:06.205: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/services/e2e-proxy-test-service/proxy?method=PATCH
May 16 17:20:06.213: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
May 16 17:20:06.213: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/services/e2e-proxy-test-service/proxy?method=POST
May 16 17:20:06.222: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
May 16 17:20:06.223: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/services/e2e-proxy-test-service/proxy?method=PUT
May 16 17:20:06.231: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
May 16 17:20:06.231: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/pods/agnhost/proxy?method=GET
May 16 17:20:06.235: INFO: http.Client request:GET StatusCode:301
May 16 17:20:06.235: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/services/e2e-proxy-test-service/proxy?method=GET
May 16 17:20:06.243: INFO: http.Client request:GET StatusCode:301
May 16 17:20:06.244: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/pods/agnhost/proxy?method=HEAD
May 16 17:20:06.249: INFO: http.Client request:HEAD StatusCode:301
May 16 17:20:06.249: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-106/services/e2e-proxy-test-service/proxy?method=HEAD
May 16 17:20:06.256: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/framework.go:188
May 16 17:20:06.256: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-106" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]","total":356,"completed":267,"skipped":5112,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:20:06.272: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename taint-single-pod
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-single-pod-3348
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:166
May 16 17:20:06.453: INFO: Waiting up to 1m0s for all nodes to be ready
May 16 17:21:06.499: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:21:06.504: INFO: Starting informer...
STEP: Starting pod...
May 16 17:21:06.728: INFO: Pod is running on ip-172-31-76-3. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
May 16 17:21:06.748: INFO: Pod wasn't evicted. Proceeding
May 16 17:21:06.748: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
May 16 17:22:21.773: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:188
May 16 17:22:21.773: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-3348" for this suite.

• [SLOW TEST:135.527 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":356,"completed":268,"skipped":5128,"failed":0}
SSSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:22:21.799: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2985
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:22:21.951: INFO: Creating simple deployment test-new-deployment
May 16 17:22:21.971: INFO: deployment "test-new-deployment" doesn't have the required revision set
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
May 16 17:22:24.056: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-2985  9e171215-7839-4c86-b6c1-d5226f699325 34081 3 2022-05-16 17:22:21 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2022-05-16 17:22:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:22:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0033b66a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-55df494869" has successfully progressed.,LastUpdateTime:2022-05-16 17:22:23 +0000 UTC,LastTransitionTime:2022-05-16 17:22:21 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-05-16 17:22:24 +0000 UTC,LastTransitionTime:2022-05-16 17:22:24 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

May 16 17:22:24.062: INFO: New ReplicaSet "test-new-deployment-55df494869" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-55df494869  deployment-2985  5d611226-0520-4201-bc4d-d6e6f0537c3d 34086 3 2022-05-16 17:22:21 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:4 deployment.kubernetes.io/max-replicas:5 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 9e171215-7839-4c86-b6c1-d5226f699325 0xc003aad8d7 0xc003aad8d8}] []  [{kube-controller-manager Update apps/v1 2022-05-16 17:22:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9e171215-7839-4c86-b6c1-d5226f699325\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:22:23 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003aad968 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
May 16 17:22:24.071: INFO: Pod "test-new-deployment-55df494869-9cmcv" is available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-9cmcv test-new-deployment-55df494869- deployment-2985  f1c4c198-ee53-43a8-9bb4-de7bc8ae2718 34073 0 2022-05-16 17:22:21 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 5d611226-0520-4201-bc4d-d6e6f0537c3d 0xc003aadd67 0xc003aadd68}] []  [{kube-controller-manager Update v1 2022-05-16 17:22:21 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5d611226-0520-4201-bc4d-d6e6f0537c3d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 17:22:23 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.175\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-q5csk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-q5csk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:22:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:22:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:22:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:22:21 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:192.168.238.175,StartTime:2022-05-16 17:22:22 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 17:22:22 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://60e08884caeabfb77952c5ddefe18ad3b07d404c07a85e9d927585ad180a0b7a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.238.175,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 17:22:24.071: INFO: Pod "test-new-deployment-55df494869-cthtl" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-cthtl test-new-deployment-55df494869- deployment-2985  c6d39db6-7a6c-4f8e-99ef-bcc3c007b8d5 34082 0 2022-05-16 17:22:24 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 5d611226-0520-4201-bc4d-d6e6f0537c3d 0xc003aadf57 0xc003aadf58}] []  [{kube-controller-manager Update v1 2022-05-16 17:22:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5d611226-0520-4201-bc4d-d6e6f0537c3d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5tff8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5tff8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-36-36,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:22:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
May 16 17:22:24.072: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2985" for this suite.
•{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":356,"completed":269,"skipped":5132,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:22:24.096: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5392
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 17:22:24.544: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 17:22:27.587: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:22:39.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5392" for this suite.
STEP: Destroying namespace "webhook-5392-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:15.801 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":356,"completed":270,"skipped":5177,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:22:39.898: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6926
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6926
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-6926
STEP: creating replication controller externalsvc in namespace services-6926
I0516 17:22:40.088369      17 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6926, replica count: 2
I0516 17:22:43.139187      17 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
May 16 17:22:43.173: INFO: Creating new exec pod
May 16 17:22:45.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-6926 exec execpodl8jhx -- /bin/sh -x -c nslookup clusterip-service.services-6926.svc.cluster.local'
May 16 17:22:45.398: INFO: stderr: "+ nslookup clusterip-service.services-6926.svc.cluster.local\n"
May 16 17:22:45.398: INFO: stdout: "Server:\t\t10.152.183.147\nAddress:\t10.152.183.147#53\n\nclusterip-service.services-6926.svc.cluster.local\tcanonical name = externalsvc.services-6926.svc.cluster.local.\nName:\texternalsvc.services-6926.svc.cluster.local\nAddress: 10.152.183.103\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-6926, will wait for the garbage collector to delete the pods
May 16 17:22:45.468: INFO: Deleting ReplicationController externalsvc took: 11.129263ms
May 16 17:22:45.569: INFO: Terminating ReplicationController externalsvc pods took: 100.888684ms
May 16 17:22:47.904: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 17:22:47.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6926" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:8.044 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":356,"completed":271,"skipped":5203,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:22:47.943: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-4554
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:22:48.104: INFO: created pod
May 16 17:22:48.104: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-4554" to be "Succeeded or Failed"
May 16 17:22:48.108: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 4.448783ms
May 16 17:22:50.117: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013419332s
May 16 17:22:52.126: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022689144s
STEP: Saw pod success
May 16 17:22:52.126: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
May 16 17:23:22.129: INFO: polling logs
May 16 17:23:22.169: INFO: Pod logs: 
I0516 17:22:48.921150       1 log.go:195] OK: Got token
I0516 17:22:48.921188       1 log.go:195] validating with in-cluster discovery
I0516 17:22:48.921860       1 log.go:195] OK: got issuer https://kubernetes.default.svc
I0516 17:22:48.921894       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4554:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1652722368, NotBefore:1652721768, IssuedAt:1652721768, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4554", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"e405468e-201c-4423-8677-19277f9b14e0"}}}
I0516 17:22:48.937124       1 log.go:195] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
I0516 17:22:48.943967       1 log.go:195] OK: Validated signature on JWT
I0516 17:22:48.944055       1 log.go:195] OK: Got valid claims from token!
I0516 17:22:48.944088       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4554:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1652722368, NotBefore:1652721768, IssuedAt:1652721768, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4554", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"e405468e-201c-4423-8677-19277f9b14e0"}}}

May 16 17:23:22.169: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
May 16 17:23:22.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-4554" for this suite.

• [SLOW TEST:34.260 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":356,"completed":272,"skipped":5221,"failed":0}
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:23:22.203: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-575
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 17:23:22.823: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 17:23:25.861: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:23:25.873: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9386-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:23:28.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-575" for this suite.
STEP: Destroying namespace "webhook-575-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.931 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":356,"completed":273,"skipped":5225,"failed":0}
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:23:29.135: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-1472
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1472.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-1472.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1472.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1472.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
May 16 17:23:31.335: INFO: DNS probes using dns-1472/dns-test-87fc2d6d-90f3-47e5-afa0-01facfd28894 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
May 16 17:23:31.355: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-1472" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]","total":356,"completed":274,"skipped":5225,"failed":0}
S
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:23:31.373: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-6753
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
May 16 17:23:47.679: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-6753" for this suite.

• [SLOW TEST:16.324 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":356,"completed":275,"skipped":5226,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:23:47.698: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5555
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-5555/configmap-test-b20fc1ce-8aa9-471a-9ac8-a8ac07dd7468
STEP: Creating a pod to test consume configMaps
May 16 17:23:47.861: INFO: Waiting up to 5m0s for pod "pod-configmaps-e44ce990-2071-4881-84d0-47c1cea07667" in namespace "configmap-5555" to be "Succeeded or Failed"
May 16 17:23:47.867: INFO: Pod "pod-configmaps-e44ce990-2071-4881-84d0-47c1cea07667": Phase="Pending", Reason="", readiness=false. Elapsed: 6.150613ms
May 16 17:23:49.875: INFO: Pod "pod-configmaps-e44ce990-2071-4881-84d0-47c1cea07667": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01404161s
May 16 17:23:51.887: INFO: Pod "pod-configmaps-e44ce990-2071-4881-84d0-47c1cea07667": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025785151s
STEP: Saw pod success
May 16 17:23:51.887: INFO: Pod "pod-configmaps-e44ce990-2071-4881-84d0-47c1cea07667" satisfied condition "Succeeded or Failed"
May 16 17:23:51.892: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-configmaps-e44ce990-2071-4881-84d0-47c1cea07667 container env-test: <nil>
STEP: delete the pod
May 16 17:23:51.923: INFO: Waiting for pod pod-configmaps-e44ce990-2071-4881-84d0-47c1cea07667 to disappear
May 16 17:23:51.928: INFO: Pod pod-configmaps-e44ce990-2071-4881-84d0-47c1cea07667 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
May 16 17:23:51.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5555" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":356,"completed":276,"skipped":5253,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:23:51.944: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7345
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7345
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:23:52.118: INFO: Found 0 stateful pods, waiting for 1
May 16 17:24:02.129: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
May 16 17:24:02.163: INFO: Found 1 stateful pods, waiting for 2
May 16 17:24:12.177: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
May 16 17:24:12.177: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
May 16 17:24:12.212: INFO: Deleting all statefulset in ns statefulset-7345
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
May 16 17:24:12.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7345" for this suite.

• [SLOW TEST:20.319 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":356,"completed":277,"skipped":5268,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:24:12.264: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7143
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 17:24:12.422: INFO: Waiting up to 5m0s for pod "downwardapi-volume-3ec2fff2-ac07-4f09-9135-ac2fe9eed263" in namespace "downward-api-7143" to be "Succeeded or Failed"
May 16 17:24:12.429: INFO: Pod "downwardapi-volume-3ec2fff2-ac07-4f09-9135-ac2fe9eed263": Phase="Pending", Reason="", readiness=false. Elapsed: 6.385322ms
May 16 17:24:14.439: INFO: Pod "downwardapi-volume-3ec2fff2-ac07-4f09-9135-ac2fe9eed263": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016161741s
May 16 17:24:16.449: INFO: Pod "downwardapi-volume-3ec2fff2-ac07-4f09-9135-ac2fe9eed263": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026065525s
STEP: Saw pod success
May 16 17:24:16.449: INFO: Pod "downwardapi-volume-3ec2fff2-ac07-4f09-9135-ac2fe9eed263" satisfied condition "Succeeded or Failed"
May 16 17:24:16.455: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-3ec2fff2-ac07-4f09-9135-ac2fe9eed263 container client-container: <nil>
STEP: delete the pod
May 16 17:24:16.496: INFO: Waiting for pod downwardapi-volume-3ec2fff2-ac07-4f09-9135-ac2fe9eed263 to disappear
May 16 17:24:16.502: INFO: Pod downwardapi-volume-3ec2fff2-ac07-4f09-9135-ac2fe9eed263 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
May 16 17:24:16.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7143" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":278,"skipped":5307,"failed":0}
S
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:24:16.517: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-4477
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:24:16.694: INFO: Create a RollingUpdate DaemonSet
May 16 17:24:16.701: INFO: Check that daemon pods launch on every node of the cluster
May 16 17:24:16.708: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:16.708: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:16.714: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:24:16.714: INFO: Node ip-172-31-10-138 is running 0 daemon pod, expected 1
May 16 17:24:17.723: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:17.723: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:17.728: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:24:17.728: INFO: Node ip-172-31-10-138 is running 0 daemon pod, expected 1
May 16 17:24:18.721: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:18.721: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:18.726: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
May 16 17:24:18.726: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
May 16 17:24:18.726: INFO: Update the DaemonSet to trigger a rollout
May 16 17:24:18.739: INFO: Updating DaemonSet daemon-set
May 16 17:24:21.774: INFO: Roll back the DaemonSet before rollout is complete
May 16 17:24:21.793: INFO: Updating DaemonSet daemon-set
May 16 17:24:21.793: INFO: Make sure DaemonSet rollback is complete
May 16 17:24:21.804: INFO: Wrong image for pod: daemon-set-h782f. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
May 16 17:24:21.804: INFO: Pod daemon-set-h782f is not available
May 16 17:24:21.810: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:21.810: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:22.826: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:22.826: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:23.817: INFO: Pod daemon-set-dq4fg is not available
May 16 17:24:23.824: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:23.824: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4477, will wait for the garbage collector to delete the pods
May 16 17:24:23.907: INFO: Deleting DaemonSet.extensions daemon-set took: 16.364278ms
May 16 17:24:24.008: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.621465ms
May 16 17:24:25.417: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:24:25.417: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
May 16 17:24:25.423: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35138"},"items":null}

May 16 17:24:25.428: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35138"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
May 16 17:24:25.454: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-4477" for this suite.

• [SLOW TEST:8.952 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":356,"completed":279,"skipped":5308,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:24:25.469: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9532
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-298c7b9d-e85c-4f78-9286-56a52055b671
STEP: Creating a pod to test consume configMaps
May 16 17:24:25.630: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-5daf184d-6192-4bd5-bcb9-fb2dc924c037" in namespace "projected-9532" to be "Succeeded or Failed"
May 16 17:24:25.635: INFO: Pod "pod-projected-configmaps-5daf184d-6192-4bd5-bcb9-fb2dc924c037": Phase="Pending", Reason="", readiness=false. Elapsed: 5.150414ms
May 16 17:24:27.643: INFO: Pod "pod-projected-configmaps-5daf184d-6192-4bd5-bcb9-fb2dc924c037": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013104769s
May 16 17:24:29.655: INFO: Pod "pod-projected-configmaps-5daf184d-6192-4bd5-bcb9-fb2dc924c037": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025250691s
STEP: Saw pod success
May 16 17:24:29.655: INFO: Pod "pod-projected-configmaps-5daf184d-6192-4bd5-bcb9-fb2dc924c037" satisfied condition "Succeeded or Failed"
May 16 17:24:29.660: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-projected-configmaps-5daf184d-6192-4bd5-bcb9-fb2dc924c037 container agnhost-container: <nil>
STEP: delete the pod
May 16 17:24:29.688: INFO: Waiting for pod pod-projected-configmaps-5daf184d-6192-4bd5-bcb9-fb2dc924c037 to disappear
May 16 17:24:29.695: INFO: Pod pod-projected-configmaps-5daf184d-6192-4bd5-bcb9-fb2dc924c037 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
May 16 17:24:29.696: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9532" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":280,"skipped":5313,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:24:29.710: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-2622
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:24:29.882: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
May 16 17:24:29.901: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:29.901: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:29.914: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:24:29.914: INFO: Node ip-172-31-10-138 is running 0 daemon pod, expected 1
May 16 17:24:30.924: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:30.924: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:30.931: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:24:30.931: INFO: Node ip-172-31-10-138 is running 0 daemon pod, expected 1
May 16 17:24:31.924: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:31.924: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:31.930: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
May 16 17:24:31.930: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
May 16 17:24:31.981: INFO: Wrong image for pod: daemon-set-8brtc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:31.981: INFO: Wrong image for pod: daemon-set-dglkw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:31.981: INFO: Wrong image for pod: daemon-set-f6r4j. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:31.986: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:31.987: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:32.997: INFO: Wrong image for pod: daemon-set-8brtc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:32.997: INFO: Wrong image for pod: daemon-set-f6r4j. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:33.003: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:33.003: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:33.994: INFO: Wrong image for pod: daemon-set-8brtc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:33.994: INFO: Wrong image for pod: daemon-set-f6r4j. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:34.000: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:34.000: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:34.995: INFO: Pod daemon-set-5nt8g is not available
May 16 17:24:34.995: INFO: Wrong image for pod: daemon-set-8brtc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:34.995: INFO: Wrong image for pod: daemon-set-f6r4j. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:35.001: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:35.001: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:35.996: INFO: Pod daemon-set-5nt8g is not available
May 16 17:24:35.996: INFO: Wrong image for pod: daemon-set-8brtc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:35.996: INFO: Wrong image for pod: daemon-set-f6r4j. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:36.002: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:36.002: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:36.993: INFO: Wrong image for pod: daemon-set-8brtc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:37.001: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:37.001: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:37.995: INFO: Wrong image for pod: daemon-set-8brtc. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.36, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
May 16 17:24:37.996: INFO: Pod daemon-set-cqdmv is not available
May 16 17:24:38.001: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:38.002: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:38.994: INFO: Pod daemon-set-6kdhw is not available
May 16 17:24:39.000: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:39.000: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
STEP: Check that daemon pods are still running on every node of the cluster.
May 16 17:24:39.005: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:39.006: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:39.012: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
May 16 17:24:39.012: INFO: Node ip-172-31-36-36 is running 0 daemon pod, expected 1
May 16 17:24:40.020: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:40.020: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:24:40.026: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
May 16 17:24:40.026: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2622, will wait for the garbage collector to delete the pods
May 16 17:24:40.120: INFO: Deleting DaemonSet.extensions daemon-set took: 13.09165ms
May 16 17:24:40.221: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.163786ms
May 16 17:24:42.731: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:24:42.731: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
May 16 17:24:42.735: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35399"},"items":null}

May 16 17:24:42.740: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35399"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
May 16 17:24:42.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-2622" for this suite.

• [SLOW TEST:13.070 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":356,"completed":281,"skipped":5334,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:24:42.780: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-967
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
May 16 17:24:56.038: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-967" for this suite.

• [SLOW TEST:13.274 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":356,"completed":282,"skipped":5340,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:24:56.054: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-647
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-2ebaed5b-f31d-4272-9252-32e238cf6187
STEP: Creating a pod to test consume configMaps
May 16 17:24:56.212: INFO: Waiting up to 5m0s for pod "pod-configmaps-79e0646a-e60d-4c0b-84db-b3dd287be787" in namespace "configmap-647" to be "Succeeded or Failed"
May 16 17:24:56.219: INFO: Pod "pod-configmaps-79e0646a-e60d-4c0b-84db-b3dd287be787": Phase="Pending", Reason="", readiness=false. Elapsed: 6.959591ms
May 16 17:24:58.228: INFO: Pod "pod-configmaps-79e0646a-e60d-4c0b-84db-b3dd287be787": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015717285s
May 16 17:25:00.237: INFO: Pod "pod-configmaps-79e0646a-e60d-4c0b-84db-b3dd287be787": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02464509s
STEP: Saw pod success
May 16 17:25:00.237: INFO: Pod "pod-configmaps-79e0646a-e60d-4c0b-84db-b3dd287be787" satisfied condition "Succeeded or Failed"
May 16 17:25:00.243: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-configmaps-79e0646a-e60d-4c0b-84db-b3dd287be787 container agnhost-container: <nil>
STEP: delete the pod
May 16 17:25:00.273: INFO: Waiting for pod pod-configmaps-79e0646a-e60d-4c0b-84db-b3dd287be787 to disappear
May 16 17:25:00.279: INFO: Pod pod-configmaps-79e0646a-e60d-4c0b-84db-b3dd287be787 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
May 16 17:25:00.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-647" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":283,"skipped":5358,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:25:00.295: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3855
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
May 16 17:25:00.451: INFO: Waiting up to 5m0s for pod "pod-6e33ab9a-ff3c-4fe6-8ea3-f521782642b5" in namespace "emptydir-3855" to be "Succeeded or Failed"
May 16 17:25:00.456: INFO: Pod "pod-6e33ab9a-ff3c-4fe6-8ea3-f521782642b5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.50711ms
May 16 17:25:02.466: INFO: Pod "pod-6e33ab9a-ff3c-4fe6-8ea3-f521782642b5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014795173s
May 16 17:25:04.477: INFO: Pod "pod-6e33ab9a-ff3c-4fe6-8ea3-f521782642b5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02568707s
STEP: Saw pod success
May 16 17:25:04.477: INFO: Pod "pod-6e33ab9a-ff3c-4fe6-8ea3-f521782642b5" satisfied condition "Succeeded or Failed"
May 16 17:25:04.483: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-6e33ab9a-ff3c-4fe6-8ea3-f521782642b5 container test-container: <nil>
STEP: delete the pod
May 16 17:25:04.508: INFO: Waiting for pod pod-6e33ab9a-ff3c-4fe6-8ea3-f521782642b5 to disappear
May 16 17:25:04.514: INFO: Pod pod-6e33ab9a-ff3c-4fe6-8ea3-f521782642b5 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 17:25:04.514: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3855" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":284,"skipped":5367,"failed":0}
SSSSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:25:04.529: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6266
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
May 16 17:25:04.694: INFO: Waiting up to 5m0s for pod "downward-api-a7bd3675-2c84-49c3-bac7-caf53ba7f01e" in namespace "downward-api-6266" to be "Succeeded or Failed"
May 16 17:25:04.699: INFO: Pod "downward-api-a7bd3675-2c84-49c3-bac7-caf53ba7f01e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.686113ms
May 16 17:25:06.707: INFO: Pod "downward-api-a7bd3675-2c84-49c3-bac7-caf53ba7f01e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01275396s
May 16 17:25:08.715: INFO: Pod "downward-api-a7bd3675-2c84-49c3-bac7-caf53ba7f01e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020990645s
STEP: Saw pod success
May 16 17:25:08.715: INFO: Pod "downward-api-a7bd3675-2c84-49c3-bac7-caf53ba7f01e" satisfied condition "Succeeded or Failed"
May 16 17:25:08.721: INFO: Trying to get logs from node ip-172-31-76-3 pod downward-api-a7bd3675-2c84-49c3-bac7-caf53ba7f01e container dapi-container: <nil>
STEP: delete the pod
May 16 17:25:08.754: INFO: Waiting for pod downward-api-a7bd3675-2c84-49c3-bac7-caf53ba7f01e to disappear
May 16 17:25:08.760: INFO: Pod downward-api-a7bd3675-2c84-49c3-bac7-caf53ba7f01e no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
May 16 17:25:08.760: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6266" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":356,"completed":285,"skipped":5372,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:25:08.779: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename server-version
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in server-version-4817
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  test/e2e/framework/framework.go:652
STEP: Request ServerVersion
STEP: Confirm major version
May 16 17:25:08.931: INFO: Major version: 1
STEP: Confirm minor version
May 16 17:25:08.931: INFO: cleanMinorVersion: 24
May 16 17:25:08.931: INFO: Minor version: 24
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:188
May 16 17:25:08.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-4817" for this suite.
•{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":356,"completed":286,"skipped":5399,"failed":0}
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:25:08.956: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3918
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
May 16 17:25:09.119: INFO: Waiting up to 5m0s for pod "pod-bfb68094-54f9-4578-b263-55b1af1ed060" in namespace "emptydir-3918" to be "Succeeded or Failed"
May 16 17:25:09.128: INFO: Pod "pod-bfb68094-54f9-4578-b263-55b1af1ed060": Phase="Pending", Reason="", readiness=false. Elapsed: 9.811946ms
May 16 17:25:11.140: INFO: Pod "pod-bfb68094-54f9-4578-b263-55b1af1ed060": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021118454s
May 16 17:25:13.147: INFO: Pod "pod-bfb68094-54f9-4578-b263-55b1af1ed060": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028899895s
STEP: Saw pod success
May 16 17:25:13.148: INFO: Pod "pod-bfb68094-54f9-4578-b263-55b1af1ed060" satisfied condition "Succeeded or Failed"
May 16 17:25:13.152: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-bfb68094-54f9-4578-b263-55b1af1ed060 container test-container: <nil>
STEP: delete the pod
May 16 17:25:13.183: INFO: Waiting for pod pod-bfb68094-54f9-4578-b263-55b1af1ed060 to disappear
May 16 17:25:13.187: INFO: Pod pod-bfb68094-54f9-4578-b263-55b1af1ed060 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 17:25:13.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3918" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":287,"skipped":5405,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:25:13.203: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-8136
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
May 16 17:25:13.356: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
May 16 17:25:18.183: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-8136" for this suite.
•{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":356,"completed":288,"skipped":5415,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:25:18.199: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-215
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
May 16 17:25:18.358: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
May 16 17:25:29.073: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:25:31.463: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:25:42.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-215" for this suite.

• [SLOW TEST:24.658 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":356,"completed":289,"skipped":5437,"failed":0}
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:25:42.858: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-2297
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-s8ks
STEP: Creating a pod to test atomic-volume-subpath
May 16 17:25:43.033: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-s8ks" in namespace "subpath-2297" to be "Succeeded or Failed"
May 16 17:25:43.039: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Pending", Reason="", readiness=false. Elapsed: 5.72818ms
May 16 17:25:45.046: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Running", Reason="", readiness=true. Elapsed: 2.012544225s
May 16 17:25:47.054: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Running", Reason="", readiness=true. Elapsed: 4.021188485s
May 16 17:25:49.061: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Running", Reason="", readiness=true. Elapsed: 6.028263988s
May 16 17:25:51.075: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Running", Reason="", readiness=true. Elapsed: 8.0413778s
May 16 17:25:53.087: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Running", Reason="", readiness=true. Elapsed: 10.05348606s
May 16 17:25:55.098: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Running", Reason="", readiness=true. Elapsed: 12.064983071s
May 16 17:25:57.112: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Running", Reason="", readiness=true. Elapsed: 14.078425307s
May 16 17:25:59.119: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Running", Reason="", readiness=true. Elapsed: 16.085641601s
May 16 17:26:01.127: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Running", Reason="", readiness=true. Elapsed: 18.093510724s
May 16 17:26:03.137: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Running", Reason="", readiness=true. Elapsed: 20.104245566s
May 16 17:26:05.149: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Running", Reason="", readiness=false. Elapsed: 22.115632183s
May 16 17:26:07.157: INFO: Pod "pod-subpath-test-configmap-s8ks": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.123530927s
STEP: Saw pod success
May 16 17:26:07.157: INFO: Pod "pod-subpath-test-configmap-s8ks" satisfied condition "Succeeded or Failed"
May 16 17:26:07.161: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-subpath-test-configmap-s8ks container test-container-subpath-configmap-s8ks: <nil>
STEP: delete the pod
May 16 17:26:07.194: INFO: Waiting for pod pod-subpath-test-configmap-s8ks to disappear
May 16 17:26:07.198: INFO: Pod pod-subpath-test-configmap-s8ks no longer exists
STEP: Deleting pod pod-subpath-test-configmap-s8ks
May 16 17:26:07.198: INFO: Deleting pod "pod-subpath-test-configmap-s8ks" in namespace "subpath-2297"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
May 16 17:26:07.203: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-2297" for this suite.

• [SLOW TEST:24.360 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]","total":356,"completed":290,"skipped":5443,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:07.218: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-8335
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:26:07.371: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-ce4e3da6-45a5-43de-b00d-5e68f970c5e1" in namespace "security-context-test-8335" to be "Succeeded or Failed"
May 16 17:26:07.377: INFO: Pod "busybox-privileged-false-ce4e3da6-45a5-43de-b00d-5e68f970c5e1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.324276ms
May 16 17:26:09.384: INFO: Pod "busybox-privileged-false-ce4e3da6-45a5-43de-b00d-5e68f970c5e1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013076482s
May 16 17:26:11.397: INFO: Pod "busybox-privileged-false-ce4e3da6-45a5-43de-b00d-5e68f970c5e1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025198792s
May 16 17:26:11.397: INFO: Pod "busybox-privileged-false-ce4e3da6-45a5-43de-b00d-5e68f970c5e1" satisfied condition "Succeeded or Failed"
May 16 17:26:11.406: INFO: Got logs for pod "busybox-privileged-false-ce4e3da6-45a5-43de-b00d-5e68f970c5e1": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
May 16 17:26:11.406: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-8335" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":291,"skipped":5455,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:11.424: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-9581
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
May 16 17:26:11.591: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9581  89ca8423-9bc3-4126-95b1-79c263cb07e7 35929 0 2022-05-16 17:26:11 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-05-16 17:26:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 17:26:11.592: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9581  89ca8423-9bc3-4126-95b1-79c263cb07e7 35930 0 2022-05-16 17:26:11 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-05-16 17:26:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
May 16 17:26:11.616: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9581  89ca8423-9bc3-4126-95b1-79c263cb07e7 35931 0 2022-05-16 17:26:11 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-05-16 17:26:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
May 16 17:26:11.616: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9581  89ca8423-9bc3-4126-95b1-79c263cb07e7 35932 0 2022-05-16 17:26:11 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-05-16 17:26:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
May 16 17:26:11.616: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-9581" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":356,"completed":292,"skipped":5481,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:11.633: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-6565
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
May 16 17:26:11.780: INFO: Creating simple deployment test-deployment-flg2g
May 16 17:26:11.801: INFO: deployment "test-deployment-flg2g" doesn't have the required revision set
STEP: Getting /status
May 16 17:26:13.831: INFO: Deployment test-deployment-flg2g has Conditions: [{Available True 2022-05-16 17:26:13 +0000 UTC 2022-05-16 17:26:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2022-05-16 17:26:13 +0000 UTC 2022-05-16 17:26:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-flg2g-688c4d6789" has successfully progressed.}]
STEP: updating Deployment Status
May 16 17:26:13.847: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 26, 13, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 26, 13, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.May, 16, 17, 26, 13, 0, time.Local), LastTransitionTime:time.Date(2022, time.May, 16, 17, 26, 11, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-flg2g-688c4d6789\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
May 16 17:26:13.850: INFO: Observed &Deployment event: ADDED
May 16 17:26:13.850: INFO: Observed Deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-05-16 17:26:11 +0000 UTC 2022-05-16 17:26:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-flg2g-688c4d6789"}
May 16 17:26:13.850: INFO: Observed &Deployment event: MODIFIED
May 16 17:26:13.850: INFO: Observed Deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-05-16 17:26:11 +0000 UTC 2022-05-16 17:26:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-flg2g-688c4d6789"}
May 16 17:26:13.850: INFO: Observed Deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-05-16 17:26:11 +0000 UTC 2022-05-16 17:26:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
May 16 17:26:13.850: INFO: Observed &Deployment event: MODIFIED
May 16 17:26:13.850: INFO: Observed Deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-05-16 17:26:11 +0000 UTC 2022-05-16 17:26:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
May 16 17:26:13.850: INFO: Observed Deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-05-16 17:26:11 +0000 UTC 2022-05-16 17:26:11 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-flg2g-688c4d6789" is progressing.}
May 16 17:26:13.850: INFO: Observed &Deployment event: MODIFIED
May 16 17:26:13.850: INFO: Observed Deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-05-16 17:26:13 +0000 UTC 2022-05-16 17:26:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
May 16 17:26:13.850: INFO: Observed Deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-05-16 17:26:13 +0000 UTC 2022-05-16 17:26:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-flg2g-688c4d6789" has successfully progressed.}
May 16 17:26:13.851: INFO: Observed &Deployment event: MODIFIED
May 16 17:26:13.851: INFO: Observed Deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-05-16 17:26:13 +0000 UTC 2022-05-16 17:26:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
May 16 17:26:13.851: INFO: Observed Deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-05-16 17:26:13 +0000 UTC 2022-05-16 17:26:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-flg2g-688c4d6789" has successfully progressed.}
May 16 17:26:13.851: INFO: Found Deployment test-deployment-flg2g in namespace deployment-6565 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
May 16 17:26:13.851: INFO: Deployment test-deployment-flg2g has an updated status
STEP: patching the Statefulset Status
May 16 17:26:13.851: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
May 16 17:26:13.860: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
May 16 17:26:13.862: INFO: Observed &Deployment event: ADDED
May 16 17:26:13.862: INFO: Observed deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-05-16 17:26:11 +0000 UTC 2022-05-16 17:26:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-flg2g-688c4d6789"}
May 16 17:26:13.862: INFO: Observed &Deployment event: MODIFIED
May 16 17:26:13.863: INFO: Observed deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-05-16 17:26:11 +0000 UTC 2022-05-16 17:26:11 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-flg2g-688c4d6789"}
May 16 17:26:13.863: INFO: Observed deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-05-16 17:26:11 +0000 UTC 2022-05-16 17:26:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
May 16 17:26:13.863: INFO: Observed &Deployment event: MODIFIED
May 16 17:26:13.863: INFO: Observed deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-05-16 17:26:11 +0000 UTC 2022-05-16 17:26:11 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
May 16 17:26:13.863: INFO: Observed deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-05-16 17:26:11 +0000 UTC 2022-05-16 17:26:11 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-flg2g-688c4d6789" is progressing.}
May 16 17:26:13.863: INFO: Observed &Deployment event: MODIFIED
May 16 17:26:13.863: INFO: Observed deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-05-16 17:26:13 +0000 UTC 2022-05-16 17:26:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
May 16 17:26:13.863: INFO: Observed deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-05-16 17:26:13 +0000 UTC 2022-05-16 17:26:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-flg2g-688c4d6789" has successfully progressed.}
May 16 17:26:13.863: INFO: Observed &Deployment event: MODIFIED
May 16 17:26:13.863: INFO: Observed deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-05-16 17:26:13 +0000 UTC 2022-05-16 17:26:13 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
May 16 17:26:13.863: INFO: Observed deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-05-16 17:26:13 +0000 UTC 2022-05-16 17:26:11 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-flg2g-688c4d6789" has successfully progressed.}
May 16 17:26:13.863: INFO: Observed deployment test-deployment-flg2g in namespace deployment-6565 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
May 16 17:26:13.864: INFO: Observed &Deployment event: MODIFIED
May 16 17:26:13.864: INFO: Found deployment test-deployment-flg2g in namespace deployment-6565 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
May 16 17:26:13.864: INFO: Deployment test-deployment-flg2g has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
May 16 17:26:13.872: INFO: Deployment "test-deployment-flg2g":
&Deployment{ObjectMeta:{test-deployment-flg2g  deployment-6565  698dc3cf-0d4e-4f90-b864-cff1ed281b6f 35978 1 2022-05-16 17:26:11 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-05-16 17:26:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2022-05-16 17:26:13 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2022-05-16 17:26:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004105e98 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

May 16 17:26:13.878: INFO: New ReplicaSet "test-deployment-flg2g-688c4d6789" of Deployment "test-deployment-flg2g":
&ReplicaSet{ObjectMeta:{test-deployment-flg2g-688c4d6789  deployment-6565  85fc8cb1-e2f6-4e4d-b8c3-12643a6e430c 35975 1 2022-05-16 17:26:11 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-flg2g 698dc3cf-0d4e-4f90-b864-cff1ed281b6f 0xc0041a0490 0xc0041a0491}] []  [{kube-controller-manager Update apps/v1 2022-05-16 17:26:11 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"698dc3cf-0d4e-4f90-b864-cff1ed281b6f\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-05-16 17:26:13 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 688c4d6789,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0041a05a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
May 16 17:26:13.884: INFO: Pod "test-deployment-flg2g-688c4d6789-hvz7k" is available:
&Pod{ObjectMeta:{test-deployment-flg2g-688c4d6789-hvz7k test-deployment-flg2g-688c4d6789- deployment-6565  aead9957-df22-4860-a471-a0c5978028bb 35974 0 2022-05-16 17:26:11 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-flg2g-688c4d6789 85fc8cb1-e2f6-4e4d-b8c3-12643a6e430c 0xc0041a0ae7 0xc0041a0ae8}] []  [{kube-controller-manager Update v1 2022-05-16 17:26:11 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"85fc8cb1-e2f6-4e4d-b8c3-12643a6e430c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-05-16 17:26:13 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.238.158\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4cxlt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4cxlt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-76-3,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:26:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:26:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:26:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-05-16 17:26:11 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.76.3,PodIP:192.168.238.158,StartTime:2022-05-16 17:26:11 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-05-16 17:26:12 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://2e7c5b14517026cdf4eee86a89e7f29d4f7982966a6fff46e42610907734ae34,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.238.158,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
May 16 17:26:13.884: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-6565" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":356,"completed":293,"skipped":5531,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:13.899: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-1259
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
May 16 17:26:25.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-1259" for this suite.

• [SLOW TEST:11.252 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":356,"completed":294,"skipped":5541,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:25.151: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-9664
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:26:25.309: INFO: Waiting up to 5m0s for pod "busybox-user-65534-9c68ccc5-cfab-4a00-a425-ba39ba0a5fe1" in namespace "security-context-test-9664" to be "Succeeded or Failed"
May 16 17:26:25.319: INFO: Pod "busybox-user-65534-9c68ccc5-cfab-4a00-a425-ba39ba0a5fe1": Phase="Pending", Reason="", readiness=false. Elapsed: 10.34444ms
May 16 17:26:27.327: INFO: Pod "busybox-user-65534-9c68ccc5-cfab-4a00-a425-ba39ba0a5fe1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018003934s
May 16 17:26:29.335: INFO: Pod "busybox-user-65534-9c68ccc5-cfab-4a00-a425-ba39ba0a5fe1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025856258s
May 16 17:26:29.335: INFO: Pod "busybox-user-65534-9c68ccc5-cfab-4a00-a425-ba39ba0a5fe1" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
May 16 17:26:29.335: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-9664" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":295,"skipped":5558,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:29.353: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-5007
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
May 16 17:26:29.534: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
May 16 17:26:29.566: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
May 16 17:26:29.610: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-5007" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":356,"completed":296,"skipped":5567,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:29.628: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3463
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
May 16 17:26:29.782: INFO: Waiting up to 5m0s for pod "pod-d02dd10d-f77e-40d8-a1c8-99faafa6530f" in namespace "emptydir-3463" to be "Succeeded or Failed"
May 16 17:26:29.789: INFO: Pod "pod-d02dd10d-f77e-40d8-a1c8-99faafa6530f": Phase="Pending", Reason="", readiness=false. Elapsed: 7.127195ms
May 16 17:26:31.797: INFO: Pod "pod-d02dd10d-f77e-40d8-a1c8-99faafa6530f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015615425s
May 16 17:26:33.810: INFO: Pod "pod-d02dd10d-f77e-40d8-a1c8-99faafa6530f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027783765s
STEP: Saw pod success
May 16 17:26:33.810: INFO: Pod "pod-d02dd10d-f77e-40d8-a1c8-99faafa6530f" satisfied condition "Succeeded or Failed"
May 16 17:26:33.815: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-d02dd10d-f77e-40d8-a1c8-99faafa6530f container test-container: <nil>
STEP: delete the pod
May 16 17:26:33.845: INFO: Waiting for pod pod-d02dd10d-f77e-40d8-a1c8-99faafa6530f to disappear
May 16 17:26:33.849: INFO: Pod pod-d02dd10d-f77e-40d8-a1c8-99faafa6530f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 17:26:33.850: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3463" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":297,"skipped":5588,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:33.865: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7553
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-91e0380a-3940-462e-8450-3772f422efe3
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
May 16 17:26:36.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7553" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":298,"skipped":5598,"failed":0}
SS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:36.096: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7473
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 17:26:36.252: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ace8359d-d1d8-4f5e-8fa8-f491b08d78d1" in namespace "downward-api-7473" to be "Succeeded or Failed"
May 16 17:26:36.257: INFO: Pod "downwardapi-volume-ace8359d-d1d8-4f5e-8fa8-f491b08d78d1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.669657ms
May 16 17:26:38.266: INFO: Pod "downwardapi-volume-ace8359d-d1d8-4f5e-8fa8-f491b08d78d1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014243618s
May 16 17:26:40.276: INFO: Pod "downwardapi-volume-ace8359d-d1d8-4f5e-8fa8-f491b08d78d1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024182643s
STEP: Saw pod success
May 16 17:26:40.276: INFO: Pod "downwardapi-volume-ace8359d-d1d8-4f5e-8fa8-f491b08d78d1" satisfied condition "Succeeded or Failed"
May 16 17:26:40.281: INFO: Trying to get logs from node ip-172-31-36-36 pod downwardapi-volume-ace8359d-d1d8-4f5e-8fa8-f491b08d78d1 container client-container: <nil>
STEP: delete the pod
May 16 17:26:40.328: INFO: Waiting for pod downwardapi-volume-ace8359d-d1d8-4f5e-8fa8-f491b08d78d1 to disappear
May 16 17:26:40.334: INFO: Pod downwardapi-volume-ace8359d-d1d8-4f5e-8fa8-f491b08d78d1 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
May 16 17:26:40.334: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7473" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":299,"skipped":5600,"failed":0}
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:40.350: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-9176
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:26:40.517: INFO: The status of Pod busybox-scheduling-ec463212-d130-4328-9bc5-373d8e67b58c is Pending, waiting for it to be Running (with Ready = true)
May 16 17:26:42.529: INFO: The status of Pod busybox-scheduling-ec463212-d130-4328-9bc5-373d8e67b58c is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
May 16 17:26:42.545: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-9176" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":356,"completed":300,"skipped":5604,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:42.563: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-7233
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
May 16 17:26:44.748: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-7233" for this suite.
•{"msg":"PASSED [sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":356,"completed":301,"skipped":5625,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:44.767: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5803
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1412
STEP: creating an pod
May 16 17:26:44.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-5803 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.36 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
May 16 17:26:44.984: INFO: stderr: ""
May 16 17:26:44.985: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for log generator to start.
May 16 17:26:44.985: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
May 16 17:26:44.985: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-5803" to be "running and ready, or succeeded"
May 16 17:26:44.996: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 11.227922ms
May 16 17:26:47.003: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.017888624s
May 16 17:26:47.003: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
May 16 17:26:47.003: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
May 16 17:26:47.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-5803 logs logs-generator logs-generator'
May 16 17:26:47.086: INFO: stderr: ""
May 16 17:26:47.086: INFO: stdout: "I0516 17:26:45.859835       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/js57 490\nI0516 17:26:46.060349       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/ccgj 425\nI0516 17:26:46.260720       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/f9f 360\nI0516 17:26:46.460008       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/8xt 454\nI0516 17:26:46.660462       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/59w4 379\nI0516 17:26:46.860923       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/8m7 206\nI0516 17:26:47.060307       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/7g6m 552\n"
STEP: limiting log lines
May 16 17:26:47.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-5803 logs logs-generator logs-generator --tail=1'
May 16 17:26:47.157: INFO: stderr: ""
May 16 17:26:47.157: INFO: stdout: "I0516 17:26:47.060307       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/7g6m 552\n"
May 16 17:26:47.157: INFO: got output "I0516 17:26:47.060307       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/7g6m 552\n"
STEP: limiting log bytes
May 16 17:26:47.157: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-5803 logs logs-generator logs-generator --limit-bytes=1'
May 16 17:26:47.229: INFO: stderr: ""
May 16 17:26:47.229: INFO: stdout: "I"
May 16 17:26:47.229: INFO: got output "I"
STEP: exposing timestamps
May 16 17:26:47.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-5803 logs logs-generator logs-generator --tail=1 --timestamps'
May 16 17:26:47.299: INFO: stderr: ""
May 16 17:26:47.300: INFO: stdout: "2022-05-16T17:26:47.260865262Z I0516 17:26:47.260743       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/cpg 279\n"
May 16 17:26:47.300: INFO: got output "2022-05-16T17:26:47.260865262Z I0516 17:26:47.260743       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/cpg 279\n"
STEP: restricting to a time range
May 16 17:26:49.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-5803 logs logs-generator logs-generator --since=1s'
May 16 17:26:49.876: INFO: stderr: ""
May 16 17:26:49.876: INFO: stdout: "I0516 17:26:49.060070       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/bxbl 378\nI0516 17:26:49.260508       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/xxw7 558\nI0516 17:26:49.460945       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/pm2 464\nI0516 17:26:49.660404       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/7vwb 216\nI0516 17:26:49.860865       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/jbt 214\n"
May 16 17:26:49.876: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-5803 logs logs-generator logs-generator --since=24h'
May 16 17:26:49.957: INFO: stderr: ""
May 16 17:26:49.957: INFO: stdout: "I0516 17:26:45.859835       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/js57 490\nI0516 17:26:46.060349       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/ccgj 425\nI0516 17:26:46.260720       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/f9f 360\nI0516 17:26:46.460008       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/8xt 454\nI0516 17:26:46.660462       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/59w4 379\nI0516 17:26:46.860923       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/8m7 206\nI0516 17:26:47.060307       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/7g6m 552\nI0516 17:26:47.260743       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/cpg 279\nI0516 17:26:47.460019       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/jwf6 281\nI0516 17:26:47.660344       1 logs_generator.go:76] 9 POST /api/v1/namespaces/kube-system/pods/rrf 296\nI0516 17:26:47.860761       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/6bs 429\nI0516 17:26:48.059972       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/bg5r 252\nI0516 17:26:48.260403       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/jtzj 392\nI0516 17:26:48.460854       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/rgch 300\nI0516 17:26:48.660313       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/z4w 443\nI0516 17:26:48.860752       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/r84n 589\nI0516 17:26:49.060070       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/bxbl 378\nI0516 17:26:49.260508       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/xxw7 558\nI0516 17:26:49.460945       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/pm2 464\nI0516 17:26:49.660404       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/7vwb 216\nI0516 17:26:49.860865       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/jbt 214\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1417
May 16 17:26:49.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-5803 delete pod logs-generator'
May 16 17:26:50.885: INFO: stderr: ""
May 16 17:26:50.885: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 17:26:50.885: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5803" for this suite.

• [SLOW TEST:6.144 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1409
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":356,"completed":302,"skipped":5646,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:50.910: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-5374
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:26:51.110: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
May 16 17:26:53.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-5374 --namespace=crd-publish-openapi-5374 create -f -'
May 16 17:26:54.610: INFO: stderr: ""
May 16 17:26:54.610: INFO: stdout: "e2e-test-crd-publish-openapi-3073-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
May 16 17:26:54.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-5374 --namespace=crd-publish-openapi-5374 delete e2e-test-crd-publish-openapi-3073-crds test-cr'
May 16 17:26:54.686: INFO: stderr: ""
May 16 17:26:54.686: INFO: stdout: "e2e-test-crd-publish-openapi-3073-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
May 16 17:26:54.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-5374 --namespace=crd-publish-openapi-5374 apply -f -'
May 16 17:26:55.085: INFO: stderr: ""
May 16 17:26:55.085: INFO: stdout: "e2e-test-crd-publish-openapi-3073-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
May 16 17:26:55.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-5374 --namespace=crd-publish-openapi-5374 delete e2e-test-crd-publish-openapi-3073-crds test-cr'
May 16 17:26:55.159: INFO: stderr: ""
May 16 17:26:55.159: INFO: stdout: "e2e-test-crd-publish-openapi-3073-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
May 16 17:26:55.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=crd-publish-openapi-5374 explain e2e-test-crd-publish-openapi-3073-crds'
May 16 17:26:55.328: INFO: stderr: ""
May 16 17:26:55.328: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3073-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:26:57.759: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-5374" for this suite.

• [SLOW TEST:6.872 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":356,"completed":303,"skipped":5655,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:57.783: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-4541
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:26:57.939: INFO: Endpoints addresses: [172.31.1.104 172.31.91.183] , ports: [6443]
May 16 17:26:57.939: INFO: EndpointSlices addresses: [172.31.1.104 172.31.91.183] , ports: [6443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
May 16 17:26:57.939: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-4541" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":356,"completed":304,"skipped":5679,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:26:57.955: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2763
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:58
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod test-webserver-480b0413-6641-456c-9559-7ae301aa40df in namespace container-probe-2763
May 16 17:27:00.130: INFO: Started pod test-webserver-480b0413-6641-456c-9559-7ae301aa40df in namespace container-probe-2763
STEP: checking the pod's current state and verifying that restartCount is present
May 16 17:27:00.134: INFO: Initial restart count of pod test-webserver-480b0413-6641-456c-9559-7ae301aa40df is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
May 16 17:31:01.298: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2763" for this suite.

• [SLOW TEST:243.368 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":305,"skipped":5724,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:31:01.323: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8776
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-9ee546a6-f471-4f30-a6d1-ab077b5eae5a
STEP: Creating a pod to test consume configMaps
May 16 17:31:01.491: INFO: Waiting up to 5m0s for pod "pod-configmaps-95a716c7-1579-4474-8275-50f4e19d2bd1" in namespace "configmap-8776" to be "Succeeded or Failed"
May 16 17:31:01.497: INFO: Pod "pod-configmaps-95a716c7-1579-4474-8275-50f4e19d2bd1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.645018ms
May 16 17:31:03.505: INFO: Pod "pod-configmaps-95a716c7-1579-4474-8275-50f4e19d2bd1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013755611s
May 16 17:31:05.515: INFO: Pod "pod-configmaps-95a716c7-1579-4474-8275-50f4e19d2bd1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023670186s
STEP: Saw pod success
May 16 17:31:05.515: INFO: Pod "pod-configmaps-95a716c7-1579-4474-8275-50f4e19d2bd1" satisfied condition "Succeeded or Failed"
May 16 17:31:05.520: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-configmaps-95a716c7-1579-4474-8275-50f4e19d2bd1 container agnhost-container: <nil>
STEP: delete the pod
May 16 17:31:05.565: INFO: Waiting for pod pod-configmaps-95a716c7-1579-4474-8275-50f4e19d2bd1 to disappear
May 16 17:31:05.570: INFO: Pod pod-configmaps-95a716c7-1579-4474-8275-50f4e19d2bd1 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
May 16 17:31:05.570: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8776" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":306,"skipped":5773,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:31:05.589: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4484
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on node default medium
May 16 17:31:05.758: INFO: Waiting up to 5m0s for pod "pod-99889f23-d27c-4c78-a9ad-9aa35635183d" in namespace "emptydir-4484" to be "Succeeded or Failed"
May 16 17:31:05.767: INFO: Pod "pod-99889f23-d27c-4c78-a9ad-9aa35635183d": Phase="Pending", Reason="", readiness=false. Elapsed: 8.609109ms
May 16 17:31:07.776: INFO: Pod "pod-99889f23-d27c-4c78-a9ad-9aa35635183d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018077282s
May 16 17:31:09.784: INFO: Pod "pod-99889f23-d27c-4c78-a9ad-9aa35635183d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026039122s
STEP: Saw pod success
May 16 17:31:09.784: INFO: Pod "pod-99889f23-d27c-4c78-a9ad-9aa35635183d" satisfied condition "Succeeded or Failed"
May 16 17:31:09.790: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-99889f23-d27c-4c78-a9ad-9aa35635183d container test-container: <nil>
STEP: delete the pod
May 16 17:31:09.821: INFO: Waiting for pod pod-99889f23-d27c-4c78-a9ad-9aa35635183d to disappear
May 16 17:31:09.827: INFO: Pod pod-99889f23-d27c-4c78-a9ad-9aa35635183d no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 17:31:09.827: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4484" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":307,"skipped":5804,"failed":0}
SSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:31:09.843: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7868
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 17:31:10.005: INFO: Waiting up to 5m0s for pod "downwardapi-volume-e8daf47f-6e03-40c6-9acf-29e6baf9dbb3" in namespace "projected-7868" to be "Succeeded or Failed"
May 16 17:31:10.015: INFO: Pod "downwardapi-volume-e8daf47f-6e03-40c6-9acf-29e6baf9dbb3": Phase="Pending", Reason="", readiness=false. Elapsed: 10.249597ms
May 16 17:31:12.026: INFO: Pod "downwardapi-volume-e8daf47f-6e03-40c6-9acf-29e6baf9dbb3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020824928s
May 16 17:31:14.037: INFO: Pod "downwardapi-volume-e8daf47f-6e03-40c6-9acf-29e6baf9dbb3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032226853s
STEP: Saw pod success
May 16 17:31:14.037: INFO: Pod "downwardapi-volume-e8daf47f-6e03-40c6-9acf-29e6baf9dbb3" satisfied condition "Succeeded or Failed"
May 16 17:31:14.043: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-e8daf47f-6e03-40c6-9acf-29e6baf9dbb3 container client-container: <nil>
STEP: delete the pod
May 16 17:31:14.068: INFO: Waiting for pod downwardapi-volume-e8daf47f-6e03-40c6-9acf-29e6baf9dbb3 to disappear
May 16 17:31:14.073: INFO: Pod downwardapi-volume-e8daf47f-6e03-40c6-9acf-29e6baf9dbb3 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
May 16 17:31:14.073: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7868" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":308,"skipped":5807,"failed":0}

------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:31:14.088: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9808
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
May 16 17:31:14.253: INFO: Waiting up to 5m0s for pod "pod-d6683746-0963-451d-aa67-aa13e739dc14" in namespace "emptydir-9808" to be "Succeeded or Failed"
May 16 17:31:14.258: INFO: Pod "pod-d6683746-0963-451d-aa67-aa13e739dc14": Phase="Pending", Reason="", readiness=false. Elapsed: 4.723565ms
May 16 17:31:16.268: INFO: Pod "pod-d6683746-0963-451d-aa67-aa13e739dc14": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015194871s
May 16 17:31:18.274: INFO: Pod "pod-d6683746-0963-451d-aa67-aa13e739dc14": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021207641s
STEP: Saw pod success
May 16 17:31:18.275: INFO: Pod "pod-d6683746-0963-451d-aa67-aa13e739dc14" satisfied condition "Succeeded or Failed"
May 16 17:31:18.280: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-d6683746-0963-451d-aa67-aa13e739dc14 container test-container: <nil>
STEP: delete the pod
May 16 17:31:18.309: INFO: Waiting for pod pod-d6683746-0963-451d-aa67-aa13e739dc14 to disappear
May 16 17:31:18.314: INFO: Pod pod-d6683746-0963-451d-aa67-aa13e739dc14 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
May 16 17:31:18.314: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9808" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":309,"skipped":5807,"failed":0}

------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:31:18.330: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-6453
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-projected-8s28
STEP: Creating a pod to test atomic-volume-subpath
May 16 17:31:18.505: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-8s28" in namespace "subpath-6453" to be "Succeeded or Failed"
May 16 17:31:18.511: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Pending", Reason="", readiness=false. Elapsed: 5.603465ms
May 16 17:31:20.521: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Running", Reason="", readiness=true. Elapsed: 2.015774507s
May 16 17:31:22.531: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Running", Reason="", readiness=true. Elapsed: 4.025281699s
May 16 17:31:24.539: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Running", Reason="", readiness=true. Elapsed: 6.033249634s
May 16 17:31:26.551: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Running", Reason="", readiness=true. Elapsed: 8.046010712s
May 16 17:31:28.562: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Running", Reason="", readiness=true. Elapsed: 10.056917792s
May 16 17:31:30.571: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Running", Reason="", readiness=true. Elapsed: 12.065918892s
May 16 17:31:32.580: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Running", Reason="", readiness=true. Elapsed: 14.074558106s
May 16 17:31:34.591: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Running", Reason="", readiness=true. Elapsed: 16.086114299s
May 16 17:31:36.603: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Running", Reason="", readiness=true. Elapsed: 18.097273595s
May 16 17:31:38.613: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Running", Reason="", readiness=true. Elapsed: 20.107227522s
May 16 17:31:40.622: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Running", Reason="", readiness=false. Elapsed: 22.116828138s
May 16 17:31:42.631: INFO: Pod "pod-subpath-test-projected-8s28": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.125533999s
STEP: Saw pod success
May 16 17:31:42.631: INFO: Pod "pod-subpath-test-projected-8s28" satisfied condition "Succeeded or Failed"
May 16 17:31:42.636: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-subpath-test-projected-8s28 container test-container-subpath-projected-8s28: <nil>
STEP: delete the pod
May 16 17:31:42.660: INFO: Waiting for pod pod-subpath-test-projected-8s28 to disappear
May 16 17:31:42.665: INFO: Pod pod-subpath-test-projected-8s28 no longer exists
STEP: Deleting pod pod-subpath-test-projected-8s28
May 16 17:31:42.665: INFO: Deleting pod "pod-subpath-test-projected-8s28" in namespace "subpath-6453"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
May 16 17:31:42.671: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-6453" for this suite.

• [SLOW TEST:24.356 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]","total":356,"completed":310,"skipped":5807,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:31:42.686: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-6855
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override command
May 16 17:31:42.840: INFO: Waiting up to 5m0s for pod "client-containers-102acb63-7000-465f-a3da-7325dd776d43" in namespace "containers-6855" to be "Succeeded or Failed"
May 16 17:31:42.846: INFO: Pod "client-containers-102acb63-7000-465f-a3da-7325dd776d43": Phase="Pending", Reason="", readiness=false. Elapsed: 5.465417ms
May 16 17:31:44.856: INFO: Pod "client-containers-102acb63-7000-465f-a3da-7325dd776d43": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01625997s
May 16 17:31:46.864: INFO: Pod "client-containers-102acb63-7000-465f-a3da-7325dd776d43": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023649594s
STEP: Saw pod success
May 16 17:31:46.864: INFO: Pod "client-containers-102acb63-7000-465f-a3da-7325dd776d43" satisfied condition "Succeeded or Failed"
May 16 17:31:46.869: INFO: Trying to get logs from node ip-172-31-76-3 pod client-containers-102acb63-7000-465f-a3da-7325dd776d43 container agnhost-container: <nil>
STEP: delete the pod
May 16 17:31:46.898: INFO: Waiting for pod client-containers-102acb63-7000-465f-a3da-7325dd776d43 to disappear
May 16 17:31:46.903: INFO: Pod client-containers-102acb63-7000-465f-a3da-7325dd776d43 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
May 16 17:31:46.903: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-6855" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]","total":356,"completed":311,"skipped":5816,"failed":0}
SSSS
------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:31:46.923: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-1423
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
May 16 17:36:47.106: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-1423" for this suite.

• [SLOW TEST:300.200 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":356,"completed":312,"skipped":5820,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:36:47.124: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-980
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:36:47.270: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:36:50.451: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-980" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":356,"completed":313,"skipped":5862,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:36:50.470: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1841
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 17:36:50.629: INFO: Waiting up to 5m0s for pod "downwardapi-volume-cb10ba3a-cfa9-40ba-a272-ebdd3215a48f" in namespace "downward-api-1841" to be "Succeeded or Failed"
May 16 17:36:50.635: INFO: Pod "downwardapi-volume-cb10ba3a-cfa9-40ba-a272-ebdd3215a48f": Phase="Pending", Reason="", readiness=false. Elapsed: 6.132244ms
May 16 17:36:52.646: INFO: Pod "downwardapi-volume-cb10ba3a-cfa9-40ba-a272-ebdd3215a48f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016874856s
May 16 17:36:54.656: INFO: Pod "downwardapi-volume-cb10ba3a-cfa9-40ba-a272-ebdd3215a48f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027196106s
STEP: Saw pod success
May 16 17:36:54.656: INFO: Pod "downwardapi-volume-cb10ba3a-cfa9-40ba-a272-ebdd3215a48f" satisfied condition "Succeeded or Failed"
May 16 17:36:54.661: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-cb10ba3a-cfa9-40ba-a272-ebdd3215a48f container client-container: <nil>
STEP: delete the pod
May 16 17:36:54.704: INFO: Waiting for pod downwardapi-volume-cb10ba3a-cfa9-40ba-a272-ebdd3215a48f to disappear
May 16 17:36:54.709: INFO: Pod downwardapi-volume-cb10ba3a-cfa9-40ba-a272-ebdd3215a48f no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
May 16 17:36:54.709: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1841" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":314,"skipped":5897,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:36:54.726: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4935
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
May 16 17:36:54.927: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4935" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":356,"completed":315,"skipped":5981,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:36:54.944: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-6041
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:58
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-37e45279-facc-4274-8eb7-80a77b1a98f7 in namespace container-probe-6041
May 16 17:36:57.125: INFO: Started pod liveness-37e45279-facc-4274-8eb7-80a77b1a98f7 in namespace container-probe-6041
STEP: checking the pod's current state and verifying that restartCount is present
May 16 17:36:57.130: INFO: Initial restart count of pod liveness-37e45279-facc-4274-8eb7-80a77b1a98f7 is 0
May 16 17:37:17.237: INFO: Restart count of pod container-probe-6041/liveness-37e45279-facc-4274-8eb7-80a77b1a98f7 is now 1 (20.107536402s elapsed)
May 16 17:37:37.336: INFO: Restart count of pod container-probe-6041/liveness-37e45279-facc-4274-8eb7-80a77b1a98f7 is now 2 (40.206459551s elapsed)
May 16 17:37:57.427: INFO: Restart count of pod container-probe-6041/liveness-37e45279-facc-4274-8eb7-80a77b1a98f7 is now 3 (1m0.297043359s elapsed)
May 16 17:38:15.511: INFO: Restart count of pod container-probe-6041/liveness-37e45279-facc-4274-8eb7-80a77b1a98f7 is now 4 (1m18.381478509s elapsed)
May 16 17:39:25.826: INFO: Restart count of pod container-probe-6041/liveness-37e45279-facc-4274-8eb7-80a77b1a98f7 is now 5 (2m28.696448406s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
May 16 17:39:25.848: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6041" for this suite.

• [SLOW TEST:150.921 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":356,"completed":316,"skipped":6011,"failed":0}
SS
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:39:25.864: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2189
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-1e0a7878-92c7-404e-9fab-366c0355ef20
STEP: Creating secret with name s-test-opt-upd-f0188fe6-ebb6-4e13-8d72-a3dbead74abc
STEP: Creating the pod
May 16 17:39:26.108: INFO: The status of Pod pod-projected-secrets-ce4edf31-a785-45ce-8e0a-3a2ff393ecb1 is Pending, waiting for it to be Running (with Ready = true)
May 16 17:39:28.120: INFO: The status of Pod pod-projected-secrets-ce4edf31-a785-45ce-8e0a-3a2ff393ecb1 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-1e0a7878-92c7-404e-9fab-366c0355ef20
STEP: Updating secret s-test-opt-upd-f0188fe6-ebb6-4e13-8d72-a3dbead74abc
STEP: Creating secret with name s-test-opt-create-221fb45f-0d73-4841-9e3f-9f47b36fdc7c
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
May 16 17:39:30.226: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2189" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":317,"skipped":6013,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:39:30.245: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-1241
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:39:30.388: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: creating the pod
STEP: submitting the pod to kubernetes
May 16 17:39:30.406: INFO: The status of Pod pod-exec-websocket-c4e79cb9-7b61-4694-893a-1f7ced972cb3 is Pending, waiting for it to be Running (with Ready = true)
May 16 17:39:32.415: INFO: The status of Pod pod-exec-websocket-c4e79cb9-7b61-4694-893a-1f7ced972cb3 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
May 16 17:39:32.501: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-1241" for this suite.
•{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":356,"completed":318,"skipped":6028,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:39:32.518: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7435
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
May 16 17:39:48.747: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7435" for this suite.

• [SLOW TEST:16.245 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":356,"completed":319,"skipped":6038,"failed":0}
SSSSSS
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:39:48.763: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-4975
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replication controller my-hostname-basic-8ebd381e-bbd1-457e-88ac-92f2c4feb272
May 16 17:39:48.925: INFO: Pod name my-hostname-basic-8ebd381e-bbd1-457e-88ac-92f2c4feb272: Found 0 pods out of 1
May 16 17:39:53.934: INFO: Pod name my-hostname-basic-8ebd381e-bbd1-457e-88ac-92f2c4feb272: Found 1 pods out of 1
May 16 17:39:53.935: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-8ebd381e-bbd1-457e-88ac-92f2c4feb272" are running
May 16 17:39:53.940: INFO: Pod "my-hostname-basic-8ebd381e-bbd1-457e-88ac-92f2c4feb272-wq89s" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-05-16 17:39:48 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-05-16 17:39:50 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-05-16 17:39:50 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-05-16 17:39:48 +0000 UTC Reason: Message:}])
May 16 17:39:53.940: INFO: Trying to dial the pod
May 16 17:39:58.961: INFO: Controller my-hostname-basic-8ebd381e-bbd1-457e-88ac-92f2c4feb272: Got expected result from replica 1 [my-hostname-basic-8ebd381e-bbd1-457e-88ac-92f2c4feb272-wq89s]: "my-hostname-basic-8ebd381e-bbd1-457e-88ac-92f2c4feb272-wq89s", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
May 16 17:39:58.961: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-4975" for this suite.

• [SLOW TEST:10.215 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":320,"skipped":6044,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease 
  lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Lease
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:39:58.979: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename lease-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in lease-test-9725
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Lease
  test/e2e/framework/framework.go:188
May 16 17:39:59.232: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-9725" for this suite.
•{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":356,"completed":321,"skipped":6064,"failed":0}

------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:39:59.247: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-1456
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:39:59.401: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:40:00.436: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-1456" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":356,"completed":322,"skipped":6064,"failed":0}

------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:40:00.454: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-3819
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
May 16 17:40:00.622: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
May 16 17:40:02.631: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
May 16 17:40:02.654: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
May 16 17:40:04.662: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
May 16 17:40:04.679: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
May 16 17:40:04.685: INFO: Pod pod-with-prestop-exec-hook still exists
May 16 17:40:06.685: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
May 16 17:40:06.700: INFO: Pod pod-with-prestop-exec-hook still exists
May 16 17:40:08.685: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
May 16 17:40:08.696: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
May 16 17:40:08.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-3819" for this suite.

• [SLOW TEST:8.281 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":356,"completed":323,"skipped":6064,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:40:08.736: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-kubelet-etc-hosts-2241
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
May 16 17:40:08.901: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
May 16 17:40:10.909: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
May 16 17:40:10.930: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
May 16 17:40:12.938: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
May 16 17:40:12.943: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2241 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:40:12.943: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:40:12.944: INFO: ExecWithOptions: Clientset creation
May 16 17:40:12.944: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
May 16 17:40:13.030: INFO: Exec stderr: ""
May 16 17:40:13.031: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2241 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:40:13.031: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:40:13.031: INFO: ExecWithOptions: Clientset creation
May 16 17:40:13.031: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
May 16 17:40:13.112: INFO: Exec stderr: ""
May 16 17:40:13.112: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2241 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:40:13.112: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:40:13.113: INFO: ExecWithOptions: Clientset creation
May 16 17:40:13.113: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
May 16 17:40:13.210: INFO: Exec stderr: ""
May 16 17:40:13.210: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2241 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:40:13.210: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:40:13.211: INFO: ExecWithOptions: Clientset creation
May 16 17:40:13.211: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
May 16 17:40:13.285: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
May 16 17:40:13.285: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2241 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:40:13.285: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:40:13.286: INFO: ExecWithOptions: Clientset creation
May 16 17:40:13.286: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
May 16 17:40:13.365: INFO: Exec stderr: ""
May 16 17:40:13.365: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2241 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:40:13.365: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:40:13.365: INFO: ExecWithOptions: Clientset creation
May 16 17:40:13.366: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
May 16 17:40:13.433: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
May 16 17:40:13.433: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2241 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:40:13.434: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:40:13.434: INFO: ExecWithOptions: Clientset creation
May 16 17:40:13.434: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2241/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
May 16 17:40:13.540: INFO: Exec stderr: ""
May 16 17:40:13.540: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2241 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:40:13.540: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:40:13.541: INFO: ExecWithOptions: Clientset creation
May 16 17:40:13.541: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2241/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
May 16 17:40:13.635: INFO: Exec stderr: ""
May 16 17:40:13.635: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2241 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:40:13.635: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:40:13.635: INFO: ExecWithOptions: Clientset creation
May 16 17:40:13.635: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2241/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
May 16 17:40:13.713: INFO: Exec stderr: ""
May 16 17:40:13.713: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2241 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:40:13.713: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:40:13.713: INFO: ExecWithOptions: Clientset creation
May 16 17:40:13.713: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2241/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
May 16 17:40:13.807: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:188
May 16 17:40:13.807: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-2241" for this suite.

• [SLOW TEST:5.091 seconds]
[sig-node] KubeletManagedEtcHosts
test/e2e/common/node/framework.go:23
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":324,"skipped":6088,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity 
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:40:13.827: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename csistoragecapacity
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in csistoragecapacity-5510
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/storage.k8s.io
STEP: getting /apis/storage.k8s.io/v1
STEP: creating
STEP: watching
May 16 17:40:14.022: INFO: starting watch
STEP: getting
STEP: listing in namespace
STEP: listing across namespaces
STEP: patching
STEP: updating
May 16 17:40:14.067: INFO: waiting for watch events with expected annotations in namespace
May 16 17:40:14.067: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:188
May 16 17:40:14.116: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "csistoragecapacity-5510" for this suite.
•{"msg":"PASSED [sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]","total":356,"completed":325,"skipped":6139,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:40:14.136: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-4695
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4695.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4695.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4695.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4695.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4695.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4695.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4695.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4695.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4695.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4695.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4695.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4695.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 166.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.166_udp@PTR;check="$$(dig +tcp +noall +answer +search 166.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.166_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4695.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4695.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4695.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4695.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4695.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4695.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4695.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4695.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4695.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4695.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4695.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4695.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 166.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.166_udp@PTR;check="$$(dig +tcp +noall +answer +search 166.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.166_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
May 16 17:40:16.362: INFO: Unable to read wheezy_udp@dns-test-service.dns-4695.svc.cluster.local from pod dns-4695/dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb: the server could not find the requested resource (get pods dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb)
May 16 17:40:16.367: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4695.svc.cluster.local from pod dns-4695/dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb: the server could not find the requested resource (get pods dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb)
May 16 17:40:16.375: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4695.svc.cluster.local from pod dns-4695/dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb: the server could not find the requested resource (get pods dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb)
May 16 17:40:16.381: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4695.svc.cluster.local from pod dns-4695/dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb: the server could not find the requested resource (get pods dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb)
May 16 17:40:16.410: INFO: Unable to read jessie_udp@dns-test-service.dns-4695.svc.cluster.local from pod dns-4695/dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb: the server could not find the requested resource (get pods dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb)
May 16 17:40:16.416: INFO: Unable to read jessie_tcp@dns-test-service.dns-4695.svc.cluster.local from pod dns-4695/dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb: the server could not find the requested resource (get pods dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb)
May 16 17:40:16.422: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4695.svc.cluster.local from pod dns-4695/dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb: the server could not find the requested resource (get pods dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb)
May 16 17:40:16.428: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4695.svc.cluster.local from pod dns-4695/dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb: the server could not find the requested resource (get pods dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb)
May 16 17:40:16.451: INFO: Lookups using dns-4695/dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb failed for: [wheezy_udp@dns-test-service.dns-4695.svc.cluster.local wheezy_tcp@dns-test-service.dns-4695.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4695.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4695.svc.cluster.local jessie_udp@dns-test-service.dns-4695.svc.cluster.local jessie_tcp@dns-test-service.dns-4695.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4695.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4695.svc.cluster.local]

May 16 17:40:21.559: INFO: DNS probes using dns-4695/dns-test-ee9918cb-46e3-4ea3-8349-f731647596bb succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
May 16 17:40:21.677: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-4695" for this suite.

• [SLOW TEST:7.560 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":356,"completed":326,"skipped":6219,"failed":0}
S
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:40:21.697: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-3713
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
May 16 17:40:21.892: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-3713" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":327,"skipped":6220,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:40:21.911: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5735
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating api versions
May 16 17:40:22.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-5735 api-versions'
May 16 17:40:22.114: INFO: stderr: ""
May 16 17:40:22.114: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 17:40:22.114: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5735" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":356,"completed":328,"skipped":6250,"failed":0}
SS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:40:22.132: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-5775
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override all
May 16 17:40:22.289: INFO: Waiting up to 5m0s for pod "client-containers-61d00935-aa48-4aea-92b5-f3b9ac078174" in namespace "containers-5775" to be "Succeeded or Failed"
May 16 17:40:22.294: INFO: Pod "client-containers-61d00935-aa48-4aea-92b5-f3b9ac078174": Phase="Pending", Reason="", readiness=false. Elapsed: 5.409462ms
May 16 17:40:24.305: INFO: Pod "client-containers-61d00935-aa48-4aea-92b5-f3b9ac078174": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016436297s
May 16 17:40:26.312: INFO: Pod "client-containers-61d00935-aa48-4aea-92b5-f3b9ac078174": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02288363s
STEP: Saw pod success
May 16 17:40:26.312: INFO: Pod "client-containers-61d00935-aa48-4aea-92b5-f3b9ac078174" satisfied condition "Succeeded or Failed"
May 16 17:40:26.317: INFO: Trying to get logs from node ip-172-31-76-3 pod client-containers-61d00935-aa48-4aea-92b5-f3b9ac078174 container agnhost-container: <nil>
STEP: delete the pod
May 16 17:40:26.354: INFO: Waiting for pod client-containers-61d00935-aa48-4aea-92b5-f3b9ac078174 to disappear
May 16 17:40:26.360: INFO: Pod client-containers-61d00935-aa48-4aea-92b5-f3b9ac078174 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
May 16 17:40:26.360: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-5775" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":356,"completed":329,"skipped":6252,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:40:26.379: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-8962
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
May 16 17:40:28.566: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-8962" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]","total":356,"completed":330,"skipped":6266,"failed":0}
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:40:28.582: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-9099
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
May 16 17:40:28.754: INFO: Waiting up to 1m0s for all nodes to be ready
May 16 17:41:28.785: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
May 16 17:41:28.818: INFO: Created pod: pod0-0-sched-preemption-low-priority
May 16 17:41:28.829: INFO: Created pod: pod0-1-sched-preemption-medium-priority
May 16 17:41:28.861: INFO: Created pod: pod1-0-sched-preemption-medium-priority
May 16 17:41:28.884: INFO: Created pod: pod1-1-sched-preemption-medium-priority
May 16 17:41:28.904: INFO: Created pod: pod2-0-sched-preemption-medium-priority
May 16 17:41:28.925: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
May 16 17:41:43.034: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-9099" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:74.521 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":356,"completed":331,"skipped":6273,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:41:43.105: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-8490
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
May 16 17:41:43.265: INFO: Pod name sample-pod: Found 0 pods out of 3
May 16 17:41:48.272: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
May 16 17:41:48.277: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
May 16 17:41:48.301: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-8490" for this suite.

• [SLOW TEST:5.230 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":356,"completed":332,"skipped":6293,"failed":0}
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:41:48.335: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-2153
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:41:48.561: INFO: The status of Pod pod-secrets-54a69022-ca52-444d-9d9b-b610ca238eb2 is Pending, waiting for it to be Running (with Ready = true)
May 16 17:41:50.569: INFO: The status of Pod pod-secrets-54a69022-ca52-444d-9d9b-b610ca238eb2 is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
May 16 17:41:50.630: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-2153" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":356,"completed":333,"skipped":6293,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:41:50.650: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-8464
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
May 16 17:41:50.804: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-8464" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":334,"skipped":6307,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:41:50.823: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-768
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap that has name configmap-test-emptyKey-054408a3-4bf2-4011-a7f4-0413bf7cfb83
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
May 16 17:41:50.981: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-768" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":356,"completed":335,"skipped":6325,"failed":0}
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:41:50.997: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-7814
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
May 16 17:41:51.146: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
May 16 17:41:54.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-7814" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":356,"completed":336,"skipped":6330,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:41:54.946: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename hostport
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in hostport-5265
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
May 16 17:41:55.116: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
May 16 17:41:57.124: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.76.3 on the node which pod1 resides and expect scheduled
May 16 17:41:57.141: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
May 16 17:41:59.149: INFO: The status of Pod pod2 is Running (Ready = false)
May 16 17:42:01.149: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.76.3 but use UDP protocol on the node which pod2 resides
May 16 17:42:01.178: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
May 16 17:42:03.187: INFO: The status of Pod pod3 is Running (Ready = true)
May 16 17:42:03.202: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
May 16 17:42:05.213: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
May 16 17:42:05.218: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.76.3 http://127.0.0.1:54323/hostname] Namespace:hostport-5265 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:42:05.218: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:42:05.219: INFO: ExecWithOptions: Clientset creation
May 16 17:42:05.219: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-5265/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.76.3+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.76.3, port: 54323
May 16 17:42:05.314: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.76.3:54323/hostname] Namespace:hostport-5265 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:42:05.314: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:42:05.315: INFO: ExecWithOptions: Clientset creation
May 16 17:42:05.315: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-5265/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.76.3%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.76.3, port: 54323 UDP
May 16 17:42:05.412: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 172.31.76.3 54323] Namespace:hostport-5265 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:42:05.412: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:42:05.413: INFO: ExecWithOptions: Clientset creation
May 16 17:42:05.413: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-5265/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+172.31.76.3+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/framework.go:188
May 16 17:42:10.500: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-5265" for this suite.

• [SLOW TEST:15.575 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":356,"completed":337,"skipped":6352,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:42:10.521: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3460
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-5ea48836-c0e3-4154-bffa-98c9b40bbfb6
STEP: Creating a pod to test consume configMaps
May 16 17:42:10.681: INFO: Waiting up to 5m0s for pod "pod-configmaps-76678315-4aa3-4102-931c-9de4eb89c4b6" in namespace "configmap-3460" to be "Succeeded or Failed"
May 16 17:42:10.704: INFO: Pod "pod-configmaps-76678315-4aa3-4102-931c-9de4eb89c4b6": Phase="Pending", Reason="", readiness=false. Elapsed: 22.546858ms
May 16 17:42:12.712: INFO: Pod "pod-configmaps-76678315-4aa3-4102-931c-9de4eb89c4b6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030270863s
May 16 17:42:14.722: INFO: Pod "pod-configmaps-76678315-4aa3-4102-931c-9de4eb89c4b6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.04004849s
STEP: Saw pod success
May 16 17:42:14.722: INFO: Pod "pod-configmaps-76678315-4aa3-4102-931c-9de4eb89c4b6" satisfied condition "Succeeded or Failed"
May 16 17:42:14.727: INFO: Trying to get logs from node ip-172-31-36-36 pod pod-configmaps-76678315-4aa3-4102-931c-9de4eb89c4b6 container configmap-volume-test: <nil>
STEP: delete the pod
May 16 17:42:14.760: INFO: Waiting for pod pod-configmaps-76678315-4aa3-4102-931c-9de4eb89c4b6 to disappear
May 16 17:42:14.766: INFO: Pod pod-configmaps-76678315-4aa3-4102-931c-9de4eb89c4b6 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
May 16 17:42:14.766: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3460" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":338,"skipped":6372,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:42:14.782: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-2382
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service multi-endpoint-test in namespace services-2382
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2382 to expose endpoints map[]
May 16 17:42:14.954: INFO: successfully validated that service multi-endpoint-test in namespace services-2382 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-2382
May 16 17:42:14.979: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
May 16 17:42:16.988: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2382 to expose endpoints map[pod1:[100]]
May 16 17:42:17.011: INFO: successfully validated that service multi-endpoint-test in namespace services-2382 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-2382
May 16 17:42:17.025: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
May 16 17:42:19.033: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2382 to expose endpoints map[pod1:[100] pod2:[101]]
May 16 17:42:19.062: INFO: successfully validated that service multi-endpoint-test in namespace services-2382 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
May 16 17:42:19.062: INFO: Creating new exec pod
May 16 17:42:22.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-2382 exec execpodvdcdm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
May 16 17:42:22.223: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
May 16 17:42:22.223: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 17:42:22.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-2382 exec execpodvdcdm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.64 80'
May 16 17:42:22.375: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.64 80\nConnection to 10.152.183.64 80 port [tcp/http] succeeded!\n"
May 16 17:42:22.375: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 17:42:22.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-2382 exec execpodvdcdm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
May 16 17:42:22.505: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
May 16 17:42:22.505: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
May 16 17:42:22.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-2382 exec execpodvdcdm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.64 81'
May 16 17:42:22.644: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.64 81\nConnection to 10.152.183.64 81 port [tcp/*] succeeded!\n"
May 16 17:42:22.644: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-2382
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2382 to expose endpoints map[pod2:[101]]
May 16 17:42:22.694: INFO: successfully validated that service multi-endpoint-test in namespace services-2382 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-2382
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2382 to expose endpoints map[]
May 16 17:42:22.732: INFO: successfully validated that service multi-endpoint-test in namespace services-2382 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 17:42:22.766: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2382" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:8.019 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":356,"completed":339,"skipped":6405,"failed":0}
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:42:22.802: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-4261
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
May 16 17:42:22.943: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
May 16 17:42:27.052: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-4261" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":356,"completed":340,"skipped":6408,"failed":0}
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:42:27.072: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-7645
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
May 16 17:42:28.024: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 17:42:31.060: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:42:31.066: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:42:34.295: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-7645" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:7.309 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":356,"completed":341,"skipped":6410,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:42:34.383: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-4759
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
May 16 17:42:34.578: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-4759" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":356,"completed":342,"skipped":6458,"failed":0}
SSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:42:34.596: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5666
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-67e59469-0723-4c32-8b11-a31e0d891f25
STEP: Creating a pod to test consume configMaps
May 16 17:42:34.756: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-05e099b3-1a7c-41e2-a0e0-dacc2952f7c8" in namespace "projected-5666" to be "Succeeded or Failed"
May 16 17:42:34.762: INFO: Pod "pod-projected-configmaps-05e099b3-1a7c-41e2-a0e0-dacc2952f7c8": Phase="Pending", Reason="", readiness=false. Elapsed: 5.392945ms
May 16 17:42:36.772: INFO: Pod "pod-projected-configmaps-05e099b3-1a7c-41e2-a0e0-dacc2952f7c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015815654s
May 16 17:42:38.784: INFO: Pod "pod-projected-configmaps-05e099b3-1a7c-41e2-a0e0-dacc2952f7c8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027274091s
STEP: Saw pod success
May 16 17:42:38.784: INFO: Pod "pod-projected-configmaps-05e099b3-1a7c-41e2-a0e0-dacc2952f7c8" satisfied condition "Succeeded or Failed"
May 16 17:42:38.788: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-projected-configmaps-05e099b3-1a7c-41e2-a0e0-dacc2952f7c8 container agnhost-container: <nil>
STEP: delete the pod
May 16 17:42:38.839: INFO: Waiting for pod pod-projected-configmaps-05e099b3-1a7c-41e2-a0e0-dacc2952f7c8 to disappear
May 16 17:42:38.843: INFO: Pod pod-projected-configmaps-05e099b3-1a7c-41e2-a0e0-dacc2952f7c8 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
May 16 17:42:38.844: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5666" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":343,"skipped":6462,"failed":0}
S
------------------------------
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:42:38.858: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-2125
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
May 16 17:42:39.019: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2125  6209d337-44b2-409c-8822-c2d0d3875eac 39920 0 2022-05-16 17:42:39 +0000 UTC <nil> <nil> map[] map[kubernetes.io/psp:e2e-test-privileged-psp] [] []  [{e2e.test Update v1 2022-05-16 17:42:39 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-njdhg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.36,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-njdhg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
May 16 17:42:39.024: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
May 16 17:42:41.031: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
May 16 17:42:41.031: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2125 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:42:41.031: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:42:41.032: INFO: ExecWithOptions: Clientset creation
May 16 17:42:41.032: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2125/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod...
May 16 17:42:41.106: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2125 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
May 16 17:42:41.106: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:42:41.107: INFO: ExecWithOptions: Clientset creation
May 16 17:42:41.107: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2125/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
May 16 17:42:41.220: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
May 16 17:42:41.242: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-2125" for this suite.
•{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":356,"completed":344,"skipped":6463,"failed":0}
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:42:41.259: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4015
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:42:41.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-4015 version'
May 16 17:42:41.468: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
May 16 17:42:41.468: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.0\", GitCommit:\"4ce5a8954017644c5420bae81d72b09b735c21f0\", GitTreeState:\"clean\", BuildDate:\"2022-05-03T13:46:05Z\", GoVersion:\"go1.18.1\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.4\nServer Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.0\", GitCommit:\"4ce5a8954017644c5420bae81d72b09b735c21f0\", GitTreeState:\"clean\", BuildDate:\"2022-05-04T02:08:24Z\", GoVersion:\"go1.18.1\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 17:42:41.468: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4015" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":356,"completed":345,"skipped":6472,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:42:41.574: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8906
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 17:42:41.726: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f0f32501-dd1d-45cd-998b-1d4bcfd709ee" in namespace "downward-api-8906" to be "Succeeded or Failed"
May 16 17:42:41.732: INFO: Pod "downwardapi-volume-f0f32501-dd1d-45cd-998b-1d4bcfd709ee": Phase="Pending", Reason="", readiness=false. Elapsed: 5.40469ms
May 16 17:42:43.740: INFO: Pod "downwardapi-volume-f0f32501-dd1d-45cd-998b-1d4bcfd709ee": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014194104s
May 16 17:42:45.753: INFO: Pod "downwardapi-volume-f0f32501-dd1d-45cd-998b-1d4bcfd709ee": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026422269s
STEP: Saw pod success
May 16 17:42:45.753: INFO: Pod "downwardapi-volume-f0f32501-dd1d-45cd-998b-1d4bcfd709ee" satisfied condition "Succeeded or Failed"
May 16 17:42:45.757: INFO: Trying to get logs from node ip-172-31-76-3 pod downwardapi-volume-f0f32501-dd1d-45cd-998b-1d4bcfd709ee container client-container: <nil>
STEP: delete the pod
May 16 17:42:45.787: INFO: Waiting for pod downwardapi-volume-f0f32501-dd1d-45cd-998b-1d4bcfd709ee to disappear
May 16 17:42:45.791: INFO: Pod downwardapi-volume-f0f32501-dd1d-45cd-998b-1d4bcfd709ee no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
May 16 17:42:45.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8906" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":346,"skipped":6491,"failed":0}
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:42:45.806: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-7077
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-secret-g5pv
STEP: Creating a pod to test atomic-volume-subpath
May 16 17:42:45.974: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-g5pv" in namespace "subpath-7077" to be "Succeeded or Failed"
May 16 17:42:45.979: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Pending", Reason="", readiness=false. Elapsed: 5.212128ms
May 16 17:42:47.990: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Running", Reason="", readiness=true. Elapsed: 2.016290816s
May 16 17:42:49.999: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Running", Reason="", readiness=true. Elapsed: 4.024356736s
May 16 17:42:52.010: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Running", Reason="", readiness=true. Elapsed: 6.035652287s
May 16 17:42:54.020: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Running", Reason="", readiness=true. Elapsed: 8.046206016s
May 16 17:42:56.027: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Running", Reason="", readiness=true. Elapsed: 10.053034517s
May 16 17:42:58.038: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Running", Reason="", readiness=true. Elapsed: 12.063774498s
May 16 17:43:00.044: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Running", Reason="", readiness=true. Elapsed: 14.070301063s
May 16 17:43:02.057: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Running", Reason="", readiness=true. Elapsed: 16.08282917s
May 16 17:43:04.065: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Running", Reason="", readiness=true. Elapsed: 18.090968629s
May 16 17:43:06.072: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Running", Reason="", readiness=true. Elapsed: 20.097614871s
May 16 17:43:08.082: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Running", Reason="", readiness=false. Elapsed: 22.108288551s
May 16 17:43:10.090: INFO: Pod "pod-subpath-test-secret-g5pv": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.116225619s
STEP: Saw pod success
May 16 17:43:10.090: INFO: Pod "pod-subpath-test-secret-g5pv" satisfied condition "Succeeded or Failed"
May 16 17:43:10.095: INFO: Trying to get logs from node ip-172-31-76-3 pod pod-subpath-test-secret-g5pv container test-container-subpath-secret-g5pv: <nil>
STEP: delete the pod
May 16 17:43:10.135: INFO: Waiting for pod pod-subpath-test-secret-g5pv to disappear
May 16 17:43:10.140: INFO: Pod pod-subpath-test-secret-g5pv no longer exists
STEP: Deleting pod pod-subpath-test-secret-g5pv
May 16 17:43:10.140: INFO: Deleting pod "pod-subpath-test-secret-g5pv" in namespace "subpath-7077"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
May 16 17:43:10.145: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-7077" for this suite.

• [SLOW TEST:24.355 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]","total":356,"completed":347,"skipped":6497,"failed":0}
SSSSS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:43:10.161: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-7837
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
May 16 17:45:00.364: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-7837" for this suite.

• [SLOW TEST:110.239 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":356,"completed":348,"skipped":6502,"failed":0}
SSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:45:00.400: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-8969
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
May 16 17:45:00.608: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:45:00.608: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:45:00.613: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:45:00.613: INFO: Node ip-172-31-10-138 is running 0 daemon pod, expected 1
May 16 17:45:01.626: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:45:01.626: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:45:01.633: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:45:01.633: INFO: Node ip-172-31-10-138 is running 0 daemon pod, expected 1
May 16 17:45:02.831: INFO: DaemonSet pods can't tolerate node ip-172-31-1-104 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:45:02.831: INFO: DaemonSet pods can't tolerate node ip-172-31-91-183 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
May 16 17:45:02.837: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
May 16 17:45:02.837: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Getting /status
May 16 17:45:02.848: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
May 16 17:45:02.863: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
May 16 17:45:02.866: INFO: Observed &DaemonSet event: ADDED
May 16 17:45:02.866: INFO: Observed &DaemonSet event: MODIFIED
May 16 17:45:02.866: INFO: Observed &DaemonSet event: MODIFIED
May 16 17:45:02.866: INFO: Observed &DaemonSet event: MODIFIED
May 16 17:45:02.866: INFO: Observed &DaemonSet event: MODIFIED
May 16 17:45:02.866: INFO: Found daemon set daemon-set in namespace daemonsets-8969 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
May 16 17:45:02.866: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
May 16 17:45:02.879: INFO: Observed &DaemonSet event: ADDED
May 16 17:45:02.879: INFO: Observed &DaemonSet event: MODIFIED
May 16 17:45:02.879: INFO: Observed &DaemonSet event: MODIFIED
May 16 17:45:02.879: INFO: Observed &DaemonSet event: MODIFIED
May 16 17:45:02.879: INFO: Observed &DaemonSet event: MODIFIED
May 16 17:45:02.879: INFO: Observed daemon set daemon-set in namespace daemonsets-8969 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
May 16 17:45:02.879: INFO: Observed &DaemonSet event: MODIFIED
May 16 17:45:02.879: INFO: Found daemon set daemon-set in namespace daemonsets-8969 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
May 16 17:45:02.879: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8969, will wait for the garbage collector to delete the pods
May 16 17:45:02.951: INFO: Deleting DaemonSet.extensions daemon-set took: 10.44419ms
May 16 17:45:03.051: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.627541ms
May 16 17:45:05.463: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
May 16 17:45:05.463: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
May 16 17:45:05.470: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40457"},"items":null}

May 16 17:45:05.481: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40457"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
May 16 17:45:05.522: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-8969" for this suite.

• [SLOW TEST:5.148 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":356,"completed":349,"skipped":6506,"failed":0}
SSS
------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:45:05.548: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-2955
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
May 16 17:45:11.796: INFO: 80 pods remaining
May 16 17:45:11.796: INFO: 80 pods has nil DeletionTimestamp
May 16 17:45:11.796: INFO: 
May 16 17:45:12.862: INFO: 68 pods remaining
May 16 17:45:12.862: INFO: 68 pods has nil DeletionTimestamp
May 16 17:45:12.862: INFO: 
May 16 17:45:13.776: INFO: 60 pods remaining
May 16 17:45:13.776: INFO: 60 pods has nil DeletionTimestamp
May 16 17:45:13.776: INFO: 
May 16 17:45:14.785: INFO: 40 pods remaining
May 16 17:45:14.785: INFO: 40 pods has nil DeletionTimestamp
May 16 17:45:14.785: INFO: 
May 16 17:45:15.774: INFO: 31 pods remaining
May 16 17:45:15.774: INFO: 31 pods has nil DeletionTimestamp
May 16 17:45:15.774: INFO: 
May 16 17:45:16.788: INFO: 20 pods remaining
May 16 17:45:16.788: INFO: 20 pods has nil DeletionTimestamp
May 16 17:45:16.788: INFO: 
STEP: Gathering metrics
W0516 17:45:17.778361      17 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
May 16 17:45:17.778: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
May 16 17:45:17.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-2955" for this suite.

• [SLOW TEST:12.254 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":356,"completed":350,"skipped":6509,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:45:17.803: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-8978
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
May 16 17:45:17.958: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
May 16 17:45:20.575: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:45:31.507: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8978" for this suite.

• [SLOW TEST:13.728 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":356,"completed":351,"skipped":6524,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:45:31.531: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5736
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:756
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-5736
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-5736
I0516 17:45:31.746151      17 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5736, replica count: 2
I0516 17:45:34.797083      17 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
May 16 17:45:34.797: INFO: Creating new exec pod
May 16 17:45:37.837: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-5736 exec execpodsxtmg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
May 16 17:45:38.008: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
May 16 17:45:38.008: INFO: stdout: "externalname-service-j7hvl"
May 16 17:45:38.008: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-5736 exec execpodsxtmg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.149 80'
May 16 17:45:38.149: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.149 80\nConnection to 10.152.183.149 80 port [tcp/http] succeeded!\n"
May 16 17:45:38.149: INFO: stdout: "externalname-service-j7hvl"
May 16 17:45:38.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-5736 exec execpodsxtmg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.76.3 32226'
May 16 17:45:38.299: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.76.3 32226\nConnection to 172.31.76.3 32226 port [tcp/*] succeeded!\n"
May 16 17:45:38.300: INFO: stdout: "externalname-service-j7hvl"
May 16 17:45:38.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-5736 exec execpodsxtmg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.36.36 32226'
May 16 17:45:38.434: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.36.36 32226\nConnection to 172.31.36.36 32226 port [tcp/*] succeeded!\n"
May 16 17:45:38.434: INFO: stdout: ""
May 16 17:45:39.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=services-5736 exec execpodsxtmg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.36.36 32226'
May 16 17:45:39.569: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 172.31.36.36 32226\nConnection to 172.31.36.36 32226 port [tcp/*] succeeded!\n"
May 16 17:45:39.569: INFO: stdout: "externalname-service-j7hvl"
May 16 17:45:39.569: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
May 16 17:45:39.629: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5736" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:760

• [SLOW TEST:8.117 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":356,"completed":352,"skipped":6527,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:45:39.648: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9737
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
May 16 17:45:39.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-9737 create -f -'
May 16 17:45:40.349: INFO: stderr: ""
May 16 17:45:40.349: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
May 16 17:45:40.349: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-9737 create -f -'
May 16 17:45:40.526: INFO: stderr: ""
May 16 17:45:40.526: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
May 16 17:45:41.534: INFO: Selector matched 1 pods for map[app:agnhost]
May 16 17:45:41.534: INFO: Found 0 / 1
May 16 17:45:42.534: INFO: Selector matched 1 pods for map[app:agnhost]
May 16 17:45:42.534: INFO: Found 1 / 1
May 16 17:45:42.534: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
May 16 17:45:42.539: INFO: Selector matched 1 pods for map[app:agnhost]
May 16 17:45:42.539: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
May 16 17:45:42.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-9737 describe pod agnhost-primary-z45xb'
May 16 17:45:42.619: INFO: stderr: ""
May 16 17:45:42.619: INFO: stdout: "Name:         agnhost-primary-z45xb\nNamespace:    kubectl-9737\nPriority:     0\nNode:         ip-172-31-76-3/172.31.76.3\nStart Time:   Mon, 16 May 2022 17:45:40 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  kubernetes.io/psp: e2e-test-privileged-psp\nStatus:       Running\nIP:           192.168.238.183\nIPs:\n  IP:           192.168.238.183\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://717dc8abb2015e39cdb2e5ec869d29ac3ae1f27b37baece70cddb915f0158f58\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.36\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:f5241226198f5a54d22540acf2b3933ea0f49458f90c51fc75833d0c428687b8\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 16 May 2022 17:45:41 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-5xsnb (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-5xsnb:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-9737/agnhost-primary-z45xb to ip-172-31-76-3\n  Normal  Pulled     1s    kubelet            Container image \"k8s.gcr.io/e2e-test-images/agnhost:2.36\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
May 16 17:45:42.619: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-9737 describe rc agnhost-primary'
May 16 17:45:42.696: INFO: stderr: ""
May 16 17:45:42.696: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9737\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.36\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-z45xb\n"
May 16 17:45:42.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-9737 describe service agnhost-primary'
May 16 17:45:42.773: INFO: stderr: ""
May 16 17:45:42.773: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-9737\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.225\nIPs:               10.152.183.225\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.238.183:6379\nSession Affinity:  None\nEvents:            <none>\n"
May 16 17:45:42.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-9737 describe node ip-172-31-1-104'
May 16 17:45:42.869: INFO: stderr: ""
May 16 17:45:42.869: INFO: stdout: "Name:               ip-172-31-1-104\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-1-104\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 16 May 2022 15:58:07 +0000\nTaints:             juju.is/kubernetes-control-plane=true:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-1-104\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 16 May 2022 17:45:38 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Mon, 16 May 2022 17:44:34 +0000   Mon, 16 May 2022 15:58:07 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Mon, 16 May 2022 17:44:34 +0000   Mon, 16 May 2022 15:58:07 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Mon, 16 May 2022 17:44:34 +0000   Mon, 16 May 2022 15:58:07 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Mon, 16 May 2022 17:44:34 +0000   Mon, 16 May 2022 15:58:17 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.1.104\n  Hostname:    ip-172-31-1-104\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16197480Ki\n  hugepages-2Mi:      0\n  memory:             8139464Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14927597544\n  hugepages-2Mi:      0\n  memory:             8037064Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 211b1b82acc74589a659a4c617f32d6e\n  System UUID:                ec28cc16-0d31-39c1-367a-4efd5ec30ae0\n  Boot ID:                    8c0d47df-d4ef-4481-8b21-433a23be6e76\n  Kernel Version:             5.13.0-1023-aws\n  OS Image:                   Ubuntu 20.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.5.9\n  Kubelet Version:            v1.24.0\n  Kube-Proxy Version:         v1.24.0\nNon-terminated Pods:          (1 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-cc1b83b3c93b42b1-gdlrb    0 (0%)        0 (0%)      0 (0%)           0 (0%)         93m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests  Limits\n  --------           --------  ------\n  cpu                0 (0%)    0 (0%)\n  memory             0 (0%)    0 (0%)\n  ephemeral-storage  0 (0%)    0 (0%)\n  hugepages-2Mi      0 (0%)    0 (0%)\nEvents:              <none>\n"
May 16 17:45:42.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-728527620 --namespace=kubectl-9737 describe namespace kubectl-9737'
May 16 17:45:42.943: INFO: stderr: ""
May 16 17:45:42.943: INFO: stdout: "Name:         kubectl-9737\nLabels:       e2e-framework=kubectl\n              e2e-run=dcf601f8-d482-4a7b-8938-87e197cd3268\n              kubernetes.io/metadata.name=kubectl-9737\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
May 16 17:45:42.943: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9737" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":356,"completed":353,"skipped":6534,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:45:42.966: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9511
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
May 16 17:45:43.123: INFO: Waiting up to 5m0s for pod "downwardapi-volume-15089d56-049b-4c5f-badf-577366c711c9" in namespace "downward-api-9511" to be "Succeeded or Failed"
May 16 17:45:43.129: INFO: Pod "downwardapi-volume-15089d56-049b-4c5f-badf-577366c711c9": Phase="Pending", Reason="", readiness=false. Elapsed: 5.601531ms
May 16 17:45:45.139: INFO: Pod "downwardapi-volume-15089d56-049b-4c5f-badf-577366c711c9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015437331s
May 16 17:45:47.146: INFO: Pod "downwardapi-volume-15089d56-049b-4c5f-badf-577366c711c9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022687333s
STEP: Saw pod success
May 16 17:45:47.146: INFO: Pod "downwardapi-volume-15089d56-049b-4c5f-badf-577366c711c9" satisfied condition "Succeeded or Failed"
May 16 17:45:47.152: INFO: Trying to get logs from node ip-172-31-36-36 pod downwardapi-volume-15089d56-049b-4c5f-badf-577366c711c9 container client-container: <nil>
STEP: delete the pod
May 16 17:45:47.195: INFO: Waiting for pod downwardapi-volume-15089d56-049b-4c5f-badf-577366c711c9 to disappear
May 16 17:45:47.201: INFO: Pod downwardapi-volume-15089d56-049b-4c5f-badf-577366c711c9 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
May 16 17:45:47.201: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9511" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":356,"completed":354,"skipped":6568,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:45:47.219: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6458
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
May 16 17:45:47.732: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
May 16 17:45:50.769: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
May 16 17:45:51.129: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6458" for this suite.
STEP: Destroying namespace "webhook-6458-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":356,"completed":355,"skipped":6587,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
May 16 17:45:51.242: INFO: >>> kubeConfig: /tmp/kubeconfig-728527620
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-2656
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test service account token: 
May 16 17:45:51.394: INFO: Waiting up to 5m0s for pod "test-pod-6280a824-e4a5-43b2-a9cc-500b35ad2525" in namespace "svcaccounts-2656" to be "Succeeded or Failed"
May 16 17:45:51.399: INFO: Pod "test-pod-6280a824-e4a5-43b2-a9cc-500b35ad2525": Phase="Pending", Reason="", readiness=false. Elapsed: 5.447918ms
May 16 17:45:53.406: INFO: Pod "test-pod-6280a824-e4a5-43b2-a9cc-500b35ad2525": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012464728s
May 16 17:45:55.420: INFO: Pod "test-pod-6280a824-e4a5-43b2-a9cc-500b35ad2525": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026339343s
STEP: Saw pod success
May 16 17:45:55.420: INFO: Pod "test-pod-6280a824-e4a5-43b2-a9cc-500b35ad2525" satisfied condition "Succeeded or Failed"
May 16 17:45:55.425: INFO: Trying to get logs from node ip-172-31-76-3 pod test-pod-6280a824-e4a5-43b2-a9cc-500b35ad2525 container agnhost-container: <nil>
STEP: delete the pod
May 16 17:45:55.465: INFO: Waiting for pod test-pod-6280a824-e4a5-43b2-a9cc-500b35ad2525 to disappear
May 16 17:45:55.471: INFO: Pod test-pod-6280a824-e4a5-43b2-a9cc-500b35ad2525 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
May 16 17:45:55.471: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-2656" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":356,"completed":356,"skipped":6599,"failed":0}
SSSSSSSSSSMay 16 17:45:55.487: INFO: Running AfterSuite actions on all nodes
May 16 17:45:55.487: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func19.2
May 16 17:45:55.487: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func9.2
May 16 17:45:55.487: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
May 16 17:45:55.487: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
May 16 17:45:55.487: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
May 16 17:45:55.487: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
May 16 17:45:55.487: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
May 16 17:45:55.487: INFO: Running AfterSuite actions on node 1
May 16 17:45:55.487: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/sonobuoy/results/junit_01.xml
{"msg":"Test Suite completed","total":356,"completed":356,"skipped":6609,"failed":0}

Ran 356 of 6965 Specs in 5601.207 seconds
SUCCESS! -- 356 Passed | 0 Failed | 0 Pending | 6609 Skipped
PASS

Ginkgo ran 1 suite in 1h33m23.344794236s
Test Suite Passed
