Conformance test: not doing test setup.
I0702 23:59:18.495141    4513 e2e.go:129] Starting e2e run "3af540cc-070f-4ac2-8528-8ca4aea9e117" on Ginkgo node 1
{"msg":"Test Suite starting","total":356,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1656806358 - Will randomize all specs
Will run 356 of 6971 specs

Jul  2 23:59:20.854: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  2 23:59:20.855: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Jul  2 23:59:20.874: INFO: Waiting up to 10m0s for all pods (need at least 1) in namespace 'kube-system' to be running and ready
Jul  2 23:59:20.915: INFO: 27 / 27 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Jul  2 23:59:20.915: INFO: expected 13 pod replicas in namespace 'kube-system', 13 are Running and Ready.
Jul  2 23:59:20.915: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Jul  2 23:59:20.923: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'apiserver-proxy' (0 seconds elapsed)
Jul  2 23:59:20.923: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
Jul  2 23:59:20.923: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'csi-driver-node' (0 seconds elapsed)
Jul  2 23:59:20.923: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'egress-filter-applier' (0 seconds elapsed)
Jul  2 23:59:20.923: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy-worker-1-v1.24.2' (0 seconds elapsed)
Jul  2 23:59:20.923: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'node-exporter' (0 seconds elapsed)
Jul  2 23:59:20.923: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'node-problem-detector' (0 seconds elapsed)
Jul  2 23:59:20.923: INFO: e2e test version: v1.24.2
Jul  2 23:59:20.924: INFO: kube-apiserver version: v1.24.2
Jul  2 23:59:20.924: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  2 23:59:20.929: INFO: Cluster IP family: ipv4
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  2 23:59:20.930: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
W0702 23:59:20.943658    4513 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Jul  2 23:59:20.943: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
Jul  2 23:59:20.967: INFO: PSP annotation exists on dry run pod: "extensions.gardener.cloud.provider-openstack.csi-driver-node"; assuming PodSecurityPolicy is enabled
W0702 23:59:20.970005    4513 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0702 23:59:20.973461    4513 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Jul  2 23:59:20.980: INFO: Found ClusterRoles; assuming RBAC is enabled.
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8438
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-9b277fcf-f408-4c0d-ad6f-97753caf5b8c
STEP: Creating a pod to test consume secrets
Jul  2 23:59:21.113: INFO: Waiting up to 5m0s for pod "pod-secrets-b9b4f3e4-5ba0-4a33-9f8b-5be2023623ed" in namespace "secrets-8438" to be "Succeeded or Failed"
Jul  2 23:59:21.115: INFO: Pod "pod-secrets-b9b4f3e4-5ba0-4a33-9f8b-5be2023623ed": Phase="Pending", Reason="", readiness=false. Elapsed: 2.512653ms
Jul  2 23:59:23.121: INFO: Pod "pod-secrets-b9b4f3e4-5ba0-4a33-9f8b-5be2023623ed": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008183142s
Jul  2 23:59:25.128: INFO: Pod "pod-secrets-b9b4f3e4-5ba0-4a33-9f8b-5be2023623ed": Phase="Running", Reason="", readiness=true. Elapsed: 4.015370305s
Jul  2 23:59:27.132: INFO: Pod "pod-secrets-b9b4f3e4-5ba0-4a33-9f8b-5be2023623ed": Phase="Running", Reason="", readiness=false. Elapsed: 6.019357939s
Jul  2 23:59:29.136: INFO: Pod "pod-secrets-b9b4f3e4-5ba0-4a33-9f8b-5be2023623ed": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.023254962s
STEP: Saw pod success
Jul  2 23:59:29.136: INFO: Pod "pod-secrets-b9b4f3e4-5ba0-4a33-9f8b-5be2023623ed" satisfied condition "Succeeded or Failed"
Jul  2 23:59:29.139: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-secrets-b9b4f3e4-5ba0-4a33-9f8b-5be2023623ed container secret-volume-test: <nil>
STEP: delete the pod
Jul  2 23:59:29.164: INFO: Waiting for pod pod-secrets-b9b4f3e4-5ba0-4a33-9f8b-5be2023623ed to disappear
Jul  2 23:59:29.167: INFO: Pod pod-secrets-b9b4f3e4-5ba0-4a33-9f8b-5be2023623ed no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul  2 23:59:29.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8438" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":1,"skipped":57,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  2 23:59:29.177: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-1894
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override command
Jul  2 23:59:29.312: INFO: Waiting up to 5m0s for pod "client-containers-dddfe7df-1051-4f1e-a5ad-df6058062ade" in namespace "containers-1894" to be "Succeeded or Failed"
Jul  2 23:59:29.314: INFO: Pod "client-containers-dddfe7df-1051-4f1e-a5ad-df6058062ade": Phase="Pending", Reason="", readiness=false. Elapsed: 2.346352ms
Jul  2 23:59:31.318: INFO: Pod "client-containers-dddfe7df-1051-4f1e-a5ad-df6058062ade": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006510748s
Jul  2 23:59:33.323: INFO: Pod "client-containers-dddfe7df-1051-4f1e-a5ad-df6058062ade": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011158607s
STEP: Saw pod success
Jul  2 23:59:33.323: INFO: Pod "client-containers-dddfe7df-1051-4f1e-a5ad-df6058062ade" satisfied condition "Succeeded or Failed"
Jul  2 23:59:33.326: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod client-containers-dddfe7df-1051-4f1e-a5ad-df6058062ade container agnhost-container: <nil>
STEP: delete the pod
Jul  2 23:59:33.340: INFO: Waiting for pod client-containers-dddfe7df-1051-4f1e-a5ad-df6058062ade to disappear
Jul  2 23:59:33.342: INFO: Pod client-containers-dddfe7df-1051-4f1e-a5ad-df6058062ade no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jul  2 23:59:33.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-1894" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]","total":356,"completed":2,"skipped":82,"failed":0}

------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  2 23:59:33.349: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-5973
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul  2 23:59:33.491: INFO: The status of Pod busybox-scheduling-83f0d8be-2b93-493f-89de-5c28d0064b74 is Pending, waiting for it to be Running (with Ready = true)
Jul  2 23:59:35.494: INFO: The status of Pod busybox-scheduling-83f0d8be-2b93-493f-89de-5c28d0064b74 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jul  2 23:59:35.520: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-5973" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":356,"completed":3,"skipped":82,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  2 23:59:35.528: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-1162
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
Jul  2 23:59:35.654: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  2 23:59:38.194: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  2 23:59:51.897: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-1162" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":356,"completed":4,"skipped":97,"failed":0}
SSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  2 23:59:51.911: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-4225
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's args
Jul  2 23:59:52.043: INFO: Waiting up to 5m0s for pod "var-expansion-20c67dac-aa06-4979-b64e-0335141f6da5" in namespace "var-expansion-4225" to be "Succeeded or Failed"
Jul  2 23:59:52.045: INFO: Pod "var-expansion-20c67dac-aa06-4979-b64e-0335141f6da5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.452026ms
Jul  2 23:59:54.051: INFO: Pod "var-expansion-20c67dac-aa06-4979-b64e-0335141f6da5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007589706s
Jul  2 23:59:56.055: INFO: Pod "var-expansion-20c67dac-aa06-4979-b64e-0335141f6da5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012543797s
STEP: Saw pod success
Jul  2 23:59:56.056: INFO: Pod "var-expansion-20c67dac-aa06-4979-b64e-0335141f6da5" satisfied condition "Succeeded or Failed"
Jul  2 23:59:56.058: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod var-expansion-20c67dac-aa06-4979-b64e-0335141f6da5 container dapi-container: <nil>
STEP: delete the pod
Jul  2 23:59:56.070: INFO: Waiting for pod var-expansion-20c67dac-aa06-4979-b64e-0335141f6da5 to disappear
Jul  2 23:59:56.072: INFO: Pod var-expansion-20c67dac-aa06-4979-b64e-0335141f6da5 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul  2 23:59:56.072: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-4225" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":356,"completed":5,"skipped":101,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  2 23:59:56.079: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8218
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul  2 23:59:56.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8218" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":356,"completed":6,"skipped":160,"failed":0}
S
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  2 23:59:56.226: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-116
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  2 23:59:56.356: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f654003e-4342-4ac1-bff6-68435807e4a6" in namespace "downward-api-116" to be "Succeeded or Failed"
Jul  2 23:59:56.358: INFO: Pod "downwardapi-volume-f654003e-4342-4ac1-bff6-68435807e4a6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.668557ms
Jul  2 23:59:58.363: INFO: Pod "downwardapi-volume-f654003e-4342-4ac1-bff6-68435807e4a6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007350449s
Jul  3 00:00:00.368: INFO: Pod "downwardapi-volume-f654003e-4342-4ac1-bff6-68435807e4a6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012643829s
STEP: Saw pod success
Jul  3 00:00:00.368: INFO: Pod "downwardapi-volume-f654003e-4342-4ac1-bff6-68435807e4a6" satisfied condition "Succeeded or Failed"
Jul  3 00:00:00.372: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-f654003e-4342-4ac1-bff6-68435807e4a6 container client-container: <nil>
STEP: delete the pod
Jul  3 00:00:00.387: INFO: Waiting for pod downwardapi-volume-f654003e-4342-4ac1-bff6-68435807e4a6 to disappear
Jul  3 00:00:00.390: INFO: Pod downwardapi-volume-f654003e-4342-4ac1-bff6-68435807e4a6 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul  3 00:00:00.390: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-116" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":7,"skipped":161,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:00:00.398: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9576
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-04e5d73b-0112-4bfe-ae4d-3d13cd3ff3a1
STEP: Creating a pod to test consume secrets
Jul  3 00:00:00.536: INFO: Waiting up to 5m0s for pod "pod-secrets-3f664349-540c-4867-86a6-ebbc5c64c0f1" in namespace "secrets-9576" to be "Succeeded or Failed"
Jul  3 00:00:00.539: INFO: Pod "pod-secrets-3f664349-540c-4867-86a6-ebbc5c64c0f1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.790573ms
Jul  3 00:00:02.548: INFO: Pod "pod-secrets-3f664349-540c-4867-86a6-ebbc5c64c0f1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011249511s
Jul  3 00:00:04.552: INFO: Pod "pod-secrets-3f664349-540c-4867-86a6-ebbc5c64c0f1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015649135s
STEP: Saw pod success
Jul  3 00:00:04.552: INFO: Pod "pod-secrets-3f664349-540c-4867-86a6-ebbc5c64c0f1" satisfied condition "Succeeded or Failed"
Jul  3 00:00:04.555: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-secrets-3f664349-540c-4867-86a6-ebbc5c64c0f1 container secret-volume-test: <nil>
STEP: delete the pod
Jul  3 00:00:04.569: INFO: Waiting for pod pod-secrets-3f664349-540c-4867-86a6-ebbc5c64c0f1 to disappear
Jul  3 00:00:04.571: INFO: Pod pod-secrets-3f664349-540c-4867-86a6-ebbc5c64c0f1 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul  3 00:00:04.571: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9576" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":8,"skipped":183,"failed":0}
S
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:00:04.580: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-222
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:00:04.744: INFO: Pod name rollover-pod: Found 0 pods out of 1
Jul  3 00:00:09.749: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jul  3 00:00:17.857: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Jul  3 00:00:19.862: INFO: Creating deployment "test-rollover-deployment"
Jul  3 00:00:19.869: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Jul  3 00:00:21.876: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Jul  3 00:00:21.884: INFO: Ensure that both replica sets have 1 created replica
Jul  3 00:00:21.889: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Jul  3 00:00:21.898: INFO: Updating deployment test-rollover-deployment
Jul  3 00:00:21.898: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Jul  3 00:00:23.905: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Jul  3 00:00:23.910: INFO: Make sure deployment "test-rollover-deployment" is complete
Jul  3 00:00:23.915: INFO: all replica sets need to contain the pod-template-hash label
Jul  3 00:00:23.915: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 0, 23, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul  3 00:00:25.924: INFO: all replica sets need to contain the pod-template-hash label
Jul  3 00:00:25.924: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 0, 23, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul  3 00:00:27.923: INFO: all replica sets need to contain the pod-template-hash label
Jul  3 00:00:27.923: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 0, 23, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul  3 00:00:29.923: INFO: all replica sets need to contain the pod-template-hash label
Jul  3 00:00:29.923: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 0, 23, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul  3 00:00:31.924: INFO: all replica sets need to contain the pod-template-hash label
Jul  3 00:00:31.924: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 0, 23, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 0, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul  3 00:00:33.922: INFO: 
Jul  3 00:00:33.922: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul  3 00:00:33.930: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-222  f0612de2-9211-45a4-8b37-ed2d85e45b50 4821 2 2022-07-03 00:00:19 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-07-03 00:00:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:00:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc005543fa8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-07-03 00:00:19 +0000 UTC,LastTransitionTime:2022-07-03 00:00:19 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-779c67f4f8" has successfully progressed.,LastUpdateTime:2022-07-03 00:00:33 +0000 UTC,LastTransitionTime:2022-07-03 00:00:19 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jul  3 00:00:33.933: INFO: New ReplicaSet "test-rollover-deployment-779c67f4f8" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-779c67f4f8  deployment-222  b0753c22-f382-49f9-8bdb-c31646e1baed 4814 2 2022-07-03 00:00:21 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment f0612de2-9211-45a4-8b37-ed2d85e45b50 0xc0055983e7 0xc0055983e8}] []  [{kube-controller-manager Update apps/v1 2022-07-03 00:00:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f0612de2-9211-45a4-8b37-ed2d85e45b50\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:00:33 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 779c67f4f8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0055984d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jul  3 00:00:33.933: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Jul  3 00:00:33.933: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-222  8e7e3378-b9b2-4684-8721-ef5c5f50203a 4820 2 2022-07-03 00:00:04 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment f0612de2-9211-45a4-8b37-ed2d85e45b50 0xc00559825f 0xc005598270}] []  [{e2e.test Update apps/v1 2022-07-03 00:00:04 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:00:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f0612de2-9211-45a4-8b37-ed2d85e45b50\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:00:33 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc005598388 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jul  3 00:00:33.933: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-87f8f6dcf  deployment-222  ce561597-2a15-4834-ad4d-d3d8dbc2cf36 4755 2 2022-07-03 00:00:19 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment f0612de2-9211-45a4-8b37-ed2d85e45b50 0xc005598530 0xc005598531}] []  [{kube-controller-manager Update apps/v1 2022-07-03 00:00:19 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f0612de2-9211-45a4-8b37-ed2d85e45b50\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:00:21 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 87f8f6dcf,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0055985e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jul  3 00:00:33.942: INFO: Pod "test-rollover-deployment-779c67f4f8-bnrgm" is available:
&Pod{ObjectMeta:{test-rollover-deployment-779c67f4f8-bnrgm test-rollover-deployment-779c67f4f8- deployment-222  bb103be0-0cde-410f-afc0-e0a93bf71676 4769 0 2022-07-03 00:00:21 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[cni.projectcalico.org/containerID:96bef68f4810a20cca1df129fcc26425c1883fa2c35a6906819f4da7bcd9557b cni.projectcalico.org/podIP:100.64.1.17/32 cni.projectcalico.org/podIPs:100.64.1.17/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rollover-deployment-779c67f4f8 b0753c22-f382-49f9-8bdb-c31646e1baed 0xc005409e67 0xc005409e68}] []  [{kube-controller-manager Update v1 2022-07-03 00:00:21 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b0753c22-f382-49f9-8bdb-c31646e1baed\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 00:00:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 00:00:23 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.1.17\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8zxkl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8zxkl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:00:21 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:00:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:00:23 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:00:21 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:100.64.1.17,StartTime:2022-07-03 00:00:21 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 00:00:22 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://b13d59bd1051ef8adc53d9cbf848f8577a90f87f3d9faf22346d3cffb452c6db,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.1.17,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul  3 00:00:33.942: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-222" for this suite.
•{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":356,"completed":9,"skipped":184,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:00:33.951: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4411
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:00:34.406: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:00:37.424: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:00:37.435: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7699-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:00:40.651: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4411" for this suite.
STEP: Destroying namespace "webhook-4411-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":356,"completed":10,"skipped":189,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:00:40.684: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-8386
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jul  3 00:00:40.826: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-8386" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":356,"completed":11,"skipped":198,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:00:40.833: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-1227
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jul  3 00:00:40.976: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-1227" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":356,"completed":12,"skipped":209,"failed":0}
SS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:00:40.983: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-146
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-574090d4-fd12-4da9-a698-2be13f7a796e
STEP: Creating a pod to test consume configMaps
Jul  3 00:00:41.122: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-2d57f5e0-f558-4216-becf-8794d1088192" in namespace "projected-146" to be "Succeeded or Failed"
Jul  3 00:00:41.125: INFO: Pod "pod-projected-configmaps-2d57f5e0-f558-4216-becf-8794d1088192": Phase="Pending", Reason="", readiness=false. Elapsed: 2.970763ms
Jul  3 00:00:43.129: INFO: Pod "pod-projected-configmaps-2d57f5e0-f558-4216-becf-8794d1088192": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006742341s
Jul  3 00:00:45.134: INFO: Pod "pod-projected-configmaps-2d57f5e0-f558-4216-becf-8794d1088192": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01229451s
STEP: Saw pod success
Jul  3 00:00:45.134: INFO: Pod "pod-projected-configmaps-2d57f5e0-f558-4216-becf-8794d1088192" satisfied condition "Succeeded or Failed"
Jul  3 00:00:45.138: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-configmaps-2d57f5e0-f558-4216-becf-8794d1088192 container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:00:45.154: INFO: Waiting for pod pod-projected-configmaps-2d57f5e0-f558-4216-becf-8794d1088192 to disappear
Jul  3 00:00:45.157: INFO: Pod pod-projected-configmaps-2d57f5e0-f558-4216-becf-8794d1088192 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul  3 00:00:45.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-146" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":13,"skipped":211,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:00:45.166: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-7373
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:00:45.292: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename disruption-2
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2-4524
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-7373
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:188
Jul  3 00:00:51.466: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-4524" for this suite.
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jul  3 00:00:51.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-7373" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":356,"completed":14,"skipped":222,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:00:51.481: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-6501
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:00:51.606: INFO: Got root ca configmap in namespace "svcaccounts-6501"
Jul  3 00:00:51.609: INFO: Deleted root ca configmap in namespace "svcaccounts-6501"
STEP: waiting for a new root ca configmap created
Jul  3 00:00:52.114: INFO: Recreated root ca configmap in namespace "svcaccounts-6501"
Jul  3 00:00:52.118: INFO: Updated root ca configmap in namespace "svcaccounts-6501"
STEP: waiting for the root ca configmap reconciled
Jul  3 00:00:52.622: INFO: Reconciled root ca configmap in namespace "svcaccounts-6501"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jul  3 00:00:52.622: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-6501" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":356,"completed":15,"skipped":237,"failed":0}
SS
------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:00:52.629: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3497
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-c587020c-79a4-4ccb-b739-96492eb51a2c
STEP: Creating a pod to test consume configMaps
Jul  3 00:00:52.765: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-86aa2159-c0de-48de-8f5e-c6e1288d55b9" in namespace "projected-3497" to be "Succeeded or Failed"
Jul  3 00:00:52.767: INFO: Pod "pod-projected-configmaps-86aa2159-c0de-48de-8f5e-c6e1288d55b9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.350521ms
Jul  3 00:00:54.772: INFO: Pod "pod-projected-configmaps-86aa2159-c0de-48de-8f5e-c6e1288d55b9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00749121s
Jul  3 00:00:56.777: INFO: Pod "pod-projected-configmaps-86aa2159-c0de-48de-8f5e-c6e1288d55b9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012515067s
STEP: Saw pod success
Jul  3 00:00:56.777: INFO: Pod "pod-projected-configmaps-86aa2159-c0de-48de-8f5e-c6e1288d55b9" satisfied condition "Succeeded or Failed"
Jul  3 00:00:56.781: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-configmaps-86aa2159-c0de-48de-8f5e-c6e1288d55b9 container projected-configmap-volume-test: <nil>
STEP: delete the pod
Jul  3 00:00:56.797: INFO: Waiting for pod pod-projected-configmaps-86aa2159-c0de-48de-8f5e-c6e1288d55b9 to disappear
Jul  3 00:00:56.799: INFO: Pod pod-projected-configmaps-86aa2159-c0de-48de-8f5e-c6e1288d55b9 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul  3 00:00:56.800: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3497" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":16,"skipped":239,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:00:56.808: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-6999
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jul  3 00:02:00.957: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-6999" for this suite.
•{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":356,"completed":17,"skipped":277,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:02:00.965: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6822
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:02:01.334: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:02:04.353: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:02:04.478: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6822" for this suite.
STEP: Destroying namespace "webhook-6822-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":356,"completed":18,"skipped":289,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:02:04.527: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6264
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:02:05.075: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:02:08.100: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:02:08.327: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6264" for this suite.
STEP: Destroying namespace "webhook-6264-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":356,"completed":19,"skipped":302,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:02:08.363: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7854
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:02:08.657: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:02:11.679: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the crd webhook via the AdmissionRegistration API
STEP: Creating a custom resource definition that should be denied by the webhook
Jul  3 00:02:11.728: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:02:11.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7854" for this suite.
STEP: Destroying namespace "webhook-7854-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":356,"completed":20,"skipped":314,"failed":0}
SSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:02:11.860: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9810
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-e6bdb8c8-7acc-48ff-af74-3f0a328bb22e
STEP: Creating a pod to test consume configMaps
Jul  3 00:02:12.001: INFO: Waiting up to 5m0s for pod "pod-configmaps-5a8d02cd-1729-4d79-89a0-612a6577051d" in namespace "configmap-9810" to be "Succeeded or Failed"
Jul  3 00:02:12.004: INFO: Pod "pod-configmaps-5a8d02cd-1729-4d79-89a0-612a6577051d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.766722ms
Jul  3 00:02:14.009: INFO: Pod "pod-configmaps-5a8d02cd-1729-4d79-89a0-612a6577051d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008248649s
Jul  3 00:02:16.015: INFO: Pod "pod-configmaps-5a8d02cd-1729-4d79-89a0-612a6577051d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013847712s
STEP: Saw pod success
Jul  3 00:02:16.015: INFO: Pod "pod-configmaps-5a8d02cd-1729-4d79-89a0-612a6577051d" satisfied condition "Succeeded or Failed"
Jul  3 00:02:16.018: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-configmaps-5a8d02cd-1729-4d79-89a0-612a6577051d container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:02:16.037: INFO: Waiting for pod pod-configmaps-5a8d02cd-1729-4d79-89a0-612a6577051d to disappear
Jul  3 00:02:16.040: INFO: Pod pod-configmaps-5a8d02cd-1729-4d79-89a0-612a6577051d no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 00:02:16.040: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9810" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":21,"skipped":320,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:02:16.050: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslicemirroring-4010
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
STEP: mirroring a new custom Endpoint
Jul  3 00:02:16.202: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
STEP: mirroring deletion of a custom Endpoint
Jul  3 00:02:18.221: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:188
Jul  3 00:02:20.227: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-4010" for this suite.
•{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":356,"completed":22,"skipped":339,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:02:20.237: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-9510
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jul  3 00:02:20.383: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:02:22.389: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:02:24.387: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:02:26.388: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jul  3 00:02:26.403: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:02:28.408: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Jul  3 00:02:28.434: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jul  3 00:02:28.438: INFO: Pod pod-with-poststart-exec-hook still exists
Jul  3 00:02:30.440: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jul  3 00:02:30.444: INFO: Pod pod-with-poststart-exec-hook still exists
Jul  3 00:02:32.439: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jul  3 00:02:32.443: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jul  3 00:02:32.444: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-9510" for this suite.
•{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":356,"completed":23,"skipped":400,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:02:32.453: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-7247
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-7247
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jul  3 00:02:32.581: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jul  3 00:02:32.610: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:02:34.615: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:02:36.616: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:02:38.615: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:02:40.615: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:02:42.616: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:02:44.615: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:02:46.614: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:02:48.614: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:02:50.616: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:02:52.615: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:02:54.615: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jul  3 00:02:54.621: INFO: The status of Pod netserver-1 is Running (Ready = true)
STEP: Creating test pods
Jul  3 00:02:56.644: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Jul  3 00:02:56.644: INFO: Breadth first check of 100.64.1.28 on host 10.250.2.183...
Jul  3 00:02:56.647: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://100.64.1.29:9080/dial?request=hostname&protocol=udp&host=100.64.1.28&port=8081&tries=1'] Namespace:pod-network-test-7247 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:02:56.647: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:02:56.648: INFO: ExecWithOptions: Clientset creation
Jul  3 00:02:56.648: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/pod-network-test-7247/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F100.64.1.29%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D100.64.1.28%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jul  3 00:02:56.895: INFO: Waiting for responses: map[]
Jul  3 00:02:56.895: INFO: reached 100.64.1.28 after 0/1 tries
Jul  3 00:02:56.895: INFO: Breadth first check of 100.64.0.15 on host 10.250.2.84...
Jul  3 00:02:56.899: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://100.64.1.29:9080/dial?request=hostname&protocol=udp&host=100.64.0.15&port=8081&tries=1'] Namespace:pod-network-test-7247 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:02:56.899: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:02:56.899: INFO: ExecWithOptions: Clientset creation
Jul  3 00:02:56.899: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/pod-network-test-7247/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F100.64.1.29%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D100.64.0.15%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jul  3 00:02:57.087: INFO: Waiting for responses: map[]
Jul  3 00:02:57.087: INFO: reached 100.64.0.15 after 0/1 tries
Jul  3 00:02:57.087: INFO: Going to retry 0 out of 2 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jul  3 00:02:57.087: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-7247" for this suite.
•{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":356,"completed":24,"skipped":420,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:02:57.101: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-683
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a collection of services
Jul  3 00:02:57.240: INFO: Creating e2e-svc-a-jkhlb
Jul  3 00:02:57.252: INFO: Creating e2e-svc-b-tzxch
Jul  3 00:02:57.260: INFO: Creating e2e-svc-c-r4xpd
STEP: deleting service collection
Jul  3 00:02:57.296: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 00:02:57.296: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-683" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":356,"completed":25,"skipped":433,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:02:57.309: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4279
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jul  3 00:02:57.472: INFO: The status of Pod labelsupdatee515faaf-c202-442f-b5b2-d3061fb0f6df is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:02:59.477: INFO: The status of Pod labelsupdatee515faaf-c202-442f-b5b2-d3061fb0f6df is Running (Ready = true)
Jul  3 00:03:00.010: INFO: Successfully updated pod "labelsupdatee515faaf-c202-442f-b5b2-d3061fb0f6df"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul  3 00:03:04.051: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4279" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":26,"skipped":453,"failed":0}
SSS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:03:04.060: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-4799
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-adcf0ef1-9acb-4405-98e9-ed3833858692 in namespace container-probe-4799
Jul  3 00:03:06.204: INFO: Started pod liveness-adcf0ef1-9acb-4405-98e9-ed3833858692 in namespace container-probe-4799
STEP: checking the pod's current state and verifying that restartCount is present
Jul  3 00:03:06.207: INFO: Initial restart count of pod liveness-adcf0ef1-9acb-4405-98e9-ed3833858692 is 0
Jul  3 00:03:26.261: INFO: Restart count of pod container-probe-4799/liveness-adcf0ef1-9acb-4405-98e9-ed3833858692 is now 1 (20.053942051s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul  3 00:03:26.267: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-4799" for this suite.
•{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":27,"skipped":456,"failed":0}
SS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:03:26.275: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-7620
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption is created
Jul  3 00:03:26.414: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:03:28.419: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jul  3 00:03:29.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-7620" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":356,"completed":28,"skipped":458,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:03:29.443: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7779
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 00:03:29.597: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7779" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":356,"completed":29,"skipped":491,"failed":0}
SSS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:03:29.604: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-7312
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
Jul  3 00:03:29.735: INFO: Pod name sample-pod: Found 0 pods out of 1
Jul  3 00:03:34.738: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jul  3 00:03:34.758: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-7312" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":356,"completed":30,"skipped":494,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:03:34.769: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2452
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:03:35.545: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:03:38.563: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:03:48.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2452" for this suite.
STEP: Destroying namespace "webhook-2452-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":356,"completed":31,"skipped":537,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:03:48.896: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-5693
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test env composition
Jul  3 00:03:49.047: INFO: Waiting up to 5m0s for pod "var-expansion-5da136a6-0bc0-4ef5-9247-6026fbcc4bf4" in namespace "var-expansion-5693" to be "Succeeded or Failed"
Jul  3 00:03:49.051: INFO: Pod "var-expansion-5da136a6-0bc0-4ef5-9247-6026fbcc4bf4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.286715ms
Jul  3 00:03:51.055: INFO: Pod "var-expansion-5da136a6-0bc0-4ef5-9247-6026fbcc4bf4": Phase="Running", Reason="", readiness=false. Elapsed: 2.008339142s
Jul  3 00:03:53.060: INFO: Pod "var-expansion-5da136a6-0bc0-4ef5-9247-6026fbcc4bf4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012865586s
STEP: Saw pod success
Jul  3 00:03:53.060: INFO: Pod "var-expansion-5da136a6-0bc0-4ef5-9247-6026fbcc4bf4" satisfied condition "Succeeded or Failed"
Jul  3 00:03:53.064: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod var-expansion-5da136a6-0bc0-4ef5-9247-6026fbcc4bf4 container dapi-container: <nil>
STEP: delete the pod
Jul  3 00:03:53.080: INFO: Waiting for pod var-expansion-5da136a6-0bc0-4ef5-9247-6026fbcc4bf4 to disappear
Jul  3 00:03:53.083: INFO: Pod var-expansion-5da136a6-0bc0-4ef5-9247-6026fbcc4bf4 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul  3 00:03:53.083: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-5693" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":356,"completed":32,"skipped":555,"failed":0}
SS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:03:53.091: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-2989
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jul  3 00:03:53.217: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jul  3 00:03:56.714: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-2989" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":356,"completed":33,"skipped":557,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:03:56.722: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2793
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:03:56.848: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Jul  3 00:03:56.858: INFO: Pod name sample-pod: Found 0 pods out of 1
Jul  3 00:04:01.865: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jul  3 00:04:01.865: INFO: Creating deployment "test-rolling-update-deployment"
Jul  3 00:04:01.868: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Jul  3 00:04:01.877: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Jul  3 00:04:03.885: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Jul  3 00:04:03.888: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul  3 00:04:03.897: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-2793  c6238aad-b03e-407d-b827-7b4a73d9c99d 6587 1 2022-07-03 00:04:01 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2022-07-03 00:04:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:04:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000cef0f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-07-03 00:04:01 +0000 UTC,LastTransitionTime:2022-07-03 00:04:01 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-67c8f74c6c" has successfully progressed.,LastUpdateTime:2022-07-03 00:04:02 +0000 UTC,LastTransitionTime:2022-07-03 00:04:01 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jul  3 00:04:03.901: INFO: New ReplicaSet "test-rolling-update-deployment-67c8f74c6c" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c  deployment-2793  c061c7f3-2782-4c25-b608-194ac6bbd7fc 6580 1 2022-07-03 00:04:01 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment c6238aad-b03e-407d-b827-7b4a73d9c99d 0xc00286c407 0xc00286c408}] []  [{kube-controller-manager Update apps/v1 2022-07-03 00:04:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6238aad-b03e-407d-b827-7b4a73d9c99d\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:04:02 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 67c8f74c6c,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00286c4b8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jul  3 00:04:03.901: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Jul  3 00:04:03.901: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-2793  f6766d65-a596-442b-95b8-e55cd189ea05 6586 2 2022-07-03 00:03:56 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment c6238aad-b03e-407d-b827-7b4a73d9c99d 0xc00286c2df 0xc00286c2f0}] []  [{e2e.test Update apps/v1 2022-07-03 00:03:56 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:04:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6238aad-b03e-407d-b827-7b4a73d9c99d\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:04:02 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00286c3a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jul  3 00:04:03.904: INFO: Pod "test-rolling-update-deployment-67c8f74c6c-bxsf9" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c-bxsf9 test-rolling-update-deployment-67c8f74c6c- deployment-2793  30871a45-8314-4af1-969d-5d5464a9c55b 6579 0 2022-07-03 00:04:01 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[cni.projectcalico.org/containerID:98d95a94aff05c9650b4119f10dbdd3e7e5e534d6a47f86ec43f77b6c8d1d32e cni.projectcalico.org/podIP:100.64.1.38/32 cni.projectcalico.org/podIPs:100.64.1.38/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rolling-update-deployment-67c8f74c6c c061c7f3-2782-4c25-b608-194ac6bbd7fc 0xc00286c917 0xc00286c918}] []  [{kube-controller-manager Update v1 2022-07-03 00:04:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c061c7f3-2782-4c25-b608-194ac6bbd7fc\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 00:04:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 00:04:02 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.1.38\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dgzh4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dgzh4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:04:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:04:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:04:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:04:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:100.64.1.38,StartTime:2022-07-03 00:04:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 00:04:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://5acf63e8d7d51311aa3d456ff58ba80fe0470f937ee9eddbfdb7354b02d6d0d6,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.1.38,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul  3 00:04:03.904: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2793" for this suite.
•{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":34,"skipped":602,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:04:03.913: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-1162
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
Jul  3 00:04:04.039: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
Jul  3 00:04:14.312: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:04:16.528: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:04:26.057: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-1162" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":356,"completed":35,"skipped":620,"failed":0}
SSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:04:26.074: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename certificates
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in certificates-6642
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jul  3 00:04:27.104: INFO: starting watch
STEP: patching
STEP: updating
Jul  3 00:04:27.115: INFO: waiting for watch events with expected annotations
Jul  3 00:04:27.115: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:04:27.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-6642" for this suite.
•{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":356,"completed":36,"skipped":625,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:04:27.159: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename svc-latency
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svc-latency-4379
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:04:27.281: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: creating replication controller svc-latency-rc in namespace svc-latency-4379
I0703 00:04:27.288560    4513 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4379, replica count: 1
I0703 00:04:28.339705    4513 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0703 00:04:29.340637    4513 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul  3 00:04:29.450: INFO: Created: latency-svc-mhcbm
Jul  3 00:04:29.455: INFO: Got endpoints: latency-svc-mhcbm [14.704587ms]
Jul  3 00:04:29.462: INFO: Created: latency-svc-j6dzr
Jul  3 00:04:29.465: INFO: Got endpoints: latency-svc-j6dzr [9.939669ms]
Jul  3 00:04:29.465: INFO: Created: latency-svc-zdpmq
Jul  3 00:04:29.468: INFO: Got endpoints: latency-svc-zdpmq [12.988723ms]
Jul  3 00:04:29.469: INFO: Created: latency-svc-fl72s
Jul  3 00:04:29.472: INFO: Got endpoints: latency-svc-fl72s [16.311895ms]
Jul  3 00:04:29.472: INFO: Created: latency-svc-t5275
Jul  3 00:04:29.475: INFO: Got endpoints: latency-svc-t5275 [19.566033ms]
Jul  3 00:04:29.476: INFO: Created: latency-svc-bksrh
Jul  3 00:04:29.479: INFO: Got endpoints: latency-svc-bksrh [22.971724ms]
Jul  3 00:04:29.479: INFO: Created: latency-svc-drmb2
Jul  3 00:04:29.483: INFO: Got endpoints: latency-svc-drmb2 [27.540215ms]
Jul  3 00:04:29.487: INFO: Created: latency-svc-hhv8x
Jul  3 00:04:29.490: INFO: Got endpoints: latency-svc-hhv8x [34.521671ms]
Jul  3 00:04:29.490: INFO: Created: latency-svc-hbzqw
Jul  3 00:04:29.493: INFO: Got endpoints: latency-svc-hbzqw [37.654023ms]
Jul  3 00:04:29.494: INFO: Created: latency-svc-cx8gc
Jul  3 00:04:29.496: INFO: Got endpoints: latency-svc-cx8gc [40.343729ms]
Jul  3 00:04:29.498: INFO: Created: latency-svc-2d9c7
Jul  3 00:04:29.501: INFO: Got endpoints: latency-svc-2d9c7 [45.715427ms]
Jul  3 00:04:29.502: INFO: Created: latency-svc-g6psb
Jul  3 00:04:29.522: INFO: Got endpoints: latency-svc-g6psb [66.428282ms]
Jul  3 00:04:29.523: INFO: Created: latency-svc-7rtz4
Jul  3 00:04:29.524: INFO: Created: latency-svc-m6p7f
Jul  3 00:04:29.525: INFO: Got endpoints: latency-svc-7rtz4 [69.714762ms]
Jul  3 00:04:29.527: INFO: Got endpoints: latency-svc-m6p7f [71.48393ms]
Jul  3 00:04:29.530: INFO: Created: latency-svc-qt5hr
Jul  3 00:04:29.534: INFO: Got endpoints: latency-svc-qt5hr [78.317399ms]
Jul  3 00:04:29.596: INFO: Created: latency-svc-vn79q
Jul  3 00:04:29.596: INFO: Created: latency-svc-sjqrh
Jul  3 00:04:29.596: INFO: Created: latency-svc-hzj6d
Jul  3 00:04:29.596: INFO: Created: latency-svc-qs575
Jul  3 00:04:29.597: INFO: Created: latency-svc-qwbtz
Jul  3 00:04:29.597: INFO: Created: latency-svc-w4fpq
Jul  3 00:04:29.597: INFO: Created: latency-svc-hv2vs
Jul  3 00:04:29.597: INFO: Created: latency-svc-7fqvp
Jul  3 00:04:29.597: INFO: Created: latency-svc-zz47m
Jul  3 00:04:29.597: INFO: Created: latency-svc-fv6fn
Jul  3 00:04:29.597: INFO: Created: latency-svc-cqlrz
Jul  3 00:04:29.597: INFO: Created: latency-svc-47fm7
Jul  3 00:04:29.597: INFO: Created: latency-svc-ksz5t
Jul  3 00:04:29.597: INFO: Created: latency-svc-59wwm
Jul  3 00:04:29.597: INFO: Created: latency-svc-qhx9g
Jul  3 00:04:29.600: INFO: Got endpoints: latency-svc-sjqrh [127.895161ms]
Jul  3 00:04:29.601: INFO: Got endpoints: latency-svc-vn79q [107.912068ms]
Jul  3 00:04:29.601: INFO: Got endpoints: latency-svc-hzj6d [67.205558ms]
Jul  3 00:04:29.602: INFO: Got endpoints: latency-svc-qwbtz [111.379867ms]
Jul  3 00:04:29.602: INFO: Got endpoints: latency-svc-hv2vs [118.860474ms]
Jul  3 00:04:29.604: INFO: Got endpoints: latency-svc-ksz5t [128.461939ms]
Jul  3 00:04:29.604: INFO: Got endpoints: latency-svc-qhx9g [136.095741ms]
Jul  3 00:04:29.604: INFO: Got endpoints: latency-svc-qs575 [139.145598ms]
Jul  3 00:04:29.605: INFO: Got endpoints: latency-svc-w4fpq [126.237757ms]
Jul  3 00:04:29.605: INFO: Got endpoints: latency-svc-zz47m [108.798864ms]
Jul  3 00:04:29.605: INFO: Got endpoints: latency-svc-59wwm [149.411941ms]
Jul  3 00:04:29.606: INFO: Got endpoints: latency-svc-47fm7 [104.184147ms]
Jul  3 00:04:29.606: INFO: Got endpoints: latency-svc-7fqvp [79.053016ms]
Jul  3 00:04:29.606: INFO: Got endpoints: latency-svc-fv6fn [84.180988ms]
Jul  3 00:04:29.610: INFO: Got endpoints: latency-svc-cqlrz [84.887306ms]
Jul  3 00:04:29.612: INFO: Created: latency-svc-2dbqp
Jul  3 00:04:29.616: INFO: Created: latency-svc-98ndh
Jul  3 00:04:29.616: INFO: Got endpoints: latency-svc-2dbqp [16.287763ms]
Jul  3 00:04:29.628: INFO: Got endpoints: latency-svc-98ndh [26.20842ms]
Jul  3 00:04:29.629: INFO: Created: latency-svc-266gs
Jul  3 00:04:29.632: INFO: Got endpoints: latency-svc-266gs [30.623121ms]
Jul  3 00:04:29.633: INFO: Created: latency-svc-lbhtd
Jul  3 00:04:29.636: INFO: Created: latency-svc-dx8s8
Jul  3 00:04:29.639: INFO: Created: latency-svc-wx8l6
Jul  3 00:04:29.643: INFO: Created: latency-svc-xw68k
Jul  3 00:04:29.653: INFO: Created: latency-svc-x7g6w
Jul  3 00:04:29.659: INFO: Created: latency-svc-2k5vf
Jul  3 00:04:29.659: INFO: Got endpoints: latency-svc-lbhtd [57.359883ms]
Jul  3 00:04:29.674: INFO: Created: latency-svc-x8xfd
Jul  3 00:04:29.676: INFO: Created: latency-svc-qvzkw
Jul  3 00:04:29.680: INFO: Created: latency-svc-vlzgq
Jul  3 00:04:29.684: INFO: Created: latency-svc-dwrzb
Jul  3 00:04:29.688: INFO: Created: latency-svc-6x7sq
Jul  3 00:04:29.693: INFO: Created: latency-svc-j6qjk
Jul  3 00:04:29.696: INFO: Created: latency-svc-ldftp
Jul  3 00:04:29.699: INFO: Created: latency-svc-22hg5
Jul  3 00:04:29.706: INFO: Got endpoints: latency-svc-dx8s8 [103.676456ms]
Jul  3 00:04:29.708: INFO: Created: latency-svc-8qlzd
Jul  3 00:04:29.713: INFO: Created: latency-svc-2vg7w
Jul  3 00:04:29.718: INFO: Created: latency-svc-skx5h
Jul  3 00:04:29.754: INFO: Got endpoints: latency-svc-wx8l6 [150.877637ms]
Jul  3 00:04:29.762: INFO: Created: latency-svc-6mp6v
Jul  3 00:04:29.807: INFO: Got endpoints: latency-svc-xw68k [202.921826ms]
Jul  3 00:04:29.816: INFO: Created: latency-svc-j58ct
Jul  3 00:04:29.854: INFO: Got endpoints: latency-svc-x7g6w [249.107056ms]
Jul  3 00:04:29.861: INFO: Created: latency-svc-7wrjl
Jul  3 00:04:29.904: INFO: Got endpoints: latency-svc-2k5vf [298.957541ms]
Jul  3 00:04:29.912: INFO: Created: latency-svc-8vwph
Jul  3 00:04:29.954: INFO: Got endpoints: latency-svc-x8xfd [348.501065ms]
Jul  3 00:04:29.962: INFO: Created: latency-svc-fvdvr
Jul  3 00:04:30.005: INFO: Got endpoints: latency-svc-qvzkw [400.305844ms]
Jul  3 00:04:30.016: INFO: Created: latency-svc-cfm7q
Jul  3 00:04:30.054: INFO: Got endpoints: latency-svc-vlzgq [448.008417ms]
Jul  3 00:04:30.061: INFO: Created: latency-svc-gfflr
Jul  3 00:04:30.105: INFO: Got endpoints: latency-svc-dwrzb [498.569251ms]
Jul  3 00:04:30.112: INFO: Created: latency-svc-r95xj
Jul  3 00:04:30.154: INFO: Got endpoints: latency-svc-6x7sq [547.714627ms]
Jul  3 00:04:30.162: INFO: Created: latency-svc-vd7gk
Jul  3 00:04:30.205: INFO: Got endpoints: latency-svc-j6qjk [595.013555ms]
Jul  3 00:04:30.214: INFO: Created: latency-svc-qw4v4
Jul  3 00:04:30.255: INFO: Got endpoints: latency-svc-ldftp [638.874089ms]
Jul  3 00:04:30.263: INFO: Created: latency-svc-hfdjx
Jul  3 00:04:30.304: INFO: Got endpoints: latency-svc-22hg5 [676.731019ms]
Jul  3 00:04:30.316: INFO: Created: latency-svc-glcvp
Jul  3 00:04:30.355: INFO: Got endpoints: latency-svc-8qlzd [722.831359ms]
Jul  3 00:04:30.365: INFO: Created: latency-svc-9pv2z
Jul  3 00:04:30.405: INFO: Got endpoints: latency-svc-2vg7w [746.113915ms]
Jul  3 00:04:30.414: INFO: Created: latency-svc-mrdw9
Jul  3 00:04:30.455: INFO: Got endpoints: latency-svc-skx5h [749.117495ms]
Jul  3 00:04:30.463: INFO: Created: latency-svc-zjczt
Jul  3 00:04:30.525: INFO: Got endpoints: latency-svc-6mp6v [770.217924ms]
Jul  3 00:04:30.534: INFO: Created: latency-svc-5qm6b
Jul  3 00:04:30.554: INFO: Got endpoints: latency-svc-j58ct [746.299309ms]
Jul  3 00:04:30.563: INFO: Created: latency-svc-b9kqk
Jul  3 00:04:30.604: INFO: Got endpoints: latency-svc-7wrjl [750.677235ms]
Jul  3 00:04:30.616: INFO: Created: latency-svc-77p7z
Jul  3 00:04:30.654: INFO: Got endpoints: latency-svc-8vwph [750.485522ms]
Jul  3 00:04:30.664: INFO: Created: latency-svc-cgnsz
Jul  3 00:04:30.705: INFO: Got endpoints: latency-svc-fvdvr [751.583666ms]
Jul  3 00:04:30.716: INFO: Created: latency-svc-q87vt
Jul  3 00:04:30.754: INFO: Got endpoints: latency-svc-cfm7q [749.194012ms]
Jul  3 00:04:30.765: INFO: Created: latency-svc-6698c
Jul  3 00:04:30.806: INFO: Got endpoints: latency-svc-gfflr [751.9575ms]
Jul  3 00:04:30.814: INFO: Created: latency-svc-jfvr6
Jul  3 00:04:30.856: INFO: Got endpoints: latency-svc-r95xj [750.677903ms]
Jul  3 00:04:30.864: INFO: Created: latency-svc-vrfvb
Jul  3 00:04:30.905: INFO: Got endpoints: latency-svc-vd7gk [750.873268ms]
Jul  3 00:04:30.914: INFO: Created: latency-svc-xjqbl
Jul  3 00:04:30.955: INFO: Got endpoints: latency-svc-qw4v4 [749.969552ms]
Jul  3 00:04:30.963: INFO: Created: latency-svc-7jvch
Jul  3 00:04:31.004: INFO: Got endpoints: latency-svc-hfdjx [749.42302ms]
Jul  3 00:04:31.012: INFO: Created: latency-svc-42cmz
Jul  3 00:04:31.054: INFO: Got endpoints: latency-svc-glcvp [749.919559ms]
Jul  3 00:04:31.064: INFO: Created: latency-svc-bkqdz
Jul  3 00:04:31.104: INFO: Got endpoints: latency-svc-9pv2z [749.56271ms]
Jul  3 00:04:31.117: INFO: Created: latency-svc-zcrxk
Jul  3 00:04:31.153: INFO: Got endpoints: latency-svc-mrdw9 [748.001529ms]
Jul  3 00:04:31.160: INFO: Created: latency-svc-s87w5
Jul  3 00:04:31.203: INFO: Got endpoints: latency-svc-zjczt [748.389617ms]
Jul  3 00:04:31.210: INFO: Created: latency-svc-74597
Jul  3 00:04:31.253: INFO: Got endpoints: latency-svc-5qm6b [728.312174ms]
Jul  3 00:04:31.260: INFO: Created: latency-svc-ww7qz
Jul  3 00:04:31.304: INFO: Got endpoints: latency-svc-b9kqk [749.909828ms]
Jul  3 00:04:31.311: INFO: Created: latency-svc-jgwfn
Jul  3 00:04:31.354: INFO: Got endpoints: latency-svc-77p7z [749.075786ms]
Jul  3 00:04:31.361: INFO: Created: latency-svc-x2l9m
Jul  3 00:04:31.404: INFO: Got endpoints: latency-svc-cgnsz [749.464123ms]
Jul  3 00:04:31.412: INFO: Created: latency-svc-d4l26
Jul  3 00:04:31.455: INFO: Got endpoints: latency-svc-q87vt [749.397373ms]
Jul  3 00:04:31.462: INFO: Created: latency-svc-s8wp7
Jul  3 00:04:31.505: INFO: Got endpoints: latency-svc-6698c [750.17101ms]
Jul  3 00:04:31.515: INFO: Created: latency-svc-n8p79
Jul  3 00:04:31.555: INFO: Got endpoints: latency-svc-jfvr6 [749.019534ms]
Jul  3 00:04:31.564: INFO: Created: latency-svc-wgs65
Jul  3 00:04:31.606: INFO: Got endpoints: latency-svc-vrfvb [749.964944ms]
Jul  3 00:04:31.614: INFO: Created: latency-svc-lbbfn
Jul  3 00:04:31.654: INFO: Got endpoints: latency-svc-xjqbl [748.631265ms]
Jul  3 00:04:31.664: INFO: Created: latency-svc-vzx84
Jul  3 00:04:31.706: INFO: Got endpoints: latency-svc-7jvch [750.856409ms]
Jul  3 00:04:31.714: INFO: Created: latency-svc-4gk49
Jul  3 00:04:31.755: INFO: Got endpoints: latency-svc-42cmz [750.842558ms]
Jul  3 00:04:31.765: INFO: Created: latency-svc-cp6f8
Jul  3 00:04:31.807: INFO: Got endpoints: latency-svc-bkqdz [752.195598ms]
Jul  3 00:04:31.815: INFO: Created: latency-svc-mmdlx
Jul  3 00:04:31.854: INFO: Got endpoints: latency-svc-zcrxk [749.903622ms]
Jul  3 00:04:31.863: INFO: Created: latency-svc-lrztm
Jul  3 00:04:31.904: INFO: Got endpoints: latency-svc-s87w5 [751.233711ms]
Jul  3 00:04:31.912: INFO: Created: latency-svc-mhf5g
Jul  3 00:04:31.957: INFO: Got endpoints: latency-svc-74597 [753.805805ms]
Jul  3 00:04:31.965: INFO: Created: latency-svc-c6lld
Jul  3 00:04:32.005: INFO: Got endpoints: latency-svc-ww7qz [751.782046ms]
Jul  3 00:04:32.013: INFO: Created: latency-svc-7xrtw
Jul  3 00:04:32.054: INFO: Got endpoints: latency-svc-jgwfn [750.298642ms]
Jul  3 00:04:32.067: INFO: Created: latency-svc-ktkb4
Jul  3 00:04:32.105: INFO: Got endpoints: latency-svc-x2l9m [751.476075ms]
Jul  3 00:04:32.113: INFO: Created: latency-svc-tpcbs
Jul  3 00:04:32.157: INFO: Got endpoints: latency-svc-d4l26 [752.669629ms]
Jul  3 00:04:32.167: INFO: Created: latency-svc-j96mh
Jul  3 00:04:32.204: INFO: Got endpoints: latency-svc-s8wp7 [749.780498ms]
Jul  3 00:04:32.212: INFO: Created: latency-svc-9hrk8
Jul  3 00:04:32.253: INFO: Got endpoints: latency-svc-n8p79 [748.701235ms]
Jul  3 00:04:32.260: INFO: Created: latency-svc-nbrbx
Jul  3 00:04:32.304: INFO: Got endpoints: latency-svc-wgs65 [748.822211ms]
Jul  3 00:04:32.311: INFO: Created: latency-svc-cm5zr
Jul  3 00:04:32.355: INFO: Got endpoints: latency-svc-lbbfn [749.166983ms]
Jul  3 00:04:32.363: INFO: Created: latency-svc-gzdfp
Jul  3 00:04:32.407: INFO: Got endpoints: latency-svc-vzx84 [753.346186ms]
Jul  3 00:04:32.415: INFO: Created: latency-svc-hfndk
Jul  3 00:04:32.455: INFO: Got endpoints: latency-svc-4gk49 [748.936451ms]
Jul  3 00:04:32.463: INFO: Created: latency-svc-x8w8g
Jul  3 00:04:32.506: INFO: Got endpoints: latency-svc-cp6f8 [750.333496ms]
Jul  3 00:04:32.514: INFO: Created: latency-svc-jxqcc
Jul  3 00:04:32.558: INFO: Got endpoints: latency-svc-mmdlx [751.410369ms]
Jul  3 00:04:32.567: INFO: Created: latency-svc-dlr4f
Jul  3 00:04:32.606: INFO: Got endpoints: latency-svc-lrztm [751.239681ms]
Jul  3 00:04:32.614: INFO: Created: latency-svc-vk7nv
Jul  3 00:04:32.654: INFO: Got endpoints: latency-svc-mhf5g [750.02935ms]
Jul  3 00:04:32.664: INFO: Created: latency-svc-5flx6
Jul  3 00:04:32.706: INFO: Got endpoints: latency-svc-c6lld [748.281225ms]
Jul  3 00:04:32.715: INFO: Created: latency-svc-rr2c7
Jul  3 00:04:32.755: INFO: Got endpoints: latency-svc-7xrtw [750.1844ms]
Jul  3 00:04:32.764: INFO: Created: latency-svc-ltwcx
Jul  3 00:04:32.805: INFO: Got endpoints: latency-svc-ktkb4 [751.053536ms]
Jul  3 00:04:32.813: INFO: Created: latency-svc-vlqxp
Jul  3 00:04:32.856: INFO: Got endpoints: latency-svc-tpcbs [750.877493ms]
Jul  3 00:04:32.867: INFO: Created: latency-svc-6vntt
Jul  3 00:04:32.905: INFO: Got endpoints: latency-svc-j96mh [748.084175ms]
Jul  3 00:04:32.912: INFO: Created: latency-svc-bm2v4
Jul  3 00:04:32.957: INFO: Got endpoints: latency-svc-9hrk8 [752.203793ms]
Jul  3 00:04:32.964: INFO: Created: latency-svc-l97sw
Jul  3 00:04:33.004: INFO: Got endpoints: latency-svc-nbrbx [750.531907ms]
Jul  3 00:04:33.011: INFO: Created: latency-svc-v2kd5
Jul  3 00:04:33.056: INFO: Got endpoints: latency-svc-cm5zr [751.925703ms]
Jul  3 00:04:33.063: INFO: Created: latency-svc-549zz
Jul  3 00:04:33.105: INFO: Got endpoints: latency-svc-gzdfp [749.968424ms]
Jul  3 00:04:33.114: INFO: Created: latency-svc-qf58d
Jul  3 00:04:33.154: INFO: Got endpoints: latency-svc-hfndk [747.002076ms]
Jul  3 00:04:33.161: INFO: Created: latency-svc-j857b
Jul  3 00:04:33.205: INFO: Got endpoints: latency-svc-x8w8g [749.370032ms]
Jul  3 00:04:33.212: INFO: Created: latency-svc-jg6bj
Jul  3 00:04:33.255: INFO: Got endpoints: latency-svc-jxqcc [748.974611ms]
Jul  3 00:04:33.262: INFO: Created: latency-svc-76fc5
Jul  3 00:04:33.309: INFO: Got endpoints: latency-svc-dlr4f [751.264284ms]
Jul  3 00:04:33.321: INFO: Created: latency-svc-bgz4h
Jul  3 00:04:33.354: INFO: Got endpoints: latency-svc-vk7nv [748.189529ms]
Jul  3 00:04:33.361: INFO: Created: latency-svc-cqxpz
Jul  3 00:04:33.404: INFO: Got endpoints: latency-svc-5flx6 [749.89692ms]
Jul  3 00:04:33.413: INFO: Created: latency-svc-92bn9
Jul  3 00:04:33.455: INFO: Got endpoints: latency-svc-rr2c7 [749.81636ms]
Jul  3 00:04:33.462: INFO: Created: latency-svc-x727p
Jul  3 00:04:33.507: INFO: Got endpoints: latency-svc-ltwcx [751.391578ms]
Jul  3 00:04:33.528: INFO: Created: latency-svc-w4wfz
Jul  3 00:04:33.555: INFO: Got endpoints: latency-svc-vlqxp [749.812242ms]
Jul  3 00:04:33.563: INFO: Created: latency-svc-dzmb5
Jul  3 00:04:33.607: INFO: Got endpoints: latency-svc-6vntt [751.066002ms]
Jul  3 00:04:33.614: INFO: Created: latency-svc-nsk5x
Jul  3 00:04:33.655: INFO: Got endpoints: latency-svc-bm2v4 [750.613032ms]
Jul  3 00:04:33.662: INFO: Created: latency-svc-mg5tb
Jul  3 00:04:33.705: INFO: Got endpoints: latency-svc-l97sw [747.849788ms]
Jul  3 00:04:33.712: INFO: Created: latency-svc-wmzv2
Jul  3 00:04:33.755: INFO: Got endpoints: latency-svc-v2kd5 [750.784893ms]
Jul  3 00:04:33.762: INFO: Created: latency-svc-x95fw
Jul  3 00:04:33.804: INFO: Got endpoints: latency-svc-549zz [748.916757ms]
Jul  3 00:04:33.813: INFO: Created: latency-svc-vlbzp
Jul  3 00:04:33.854: INFO: Got endpoints: latency-svc-qf58d [749.529727ms]
Jul  3 00:04:33.864: INFO: Created: latency-svc-lqd29
Jul  3 00:04:33.905: INFO: Got endpoints: latency-svc-j857b [751.079693ms]
Jul  3 00:04:33.913: INFO: Created: latency-svc-5mzc2
Jul  3 00:04:33.955: INFO: Got endpoints: latency-svc-jg6bj [750.46649ms]
Jul  3 00:04:33.963: INFO: Created: latency-svc-xp452
Jul  3 00:04:34.005: INFO: Got endpoints: latency-svc-76fc5 [750.186714ms]
Jul  3 00:04:34.013: INFO: Created: latency-svc-jr68n
Jul  3 00:04:34.055: INFO: Got endpoints: latency-svc-bgz4h [745.293024ms]
Jul  3 00:04:34.062: INFO: Created: latency-svc-t7z4r
Jul  3 00:04:34.104: INFO: Got endpoints: latency-svc-cqxpz [749.742345ms]
Jul  3 00:04:34.111: INFO: Created: latency-svc-m4c29
Jul  3 00:04:34.158: INFO: Got endpoints: latency-svc-92bn9 [753.829223ms]
Jul  3 00:04:34.170: INFO: Created: latency-svc-xc79n
Jul  3 00:04:34.206: INFO: Got endpoints: latency-svc-x727p [750.367093ms]
Jul  3 00:04:34.216: INFO: Created: latency-svc-c42n8
Jul  3 00:04:34.256: INFO: Got endpoints: latency-svc-w4wfz [748.941399ms]
Jul  3 00:04:34.266: INFO: Created: latency-svc-7l8kx
Jul  3 00:04:34.310: INFO: Got endpoints: latency-svc-dzmb5 [754.574118ms]
Jul  3 00:04:34.321: INFO: Created: latency-svc-6xxmm
Jul  3 00:04:34.354: INFO: Got endpoints: latency-svc-nsk5x [747.360593ms]
Jul  3 00:04:34.362: INFO: Created: latency-svc-894ch
Jul  3 00:04:34.406: INFO: Got endpoints: latency-svc-mg5tb [750.420189ms]
Jul  3 00:04:34.414: INFO: Created: latency-svc-lc868
Jul  3 00:04:34.455: INFO: Got endpoints: latency-svc-wmzv2 [750.07743ms]
Jul  3 00:04:34.462: INFO: Created: latency-svc-c92bw
Jul  3 00:04:34.520: INFO: Got endpoints: latency-svc-x95fw [765.348414ms]
Jul  3 00:04:34.528: INFO: Created: latency-svc-mb478
Jul  3 00:04:34.555: INFO: Got endpoints: latency-svc-vlbzp [750.048378ms]
Jul  3 00:04:34.562: INFO: Created: latency-svc-msds9
Jul  3 00:04:34.605: INFO: Got endpoints: latency-svc-lqd29 [750.923288ms]
Jul  3 00:04:34.615: INFO: Created: latency-svc-6p5t8
Jul  3 00:04:34.654: INFO: Got endpoints: latency-svc-5mzc2 [748.971652ms]
Jul  3 00:04:34.664: INFO: Created: latency-svc-j6w95
Jul  3 00:04:34.705: INFO: Got endpoints: latency-svc-xp452 [749.572941ms]
Jul  3 00:04:34.712: INFO: Created: latency-svc-qbhhj
Jul  3 00:04:34.755: INFO: Got endpoints: latency-svc-jr68n [749.660252ms]
Jul  3 00:04:34.764: INFO: Created: latency-svc-r9bsg
Jul  3 00:04:34.805: INFO: Got endpoints: latency-svc-t7z4r [750.355909ms]
Jul  3 00:04:34.812: INFO: Created: latency-svc-dlscj
Jul  3 00:04:34.854: INFO: Got endpoints: latency-svc-m4c29 [750.353849ms]
Jul  3 00:04:34.864: INFO: Created: latency-svc-vpgpr
Jul  3 00:04:34.906: INFO: Got endpoints: latency-svc-xc79n [747.578109ms]
Jul  3 00:04:34.915: INFO: Created: latency-svc-7dnnc
Jul  3 00:04:34.956: INFO: Got endpoints: latency-svc-c42n8 [749.668284ms]
Jul  3 00:04:34.969: INFO: Created: latency-svc-vhtnp
Jul  3 00:04:35.005: INFO: Got endpoints: latency-svc-7l8kx [748.946588ms]
Jul  3 00:04:35.012: INFO: Created: latency-svc-pfdlx
Jul  3 00:04:35.061: INFO: Got endpoints: latency-svc-6xxmm [751.15889ms]
Jul  3 00:04:35.073: INFO: Created: latency-svc-4fxrs
Jul  3 00:04:35.104: INFO: Got endpoints: latency-svc-894ch [749.560965ms]
Jul  3 00:04:35.112: INFO: Created: latency-svc-5dxzl
Jul  3 00:04:35.155: INFO: Got endpoints: latency-svc-lc868 [749.234435ms]
Jul  3 00:04:35.163: INFO: Created: latency-svc-jrknk
Jul  3 00:04:35.205: INFO: Got endpoints: latency-svc-c92bw [750.218526ms]
Jul  3 00:04:35.212: INFO: Created: latency-svc-klm7c
Jul  3 00:04:35.255: INFO: Got endpoints: latency-svc-mb478 [734.817939ms]
Jul  3 00:04:35.267: INFO: Created: latency-svc-cz8cj
Jul  3 00:04:35.304: INFO: Got endpoints: latency-svc-msds9 [749.680726ms]
Jul  3 00:04:35.316: INFO: Created: latency-svc-9dqbf
Jul  3 00:04:35.356: INFO: Got endpoints: latency-svc-6p5t8 [750.109753ms]
Jul  3 00:04:35.364: INFO: Created: latency-svc-97l9q
Jul  3 00:04:35.405: INFO: Got endpoints: latency-svc-j6w95 [750.577635ms]
Jul  3 00:04:35.416: INFO: Created: latency-svc-nlprz
Jul  3 00:04:35.455: INFO: Got endpoints: latency-svc-qbhhj [750.440807ms]
Jul  3 00:04:35.463: INFO: Created: latency-svc-xnwc4
Jul  3 00:04:35.523: INFO: Got endpoints: latency-svc-r9bsg [768.586705ms]
Jul  3 00:04:35.531: INFO: Created: latency-svc-7fgwk
Jul  3 00:04:35.555: INFO: Got endpoints: latency-svc-dlscj [749.966059ms]
Jul  3 00:04:35.563: INFO: Created: latency-svc-n6p5z
Jul  3 00:04:35.604: INFO: Got endpoints: latency-svc-vpgpr [749.96924ms]
Jul  3 00:04:35.611: INFO: Created: latency-svc-whftn
Jul  3 00:04:35.655: INFO: Got endpoints: latency-svc-7dnnc [749.579253ms]
Jul  3 00:04:35.663: INFO: Created: latency-svc-n4q4t
Jul  3 00:04:35.707: INFO: Got endpoints: latency-svc-vhtnp [751.262319ms]
Jul  3 00:04:35.726: INFO: Created: latency-svc-fzdgl
Jul  3 00:04:35.754: INFO: Got endpoints: latency-svc-pfdlx [749.368621ms]
Jul  3 00:04:35.764: INFO: Created: latency-svc-89bmk
Jul  3 00:04:35.806: INFO: Got endpoints: latency-svc-4fxrs [745.245553ms]
Jul  3 00:04:35.814: INFO: Created: latency-svc-2ffvm
Jul  3 00:04:35.854: INFO: Got endpoints: latency-svc-5dxzl [750.328048ms]
Jul  3 00:04:35.862: INFO: Created: latency-svc-g568r
Jul  3 00:04:35.904: INFO: Got endpoints: latency-svc-jrknk [748.929129ms]
Jul  3 00:04:35.912: INFO: Created: latency-svc-4n8r4
Jul  3 00:04:35.954: INFO: Got endpoints: latency-svc-klm7c [749.449234ms]
Jul  3 00:04:35.961: INFO: Created: latency-svc-dwm2d
Jul  3 00:04:36.005: INFO: Got endpoints: latency-svc-cz8cj [749.618717ms]
Jul  3 00:04:36.013: INFO: Created: latency-svc-zhxpq
Jul  3 00:04:36.056: INFO: Got endpoints: latency-svc-9dqbf [751.420299ms]
Jul  3 00:04:36.063: INFO: Created: latency-svc-rdsbv
Jul  3 00:04:36.105: INFO: Got endpoints: latency-svc-97l9q [749.384986ms]
Jul  3 00:04:36.113: INFO: Created: latency-svc-rb4n6
Jul  3 00:04:36.159: INFO: Got endpoints: latency-svc-nlprz [754.086766ms]
Jul  3 00:04:36.168: INFO: Created: latency-svc-m7l7x
Jul  3 00:04:36.205: INFO: Got endpoints: latency-svc-xnwc4 [750.13994ms]
Jul  3 00:04:36.213: INFO: Created: latency-svc-74566
Jul  3 00:04:36.255: INFO: Got endpoints: latency-svc-7fgwk [732.143706ms]
Jul  3 00:04:36.265: INFO: Created: latency-svc-6strb
Jul  3 00:04:36.306: INFO: Got endpoints: latency-svc-n6p5z [751.446461ms]
Jul  3 00:04:36.317: INFO: Created: latency-svc-rzv2f
Jul  3 00:04:36.355: INFO: Got endpoints: latency-svc-whftn [750.417621ms]
Jul  3 00:04:36.364: INFO: Created: latency-svc-dl5qb
Jul  3 00:04:36.405: INFO: Got endpoints: latency-svc-n4q4t [749.634098ms]
Jul  3 00:04:36.412: INFO: Created: latency-svc-gnjr2
Jul  3 00:04:36.454: INFO: Got endpoints: latency-svc-fzdgl [747.339237ms]
Jul  3 00:04:36.462: INFO: Created: latency-svc-sptq5
Jul  3 00:04:36.505: INFO: Got endpoints: latency-svc-89bmk [750.872032ms]
Jul  3 00:04:36.524: INFO: Created: latency-svc-mls2x
Jul  3 00:04:36.554: INFO: Got endpoints: latency-svc-2ffvm [747.965844ms]
Jul  3 00:04:36.562: INFO: Created: latency-svc-swzpj
Jul  3 00:04:36.604: INFO: Got endpoints: latency-svc-g568r [749.444427ms]
Jul  3 00:04:36.611: INFO: Created: latency-svc-qwnck
Jul  3 00:04:36.655: INFO: Got endpoints: latency-svc-4n8r4 [750.782167ms]
Jul  3 00:04:36.662: INFO: Created: latency-svc-jzg58
Jul  3 00:04:36.705: INFO: Got endpoints: latency-svc-dwm2d [750.348567ms]
Jul  3 00:04:36.712: INFO: Created: latency-svc-qxc2r
Jul  3 00:04:36.756: INFO: Got endpoints: latency-svc-zhxpq [750.975479ms]
Jul  3 00:04:36.764: INFO: Created: latency-svc-lz4gv
Jul  3 00:04:36.804: INFO: Got endpoints: latency-svc-rdsbv [748.321997ms]
Jul  3 00:04:36.811: INFO: Created: latency-svc-r72tj
Jul  3 00:04:36.855: INFO: Got endpoints: latency-svc-rb4n6 [749.761919ms]
Jul  3 00:04:36.862: INFO: Created: latency-svc-6ckx4
Jul  3 00:04:36.905: INFO: Got endpoints: latency-svc-m7l7x [746.348506ms]
Jul  3 00:04:36.915: INFO: Created: latency-svc-9r5nr
Jul  3 00:04:36.954: INFO: Got endpoints: latency-svc-74566 [748.860965ms]
Jul  3 00:04:36.963: INFO: Created: latency-svc-p7g8b
Jul  3 00:04:37.004: INFO: Got endpoints: latency-svc-6strb [748.972793ms]
Jul  3 00:04:37.012: INFO: Created: latency-svc-kkgcj
Jul  3 00:04:37.055: INFO: Got endpoints: latency-svc-rzv2f [748.596069ms]
Jul  3 00:04:37.062: INFO: Created: latency-svc-dmz6d
Jul  3 00:04:37.105: INFO: Got endpoints: latency-svc-dl5qb [750.464059ms]
Jul  3 00:04:37.112: INFO: Created: latency-svc-pxzh7
Jul  3 00:04:37.154: INFO: Got endpoints: latency-svc-gnjr2 [748.783852ms]
Jul  3 00:04:37.161: INFO: Created: latency-svc-k47f9
Jul  3 00:04:37.207: INFO: Got endpoints: latency-svc-sptq5 [752.371416ms]
Jul  3 00:04:37.214: INFO: Created: latency-svc-wjsd8
Jul  3 00:04:37.255: INFO: Got endpoints: latency-svc-mls2x [750.5401ms]
Jul  3 00:04:37.263: INFO: Created: latency-svc-6xfnd
Jul  3 00:04:37.305: INFO: Got endpoints: latency-svc-swzpj [751.115826ms]
Jul  3 00:04:37.355: INFO: Got endpoints: latency-svc-qwnck [750.603133ms]
Jul  3 00:04:37.404: INFO: Got endpoints: latency-svc-jzg58 [749.267815ms]
Jul  3 00:04:37.454: INFO: Got endpoints: latency-svc-qxc2r [749.593901ms]
Jul  3 00:04:37.520: INFO: Got endpoints: latency-svc-lz4gv [764.061314ms]
Jul  3 00:04:37.555: INFO: Got endpoints: latency-svc-r72tj [750.879864ms]
Jul  3 00:04:37.606: INFO: Got endpoints: latency-svc-6ckx4 [751.295369ms]
Jul  3 00:04:37.655: INFO: Got endpoints: latency-svc-9r5nr [749.104476ms]
Jul  3 00:04:37.706: INFO: Got endpoints: latency-svc-p7g8b [751.583628ms]
Jul  3 00:04:37.754: INFO: Got endpoints: latency-svc-kkgcj [749.134563ms]
Jul  3 00:04:37.805: INFO: Got endpoints: latency-svc-dmz6d [750.317785ms]
Jul  3 00:04:37.855: INFO: Got endpoints: latency-svc-pxzh7 [749.828334ms]
Jul  3 00:04:37.906: INFO: Got endpoints: latency-svc-k47f9 [752.034767ms]
Jul  3 00:04:37.955: INFO: Got endpoints: latency-svc-wjsd8 [748.431052ms]
Jul  3 00:04:38.007: INFO: Got endpoints: latency-svc-6xfnd [751.20768ms]
Jul  3 00:04:38.007: INFO: Latencies: [9.939669ms 12.988723ms 16.287763ms 16.311895ms 19.566033ms 22.971724ms 26.20842ms 27.540215ms 30.623121ms 34.521671ms 37.654023ms 40.343729ms 45.715427ms 57.359883ms 66.428282ms 67.205558ms 69.714762ms 71.48393ms 78.317399ms 79.053016ms 84.180988ms 84.887306ms 103.676456ms 104.184147ms 107.912068ms 108.798864ms 111.379867ms 118.860474ms 126.237757ms 127.895161ms 128.461939ms 136.095741ms 139.145598ms 149.411941ms 150.877637ms 202.921826ms 249.107056ms 298.957541ms 348.501065ms 400.305844ms 448.008417ms 498.569251ms 547.714627ms 595.013555ms 638.874089ms 676.731019ms 722.831359ms 728.312174ms 732.143706ms 734.817939ms 745.245553ms 745.293024ms 746.113915ms 746.299309ms 746.348506ms 747.002076ms 747.339237ms 747.360593ms 747.578109ms 747.849788ms 747.965844ms 748.001529ms 748.084175ms 748.189529ms 748.281225ms 748.321997ms 748.389617ms 748.431052ms 748.596069ms 748.631265ms 748.701235ms 748.783852ms 748.822211ms 748.860965ms 748.916757ms 748.929129ms 748.936451ms 748.941399ms 748.946588ms 748.971652ms 748.972793ms 748.974611ms 749.019534ms 749.075786ms 749.104476ms 749.117495ms 749.134563ms 749.166983ms 749.194012ms 749.234435ms 749.267815ms 749.368621ms 749.370032ms 749.384986ms 749.397373ms 749.42302ms 749.444427ms 749.449234ms 749.464123ms 749.529727ms 749.560965ms 749.56271ms 749.572941ms 749.579253ms 749.593901ms 749.618717ms 749.634098ms 749.660252ms 749.668284ms 749.680726ms 749.742345ms 749.761919ms 749.780498ms 749.812242ms 749.81636ms 749.828334ms 749.89692ms 749.903622ms 749.909828ms 749.919559ms 749.964944ms 749.966059ms 749.968424ms 749.96924ms 749.969552ms 750.02935ms 750.048378ms 750.07743ms 750.109753ms 750.13994ms 750.17101ms 750.1844ms 750.186714ms 750.218526ms 750.298642ms 750.317785ms 750.328048ms 750.333496ms 750.348567ms 750.353849ms 750.355909ms 750.367093ms 750.417621ms 750.420189ms 750.440807ms 750.464059ms 750.46649ms 750.485522ms 750.531907ms 750.5401ms 750.577635ms 750.603133ms 750.613032ms 750.677235ms 750.677903ms 750.782167ms 750.784893ms 750.842558ms 750.856409ms 750.872032ms 750.873268ms 750.877493ms 750.879864ms 750.923288ms 750.975479ms 751.053536ms 751.066002ms 751.079693ms 751.115826ms 751.15889ms 751.20768ms 751.233711ms 751.239681ms 751.262319ms 751.264284ms 751.295369ms 751.391578ms 751.410369ms 751.420299ms 751.446461ms 751.476075ms 751.583628ms 751.583666ms 751.782046ms 751.925703ms 751.9575ms 752.034767ms 752.195598ms 752.203793ms 752.371416ms 752.669629ms 753.346186ms 753.805805ms 753.829223ms 754.086766ms 754.574118ms 764.061314ms 765.348414ms 768.586705ms 770.217924ms]
Jul  3 00:04:38.007: INFO: 50 %ile: 749.560965ms
Jul  3 00:04:38.007: INFO: 90 %ile: 751.476075ms
Jul  3 00:04:38.007: INFO: 99 %ile: 768.586705ms
Jul  3 00:04:38.007: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:188
Jul  3 00:04:38.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-4379" for this suite.
•{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":356,"completed":37,"skipped":651,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:04:38.017: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9942
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:04:38.540: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:04:41.561: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:04:41.570: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9942" for this suite.
STEP: Destroying namespace "webhook-9942-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":356,"completed":38,"skipped":668,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:04:41.602: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8867
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Jul  3 00:04:41.736: INFO: Waiting up to 5m0s for pod "pod-54d66531-aa9e-404d-9237-2510e2d4f41e" in namespace "emptydir-8867" to be "Succeeded or Failed"
Jul  3 00:04:41.738: INFO: Pod "pod-54d66531-aa9e-404d-9237-2510e2d4f41e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.543626ms
Jul  3 00:04:43.742: INFO: Pod "pod-54d66531-aa9e-404d-9237-2510e2d4f41e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00590233s
Jul  3 00:04:45.747: INFO: Pod "pod-54d66531-aa9e-404d-9237-2510e2d4f41e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011262055s
STEP: Saw pod success
Jul  3 00:04:45.747: INFO: Pod "pod-54d66531-aa9e-404d-9237-2510e2d4f41e" satisfied condition "Succeeded or Failed"
Jul  3 00:04:45.751: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-54d66531-aa9e-404d-9237-2510e2d4f41e container test-container: <nil>
STEP: delete the pod
Jul  3 00:04:45.770: INFO: Waiting for pod pod-54d66531-aa9e-404d-9237-2510e2d4f41e to disappear
Jul  3 00:04:45.773: INFO: Pod pod-54d66531-aa9e-404d-9237-2510e2d4f41e no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 00:04:45.773: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8867" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":39,"skipped":701,"failed":0}

------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:04:45.784: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-9382
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:04:45.954: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"46f36d61-8d06-4fde-b1c4-23026147b126", Controller:(*bool)(0xc00353c3c6), BlockOwnerDeletion:(*bool)(0xc00353c3c7)}}
Jul  3 00:04:45.961: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"b1f367b3-98e1-4d23-b70f-fed7b6c97083", Controller:(*bool)(0xc00353c67e), BlockOwnerDeletion:(*bool)(0xc00353c67f)}}
Jul  3 00:04:45.965: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"9434943c-a271-4c32-82b7-878f2cfb7ec6", Controller:(*bool)(0xc00353c926), BlockOwnerDeletion:(*bool)(0xc00353c927)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul  3 00:04:50.975: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-9382" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":356,"completed":40,"skipped":701,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:04:50.984: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2354
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:04:51.121: INFO: Waiting up to 5m0s for pod "downwardapi-volume-9ff6a06c-27d1-47b3-b65f-f2e5d2937a9e" in namespace "projected-2354" to be "Succeeded or Failed"
Jul  3 00:04:51.124: INFO: Pod "downwardapi-volume-9ff6a06c-27d1-47b3-b65f-f2e5d2937a9e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.815546ms
Jul  3 00:04:53.129: INFO: Pod "downwardapi-volume-9ff6a06c-27d1-47b3-b65f-f2e5d2937a9e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007822344s
Jul  3 00:04:55.133: INFO: Pod "downwardapi-volume-9ff6a06c-27d1-47b3-b65f-f2e5d2937a9e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01172536s
STEP: Saw pod success
Jul  3 00:04:55.133: INFO: Pod "downwardapi-volume-9ff6a06c-27d1-47b3-b65f-f2e5d2937a9e" satisfied condition "Succeeded or Failed"
Jul  3 00:04:55.135: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-9ff6a06c-27d1-47b3-b65f-f2e5d2937a9e container client-container: <nil>
STEP: delete the pod
Jul  3 00:04:55.152: INFO: Waiting for pod downwardapi-volume-9ff6a06c-27d1-47b3-b65f-f2e5d2937a9e to disappear
Jul  3 00:04:55.155: INFO: Pod downwardapi-volume-9ff6a06c-27d1-47b3-b65f-f2e5d2937a9e no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul  3 00:04:55.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2354" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":41,"skipped":709,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:04:55.164: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2372
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:04:55.587: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:04:58.608: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
Jul  3 00:05:00.677: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=webhook-2372 attach --namespace=webhook-2372 to-be-attached-pod -i -c=container1'
Jul  3 00:05:00.912: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:05:00.916: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2372" for this suite.
STEP: Destroying namespace "webhook-2372-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":356,"completed":42,"skipped":743,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:05:00.955: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-64
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Jul  3 00:05:01.091: INFO: Waiting up to 5m0s for pod "pod-8c9a408b-0f9b-4975-8c82-d3168bc0f213" in namespace "emptydir-64" to be "Succeeded or Failed"
Jul  3 00:05:01.094: INFO: Pod "pod-8c9a408b-0f9b-4975-8c82-d3168bc0f213": Phase="Pending", Reason="", readiness=false. Elapsed: 2.735548ms
Jul  3 00:05:03.099: INFO: Pod "pod-8c9a408b-0f9b-4975-8c82-d3168bc0f213": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007556993s
Jul  3 00:05:05.103: INFO: Pod "pod-8c9a408b-0f9b-4975-8c82-d3168bc0f213": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01180358s
STEP: Saw pod success
Jul  3 00:05:05.103: INFO: Pod "pod-8c9a408b-0f9b-4975-8c82-d3168bc0f213" satisfied condition "Succeeded or Failed"
Jul  3 00:05:05.105: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-8c9a408b-0f9b-4975-8c82-d3168bc0f213 container test-container: <nil>
STEP: delete the pod
Jul  3 00:05:05.120: INFO: Waiting for pod pod-8c9a408b-0f9b-4975-8c82-d3168bc0f213 to disappear
Jul  3 00:05:05.122: INFO: Pod pod-8c9a408b-0f9b-4975-8c82-d3168bc0f213 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 00:05:05.122: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-64" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":43,"skipped":751,"failed":0}
SSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:05:05.130: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1110
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-2f319fba-a62c-47e6-aea3-c34cf10e1fae
STEP: Creating a pod to test consume configMaps
Jul  3 00:05:05.266: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-01006130-8f90-457a-a40e-4583b7d8d5db" in namespace "projected-1110" to be "Succeeded or Failed"
Jul  3 00:05:05.269: INFO: Pod "pod-projected-configmaps-01006130-8f90-457a-a40e-4583b7d8d5db": Phase="Pending", Reason="", readiness=false. Elapsed: 2.886289ms
Jul  3 00:05:07.276: INFO: Pod "pod-projected-configmaps-01006130-8f90-457a-a40e-4583b7d8d5db": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00956136s
Jul  3 00:05:09.281: INFO: Pod "pod-projected-configmaps-01006130-8f90-457a-a40e-4583b7d8d5db": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014550035s
STEP: Saw pod success
Jul  3 00:05:09.281: INFO: Pod "pod-projected-configmaps-01006130-8f90-457a-a40e-4583b7d8d5db" satisfied condition "Succeeded or Failed"
Jul  3 00:05:09.284: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-configmaps-01006130-8f90-457a-a40e-4583b7d8d5db container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:05:09.302: INFO: Waiting for pod pod-projected-configmaps-01006130-8f90-457a-a40e-4583b7d8d5db to disappear
Jul  3 00:05:09.305: INFO: Pod pod-projected-configmaps-01006130-8f90-457a-a40e-4583b7d8d5db no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul  3 00:05:09.305: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1110" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":44,"skipped":755,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:05:09.315: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-978
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:05:09.449: INFO: Waiting up to 5m0s for pod "downwardapi-volume-47d09a37-f898-4ba4-ab7d-8ed301f9fca8" in namespace "downward-api-978" to be "Succeeded or Failed"
Jul  3 00:05:09.452: INFO: Pod "downwardapi-volume-47d09a37-f898-4ba4-ab7d-8ed301f9fca8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.062542ms
Jul  3 00:05:11.457: INFO: Pod "downwardapi-volume-47d09a37-f898-4ba4-ab7d-8ed301f9fca8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008370111s
Jul  3 00:05:13.462: INFO: Pod "downwardapi-volume-47d09a37-f898-4ba4-ab7d-8ed301f9fca8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013210353s
STEP: Saw pod success
Jul  3 00:05:13.462: INFO: Pod "downwardapi-volume-47d09a37-f898-4ba4-ab7d-8ed301f9fca8" satisfied condition "Succeeded or Failed"
Jul  3 00:05:13.465: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-47d09a37-f898-4ba4-ab7d-8ed301f9fca8 container client-container: <nil>
STEP: delete the pod
Jul  3 00:05:13.482: INFO: Waiting for pod downwardapi-volume-47d09a37-f898-4ba4-ab7d-8ed301f9fca8 to disappear
Jul  3 00:05:13.485: INFO: Pod downwardapi-volume-47d09a37-f898-4ba4-ab7d-8ed301f9fca8 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul  3 00:05:13.485: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-978" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":45,"skipped":773,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:05:13.493: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-4383
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jul  3 00:05:15.661: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-4383" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":356,"completed":46,"skipped":794,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:05:15.669: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-9012
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-9012
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-9012
STEP: Waiting until pod test-pod will start running in namespace statefulset-9012
STEP: Creating statefulset with conflicting port in namespace statefulset-9012
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9012
Jul  3 00:05:17.868: INFO: Observed stateful pod in namespace: statefulset-9012, name: ss-0, uid: f7c465b6-2198-482c-8ccb-4e39dc73e821, status phase: Pending. Waiting for statefulset controller to delete.
Jul  3 00:05:17.883: INFO: Observed stateful pod in namespace: statefulset-9012, name: ss-0, uid: f7c465b6-2198-482c-8ccb-4e39dc73e821, status phase: Failed. Waiting for statefulset controller to delete.
Jul  3 00:05:17.887: INFO: Observed stateful pod in namespace: statefulset-9012, name: ss-0, uid: f7c465b6-2198-482c-8ccb-4e39dc73e821, status phase: Failed. Waiting for statefulset controller to delete.
Jul  3 00:05:17.888: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-9012
STEP: Removing pod with conflicting port in namespace statefulset-9012
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9012 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul  3 00:05:19.901: INFO: Deleting all statefulset in ns statefulset-9012
Jul  3 00:05:19.904: INFO: Scaling statefulset ss to 0
Jul  3 00:05:29.917: INFO: Waiting for statefulset status.replicas updated to 0
Jul  3 00:05:29.920: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul  3 00:05:29.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-9012" for this suite.
•{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":356,"completed":47,"skipped":829,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:05:29.937: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-1603
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod test-webserver-f7cd2a93-8211-4ba8-a090-488b589014f9 in namespace container-probe-1603
Jul  3 00:05:32.078: INFO: Started pod test-webserver-f7cd2a93-8211-4ba8-a090-488b589014f9 in namespace container-probe-1603
STEP: checking the pod's current state and verifying that restartCount is present
Jul  3 00:05:32.080: INFO: Initial restart count of pod test-webserver-f7cd2a93-8211-4ba8-a090-488b589014f9 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul  3 00:09:32.691: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-1603" for this suite.
•{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":48,"skipped":900,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:09:32.716: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1839
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-1839
STEP: creating service affinity-nodeport in namespace services-1839
STEP: creating replication controller affinity-nodeport in namespace services-1839
I0703 00:09:33.053017    4513 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-1839, replica count: 3
I0703 00:09:36.105025    4513 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul  3 00:09:36.117: INFO: Creating new exec pod
Jul  3 00:09:39.136: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-1839 exec execpod-affinity542vb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
Jul  3 00:09:39.441: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Jul  3 00:09:39.441: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:09:39.441: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-1839 exec execpod-affinity542vb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.104.42.243 80'
Jul  3 00:09:39.688: INFO: stderr: "+ nc -v -t -w 2 100.104.42.243 80\n+ echo hostName\nConnection to 100.104.42.243 80 port [tcp/http] succeeded!\n"
Jul  3 00:09:39.688: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:09:39.688: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-1839 exec execpod-affinity542vb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.183 32284'
Jul  3 00:09:39.970: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.183 32284\nConnection to 10.250.2.183 32284 port [tcp/*] succeeded!\n"
Jul  3 00:09:39.970: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:09:39.970: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-1839 exec execpod-affinity542vb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.84 32284'
Jul  3 00:09:40.224: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.84 32284\nConnection to 10.250.2.84 32284 port [tcp/*] succeeded!\n"
Jul  3 00:09:40.224: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:09:40.224: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-1839 exec execpod-affinity542vb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.250.2.183:32284/ ; done'
Jul  3 00:09:40.559: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:32284/\n"
Jul  3 00:09:40.560: INFO: stdout: "\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4\naffinity-nodeport-vnxk4"
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Received response from host: affinity-nodeport-vnxk4
Jul  3 00:09:40.560: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-1839, will wait for the garbage collector to delete the pods
Jul  3 00:09:40.624: INFO: Deleting ReplicationController affinity-nodeport took: 4.448091ms
Jul  3 00:09:40.724: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.155518ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 00:09:42.739: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1839" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":49,"skipped":914,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:09:42.748: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-87
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating pod
Jul  3 00:09:42.883: INFO: The status of Pod pod-hostip-061930ae-e82b-4e11-8d28-9ebd40b242f4 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:09:44.887: INFO: The status of Pod pod-hostip-061930ae-e82b-4e11-8d28-9ebd40b242f4 is Running (Ready = true)
Jul  3 00:09:44.894: INFO: Pod pod-hostip-061930ae-e82b-4e11-8d28-9ebd40b242f4 has hostIP: 10.250.2.183
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul  3 00:09:44.894: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-87" for this suite.
•{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":356,"completed":50,"skipped":969,"failed":0}
SSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:09:44.904: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3125
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:09:45.047: INFO: Waiting up to 5m0s for pod "downwardapi-volume-21d503f1-ab6e-4261-b9ec-c7b6cebd97a3" in namespace "downward-api-3125" to be "Succeeded or Failed"
Jul  3 00:09:45.050: INFO: Pod "downwardapi-volume-21d503f1-ab6e-4261-b9ec-c7b6cebd97a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.639764ms
Jul  3 00:09:47.061: INFO: Pod "downwardapi-volume-21d503f1-ab6e-4261-b9ec-c7b6cebd97a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013657206s
Jul  3 00:09:49.066: INFO: Pod "downwardapi-volume-21d503f1-ab6e-4261-b9ec-c7b6cebd97a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01883356s
STEP: Saw pod success
Jul  3 00:09:49.066: INFO: Pod "downwardapi-volume-21d503f1-ab6e-4261-b9ec-c7b6cebd97a3" satisfied condition "Succeeded or Failed"
Jul  3 00:09:49.070: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-21d503f1-ab6e-4261-b9ec-c7b6cebd97a3 container client-container: <nil>
STEP: delete the pod
Jul  3 00:09:49.129: INFO: Waiting for pod downwardapi-volume-21d503f1-ab6e-4261-b9ec-c7b6cebd97a3 to disappear
Jul  3 00:09:49.131: INFO: Pod downwardapi-volume-21d503f1-ab6e-4261-b9ec-c7b6cebd97a3 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul  3 00:09:49.131: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3125" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":356,"completed":51,"skipped":975,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:09:49.139: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-818
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-ca67b76d-6774-4b49-af7a-c07b9d8ed0a9
STEP: Creating a pod to test consume configMaps
Jul  3 00:09:49.274: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-6184d41d-8945-4555-a56e-8db9997643be" in namespace "projected-818" to be "Succeeded or Failed"
Jul  3 00:09:49.276: INFO: Pod "pod-projected-configmaps-6184d41d-8945-4555-a56e-8db9997643be": Phase="Pending", Reason="", readiness=false. Elapsed: 2.520662ms
Jul  3 00:09:51.280: INFO: Pod "pod-projected-configmaps-6184d41d-8945-4555-a56e-8db9997643be": Phase="Pending", Reason="", readiness=false. Elapsed: 2.005973617s
Jul  3 00:09:53.284: INFO: Pod "pod-projected-configmaps-6184d41d-8945-4555-a56e-8db9997643be": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01058099s
STEP: Saw pod success
Jul  3 00:09:53.284: INFO: Pod "pod-projected-configmaps-6184d41d-8945-4555-a56e-8db9997643be" satisfied condition "Succeeded or Failed"
Jul  3 00:09:53.288: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-configmaps-6184d41d-8945-4555-a56e-8db9997643be container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:09:53.349: INFO: Waiting for pod pod-projected-configmaps-6184d41d-8945-4555-a56e-8db9997643be to disappear
Jul  3 00:09:53.352: INFO: Pod pod-projected-configmaps-6184d41d-8945-4555-a56e-8db9997643be no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul  3 00:09:53.352: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-818" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":52,"skipped":983,"failed":0}
S
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:09:53.365: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-5612
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-5612
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jul  3 00:09:53.490: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jul  3 00:09:53.529: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:09:55.533: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:09:57.537: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:09:59.534: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:10:01.534: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:10:03.535: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:10:05.535: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:10:07.534: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:10:09.534: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:10:11.535: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:10:13.535: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:10:15.535: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jul  3 00:10:15.544: INFO: The status of Pod netserver-1 is Running (Ready = true)
STEP: Creating test pods
Jul  3 00:10:17.578: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Jul  3 00:10:17.578: INFO: Breadth first check of 100.64.1.57 on host 10.250.2.183...
Jul  3 00:10:17.582: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://100.64.1.58:9080/dial?request=hostname&protocol=http&host=100.64.1.57&port=8083&tries=1'] Namespace:pod-network-test-5612 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:10:17.582: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:10:17.582: INFO: ExecWithOptions: Clientset creation
Jul  3 00:10:17.582: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/pod-network-test-5612/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F100.64.1.58%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D100.64.1.57%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jul  3 00:10:17.850: INFO: Waiting for responses: map[]
Jul  3 00:10:17.850: INFO: reached 100.64.1.57 after 0/1 tries
Jul  3 00:10:17.850: INFO: Breadth first check of 100.64.0.17 on host 10.250.2.84...
Jul  3 00:10:17.854: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://100.64.1.58:9080/dial?request=hostname&protocol=http&host=100.64.0.17&port=8083&tries=1'] Namespace:pod-network-test-5612 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:10:17.854: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:10:17.854: INFO: ExecWithOptions: Clientset creation
Jul  3 00:10:17.854: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/pod-network-test-5612/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F100.64.1.58%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D100.64.0.17%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jul  3 00:10:18.094: INFO: Waiting for responses: map[]
Jul  3 00:10:18.094: INFO: reached 100.64.0.17 after 0/1 tries
Jul  3 00:10:18.094: INFO: Going to retry 0 out of 2 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jul  3 00:10:18.094: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-5612" for this suite.
•{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":356,"completed":53,"skipped":984,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:10:18.106: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2167
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:10:18.239: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jul  3 00:10:20.637: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2167 --namespace=crd-publish-openapi-2167 create -f -'
Jul  3 00:10:21.504: INFO: stderr: ""
Jul  3 00:10:21.504: INFO: stdout: "e2e-test-crd-publish-openapi-3031-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jul  3 00:10:21.504: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2167 --namespace=crd-publish-openapi-2167 delete e2e-test-crd-publish-openapi-3031-crds test-cr'
Jul  3 00:10:21.569: INFO: stderr: ""
Jul  3 00:10:21.569: INFO: stdout: "e2e-test-crd-publish-openapi-3031-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Jul  3 00:10:21.569: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2167 --namespace=crd-publish-openapi-2167 apply -f -'
Jul  3 00:10:21.734: INFO: stderr: ""
Jul  3 00:10:21.734: INFO: stdout: "e2e-test-crd-publish-openapi-3031-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jul  3 00:10:21.734: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2167 --namespace=crd-publish-openapi-2167 delete e2e-test-crd-publish-openapi-3031-crds test-cr'
Jul  3 00:10:21.807: INFO: stderr: ""
Jul  3 00:10:21.807: INFO: stdout: "e2e-test-crd-publish-openapi-3031-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Jul  3 00:10:21.807: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2167 explain e2e-test-crd-publish-openapi-3031-crds'
Jul  3 00:10:21.966: INFO: stderr: ""
Jul  3 00:10:21.966: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-3031-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:10:24.261: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2167" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":356,"completed":54,"skipped":1030,"failed":0}
SSS
------------------------------
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:10:24.278: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-938
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Jul  3 00:10:24.420: INFO: Waiting up to 5m0s for pod "security-context-61581f27-2950-41f7-9453-e0ea899d0291" in namespace "security-context-938" to be "Succeeded or Failed"
Jul  3 00:10:24.425: INFO: Pod "security-context-61581f27-2950-41f7-9453-e0ea899d0291": Phase="Pending", Reason="", readiness=false. Elapsed: 4.720829ms
Jul  3 00:10:26.431: INFO: Pod "security-context-61581f27-2950-41f7-9453-e0ea899d0291": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011160366s
Jul  3 00:10:28.436: INFO: Pod "security-context-61581f27-2950-41f7-9453-e0ea899d0291": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016213462s
STEP: Saw pod success
Jul  3 00:10:28.436: INFO: Pod "security-context-61581f27-2950-41f7-9453-e0ea899d0291" satisfied condition "Succeeded or Failed"
Jul  3 00:10:28.440: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod security-context-61581f27-2950-41f7-9453-e0ea899d0291 container test-container: <nil>
STEP: delete the pod
Jul  3 00:10:28.470: INFO: Waiting for pod security-context-61581f27-2950-41f7-9453-e0ea899d0291 to disappear
Jul  3 00:10:28.473: INFO: Pod security-context-61581f27-2950-41f7-9453-e0ea899d0291 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jul  3 00:10:28.473: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-938" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":55,"skipped":1033,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:10:28.482: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-3341
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-kz6z9 in namespace proxy-3341
I0703 00:10:28.620782    4513 runners.go:193] Created replication controller with name: proxy-service-kz6z9, namespace: proxy-3341, replica count: 1
I0703 00:10:29.671713    4513 runners.go:193] proxy-service-kz6z9 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
I0703 00:10:30.672060    4513 runners.go:193] proxy-service-kz6z9 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul  3 00:10:30.676: INFO: setup took 2.070774355s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
Jul  3 00:10:30.705: INFO: (0) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 28.800072ms)
Jul  3 00:10:30.705: INFO: (0) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 28.771901ms)
Jul  3 00:10:30.705: INFO: (0) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 28.704977ms)
Jul  3 00:10:30.705: INFO: (0) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 28.610695ms)
Jul  3 00:10:30.707: INFO: (0) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 31.110548ms)
Jul  3 00:10:30.714: INFO: (0) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 38.385574ms)
Jul  3 00:10:30.732: INFO: (0) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 55.771564ms)
Jul  3 00:10:30.732: INFO: (0) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 55.762191ms)
Jul  3 00:10:30.732: INFO: (0) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 55.872463ms)
Jul  3 00:10:30.740: INFO: (0) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 64.22247ms)
Jul  3 00:10:30.740: INFO: (0) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 64.152788ms)
Jul  3 00:10:30.741: INFO: (0) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 65.313843ms)
Jul  3 00:10:30.742: INFO: (0) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 65.391887ms)
Jul  3 00:10:30.749: INFO: (0) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 72.858011ms)
Jul  3 00:10:30.749: INFO: (0) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 72.931933ms)
Jul  3 00:10:30.802: INFO: (0) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 125.435674ms)
Jul  3 00:10:30.813: INFO: (1) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 11.143163ms)
Jul  3 00:10:30.813: INFO: (1) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 11.055969ms)
Jul  3 00:10:30.813: INFO: (1) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 11.15204ms)
Jul  3 00:10:30.813: INFO: (1) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 11.069577ms)
Jul  3 00:10:30.813: INFO: (1) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 11.103083ms)
Jul  3 00:10:30.813: INFO: (1) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 11.240592ms)
Jul  3 00:10:30.813: INFO: (1) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 11.280763ms)
Jul  3 00:10:30.813: INFO: (1) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 11.121762ms)
Jul  3 00:10:30.813: INFO: (1) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 11.159427ms)
Jul  3 00:10:30.813: INFO: (1) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 11.146431ms)
Jul  3 00:10:30.814: INFO: (1) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 11.875393ms)
Jul  3 00:10:30.816: INFO: (1) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 14.043441ms)
Jul  3 00:10:30.816: INFO: (1) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 14.083667ms)
Jul  3 00:10:30.816: INFO: (1) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 14.081873ms)
Jul  3 00:10:30.816: INFO: (1) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 14.022533ms)
Jul  3 00:10:30.816: INFO: (1) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 14.000853ms)
Jul  3 00:10:30.825: INFO: (2) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 8.973952ms)
Jul  3 00:10:30.825: INFO: (2) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 9.092418ms)
Jul  3 00:10:30.825: INFO: (2) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 8.952268ms)
Jul  3 00:10:30.825: INFO: (2) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 9.003702ms)
Jul  3 00:10:30.825: INFO: (2) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 8.995995ms)
Jul  3 00:10:30.825: INFO: (2) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 9.048191ms)
Jul  3 00:10:30.825: INFO: (2) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 9.133251ms)
Jul  3 00:10:30.825: INFO: (2) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 9.116502ms)
Jul  3 00:10:30.825: INFO: (2) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 9.056462ms)
Jul  3 00:10:30.825: INFO: (2) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 9.004711ms)
Jul  3 00:10:30.825: INFO: (2) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 9.104253ms)
Jul  3 00:10:30.827: INFO: (2) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 10.989502ms)
Jul  3 00:10:30.831: INFO: (2) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 14.922727ms)
Jul  3 00:10:30.831: INFO: (2) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 14.974644ms)
Jul  3 00:10:30.831: INFO: (2) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 14.922193ms)
Jul  3 00:10:30.831: INFO: (2) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 14.884989ms)
Jul  3 00:10:30.843: INFO: (3) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 11.965697ms)
Jul  3 00:10:30.843: INFO: (3) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 11.862156ms)
Jul  3 00:10:30.843: INFO: (3) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 11.949315ms)
Jul  3 00:10:30.843: INFO: (3) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 12.02379ms)
Jul  3 00:10:30.843: INFO: (3) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 11.829911ms)
Jul  3 00:10:30.843: INFO: (3) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 12.059449ms)
Jul  3 00:10:30.843: INFO: (3) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 11.960063ms)
Jul  3 00:10:30.843: INFO: (3) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 11.839614ms)
Jul  3 00:10:30.843: INFO: (3) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 12.000076ms)
Jul  3 00:10:30.843: INFO: (3) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 12.148178ms)
Jul  3 00:10:30.847: INFO: (3) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 15.438777ms)
Jul  3 00:10:30.847: INFO: (3) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 15.307004ms)
Jul  3 00:10:30.847: INFO: (3) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 15.354409ms)
Jul  3 00:10:30.847: INFO: (3) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 15.513196ms)
Jul  3 00:10:30.847: INFO: (3) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 15.661315ms)
Jul  3 00:10:30.848: INFO: (3) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 16.974659ms)
Jul  3 00:10:30.859: INFO: (4) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 10.340835ms)
Jul  3 00:10:30.859: INFO: (4) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 10.189264ms)
Jul  3 00:10:30.859: INFO: (4) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 10.191062ms)
Jul  3 00:10:30.859: INFO: (4) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 10.332275ms)
Jul  3 00:10:30.859: INFO: (4) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 10.241694ms)
Jul  3 00:10:30.859: INFO: (4) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 10.367482ms)
Jul  3 00:10:30.859: INFO: (4) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 10.3036ms)
Jul  3 00:10:30.859: INFO: (4) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 10.267182ms)
Jul  3 00:10:30.859: INFO: (4) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 10.185508ms)
Jul  3 00:10:30.859: INFO: (4) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 10.205491ms)
Jul  3 00:10:30.859: INFO: (4) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 10.253462ms)
Jul  3 00:10:30.861: INFO: (4) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 12.471113ms)
Jul  3 00:10:30.863: INFO: (4) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 14.022188ms)
Jul  3 00:10:30.863: INFO: (4) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 14.322093ms)
Jul  3 00:10:30.863: INFO: (4) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 14.083724ms)
Jul  3 00:10:30.868: INFO: (4) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 19.817524ms)
Jul  3 00:10:30.878: INFO: (5) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 9.798982ms)
Jul  3 00:10:30.879: INFO: (5) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 10.408867ms)
Jul  3 00:10:30.879: INFO: (5) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 10.460635ms)
Jul  3 00:10:30.879: INFO: (5) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 10.50653ms)
Jul  3 00:10:30.879: INFO: (5) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 10.627599ms)
Jul  3 00:10:30.880: INFO: (5) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 11.127015ms)
Jul  3 00:10:30.883: INFO: (5) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 14.393862ms)
Jul  3 00:10:30.883: INFO: (5) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 14.446941ms)
Jul  3 00:10:30.883: INFO: (5) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 14.565173ms)
Jul  3 00:10:30.883: INFO: (5) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 14.43084ms)
Jul  3 00:10:30.883: INFO: (5) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 14.532871ms)
Jul  3 00:10:30.883: INFO: (5) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 14.499786ms)
Jul  3 00:10:30.883: INFO: (5) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 14.555427ms)
Jul  3 00:10:30.888: INFO: (5) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 19.50557ms)
Jul  3 00:10:30.888: INFO: (5) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 19.54865ms)
Jul  3 00:10:30.888: INFO: (5) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 19.64832ms)
Jul  3 00:10:30.898: INFO: (6) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 10.132304ms)
Jul  3 00:10:30.898: INFO: (6) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 10.002864ms)
Jul  3 00:10:30.898: INFO: (6) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 10.142228ms)
Jul  3 00:10:30.898: INFO: (6) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 10.07888ms)
Jul  3 00:10:30.898: INFO: (6) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 10.211282ms)
Jul  3 00:10:30.898: INFO: (6) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 10.062461ms)
Jul  3 00:10:30.898: INFO: (6) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 10.052822ms)
Jul  3 00:10:30.898: INFO: (6) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 10.16461ms)
Jul  3 00:10:30.898: INFO: (6) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 10.223441ms)
Jul  3 00:10:30.898: INFO: (6) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 10.156917ms)
Jul  3 00:10:30.898: INFO: (6) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 10.051046ms)
Jul  3 00:10:30.899: INFO: (6) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 10.996356ms)
Jul  3 00:10:30.902: INFO: (6) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 14.174669ms)
Jul  3 00:10:30.904: INFO: (6) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 16.14402ms)
Jul  3 00:10:30.905: INFO: (6) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 16.486157ms)
Jul  3 00:10:30.905: INFO: (6) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 16.471772ms)
Jul  3 00:10:30.914: INFO: (7) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 8.477399ms)
Jul  3 00:10:30.914: INFO: (7) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 8.469543ms)
Jul  3 00:10:30.914: INFO: (7) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 8.531133ms)
Jul  3 00:10:30.914: INFO: (7) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 8.715443ms)
Jul  3 00:10:30.914: INFO: (7) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 8.463445ms)
Jul  3 00:10:30.914: INFO: (7) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 8.493593ms)
Jul  3 00:10:30.914: INFO: (7) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 8.740953ms)
Jul  3 00:10:30.914: INFO: (7) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 8.795535ms)
Jul  3 00:10:30.916: INFO: (7) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 11.169164ms)
Jul  3 00:10:30.916: INFO: (7) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 11.23076ms)
Jul  3 00:10:30.916: INFO: (7) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 11.187768ms)
Jul  3 00:10:30.916: INFO: (7) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 11.307897ms)
Jul  3 00:10:30.916: INFO: (7) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 11.495876ms)
Jul  3 00:10:30.960: INFO: (7) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 54.65222ms)
Jul  3 00:10:30.960: INFO: (7) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 54.736333ms)
Jul  3 00:10:30.960: INFO: (7) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 54.777652ms)
Jul  3 00:10:30.970: INFO: (8) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 9.976994ms)
Jul  3 00:10:30.970: INFO: (8) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 9.830368ms)
Jul  3 00:10:30.970: INFO: (8) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 10.027827ms)
Jul  3 00:10:30.970: INFO: (8) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 9.942869ms)
Jul  3 00:10:30.970: INFO: (8) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 9.908078ms)
Jul  3 00:10:30.970: INFO: (8) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 9.783072ms)
Jul  3 00:10:30.970: INFO: (8) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 9.811775ms)
Jul  3 00:10:30.970: INFO: (8) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 10.177791ms)
Jul  3 00:10:30.970: INFO: (8) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 10.044295ms)
Jul  3 00:10:30.970: INFO: (8) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 10.201409ms)
Jul  3 00:10:30.970: INFO: (8) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 10.414985ms)
Jul  3 00:10:30.970: INFO: (8) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 10.338196ms)
Jul  3 00:10:30.974: INFO: (8) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 14.032411ms)
Jul  3 00:10:30.974: INFO: (8) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 14.148981ms)
Jul  3 00:10:30.974: INFO: (8) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 13.991614ms)
Jul  3 00:10:30.975: INFO: (8) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 15.080056ms)
Jul  3 00:10:30.985: INFO: (9) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 9.424965ms)
Jul  3 00:10:30.985: INFO: (9) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 9.609321ms)
Jul  3 00:10:30.985: INFO: (9) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 9.703373ms)
Jul  3 00:10:30.985: INFO: (9) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 9.450834ms)
Jul  3 00:10:30.985: INFO: (9) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 9.335077ms)
Jul  3 00:10:30.985: INFO: (9) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 9.438849ms)
Jul  3 00:10:30.985: INFO: (9) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 9.650134ms)
Jul  3 00:10:30.985: INFO: (9) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 9.861379ms)
Jul  3 00:10:30.985: INFO: (9) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 9.774166ms)
Jul  3 00:10:30.985: INFO: (9) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 9.636737ms)
Jul  3 00:10:30.985: INFO: (9) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 9.50991ms)
Jul  3 00:10:30.985: INFO: (9) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 9.74945ms)
Jul  3 00:10:31.028: INFO: (9) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 52.888756ms)
Jul  3 00:10:31.028: INFO: (9) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 53.038326ms)
Jul  3 00:10:31.028: INFO: (9) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 53.162436ms)
Jul  3 00:10:31.028: INFO: (9) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 53.444171ms)
Jul  3 00:10:31.038: INFO: (10) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 8.313925ms)
Jul  3 00:10:31.038: INFO: (10) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 8.986433ms)
Jul  3 00:10:31.038: INFO: (10) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 8.610613ms)
Jul  3 00:10:31.038: INFO: (10) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 8.453045ms)
Jul  3 00:10:31.038: INFO: (10) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 8.813865ms)
Jul  3 00:10:31.039: INFO: (10) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 10.121062ms)
Jul  3 00:10:31.039: INFO: (10) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 10.60318ms)
Jul  3 00:10:31.039: INFO: (10) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 10.283733ms)
Jul  3 00:10:31.041: INFO: (10) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 11.836194ms)
Jul  3 00:10:31.041: INFO: (10) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 11.579561ms)
Jul  3 00:10:31.041: INFO: (10) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 11.630283ms)
Jul  3 00:10:31.041: INFO: (10) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 11.689688ms)
Jul  3 00:10:31.041: INFO: (10) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 12.150653ms)
Jul  3 00:10:31.044: INFO: (10) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 15.436536ms)
Jul  3 00:10:31.046: INFO: (10) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 17.015912ms)
Jul  3 00:10:31.046: INFO: (10) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 17.478835ms)
Jul  3 00:10:31.063: INFO: (11) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 16.308228ms)
Jul  3 00:10:31.063: INFO: (11) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 16.065203ms)
Jul  3 00:10:31.063: INFO: (11) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 16.413444ms)
Jul  3 00:10:31.063: INFO: (11) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 16.180864ms)
Jul  3 00:10:31.063: INFO: (11) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 16.146183ms)
Jul  3 00:10:31.063: INFO: (11) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 16.629669ms)
Jul  3 00:10:31.063: INFO: (11) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 16.250648ms)
Jul  3 00:10:31.063: INFO: (11) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 16.382179ms)
Jul  3 00:10:31.063: INFO: (11) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 16.833773ms)
Jul  3 00:10:31.063: INFO: (11) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 16.954973ms)
Jul  3 00:10:31.068: INFO: (11) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 20.918155ms)
Jul  3 00:10:31.068: INFO: (11) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 20.80505ms)
Jul  3 00:10:31.068: INFO: (11) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 20.72709ms)
Jul  3 00:10:31.068: INFO: (11) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 20.787385ms)
Jul  3 00:10:31.068: INFO: (11) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 20.534189ms)
Jul  3 00:10:31.070: INFO: (11) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 23.474778ms)
Jul  3 00:10:31.077: INFO: (12) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 6.708203ms)
Jul  3 00:10:31.078: INFO: (12) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 7.614881ms)
Jul  3 00:10:31.080: INFO: (12) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 9.471555ms)
Jul  3 00:10:31.083: INFO: (12) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 12.098221ms)
Jul  3 00:10:31.089: INFO: (12) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 18.219894ms)
Jul  3 00:10:31.089: INFO: (12) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 18.179955ms)
Jul  3 00:10:31.089: INFO: (12) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 18.429912ms)
Jul  3 00:10:31.089: INFO: (12) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 18.431016ms)
Jul  3 00:10:31.089: INFO: (12) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 18.175468ms)
Jul  3 00:10:31.089: INFO: (12) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 18.164776ms)
Jul  3 00:10:31.089: INFO: (12) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 18.575086ms)
Jul  3 00:10:31.089: INFO: (12) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 18.714963ms)
Jul  3 00:10:31.089: INFO: (12) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 18.568155ms)
Jul  3 00:10:31.089: INFO: (12) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 18.758559ms)
Jul  3 00:10:31.123: INFO: (12) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 52.965069ms)
Jul  3 00:10:31.124: INFO: (12) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 53.172797ms)
Jul  3 00:10:31.134: INFO: (13) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 10.683377ms)
Jul  3 00:10:31.134: INFO: (13) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 10.634856ms)
Jul  3 00:10:31.137: INFO: (13) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 12.878522ms)
Jul  3 00:10:31.137: INFO: (13) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 13.020483ms)
Jul  3 00:10:31.137: INFO: (13) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 13.169537ms)
Jul  3 00:10:31.137: INFO: (13) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 12.961675ms)
Jul  3 00:10:31.137: INFO: (13) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 13.092963ms)
Jul  3 00:10:31.137: INFO: (13) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 13.18318ms)
Jul  3 00:10:31.137: INFO: (13) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 13.039804ms)
Jul  3 00:10:31.139: INFO: (13) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 15.241261ms)
Jul  3 00:10:31.139: INFO: (13) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 15.557465ms)
Jul  3 00:10:31.139: INFO: (13) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 15.578767ms)
Jul  3 00:10:31.139: INFO: (13) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 15.644655ms)
Jul  3 00:10:31.140: INFO: (13) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 16.734015ms)
Jul  3 00:10:31.141: INFO: (13) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 16.827116ms)
Jul  3 00:10:31.141: INFO: (13) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 17.009791ms)
Jul  3 00:10:31.152: INFO: (14) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 10.462652ms)
Jul  3 00:10:31.152: INFO: (14) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 10.900226ms)
Jul  3 00:10:31.152: INFO: (14) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 10.631474ms)
Jul  3 00:10:31.152: INFO: (14) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 10.714382ms)
Jul  3 00:10:31.152: INFO: (14) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 10.457749ms)
Jul  3 00:10:31.152: INFO: (14) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 10.425026ms)
Jul  3 00:10:31.152: INFO: (14) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 10.900115ms)
Jul  3 00:10:31.152: INFO: (14) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 11.00469ms)
Jul  3 00:10:31.152: INFO: (14) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 11.128042ms)
Jul  3 00:10:31.160: INFO: (14) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 18.504483ms)
Jul  3 00:10:31.160: INFO: (14) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 18.322406ms)
Jul  3 00:10:31.160: INFO: (14) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 18.899446ms)
Jul  3 00:10:31.161: INFO: (14) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 19.134372ms)
Jul  3 00:10:31.161: INFO: (14) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 19.199578ms)
Jul  3 00:10:31.166: INFO: (14) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 24.448221ms)
Jul  3 00:10:31.166: INFO: (14) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 24.59376ms)
Jul  3 00:10:31.175: INFO: (15) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 8.7958ms)
Jul  3 00:10:31.175: INFO: (15) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 8.097757ms)
Jul  3 00:10:31.175: INFO: (15) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 8.379346ms)
Jul  3 00:10:31.175: INFO: (15) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 8.304521ms)
Jul  3 00:10:31.180: INFO: (15) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 14.25056ms)
Jul  3 00:10:31.181: INFO: (15) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 14.186092ms)
Jul  3 00:10:31.181: INFO: (15) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 15.273813ms)
Jul  3 00:10:31.181: INFO: (15) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 15.155849ms)
Jul  3 00:10:31.181: INFO: (15) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 14.83136ms)
Jul  3 00:10:31.181: INFO: (15) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 15.032112ms)
Jul  3 00:10:31.181: INFO: (15) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 15.083521ms)
Jul  3 00:10:31.181: INFO: (15) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 15.242506ms)
Jul  3 00:10:31.183: INFO: (15) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 16.218712ms)
Jul  3 00:10:31.183: INFO: (15) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 16.055512ms)
Jul  3 00:10:31.183: INFO: (15) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 15.981553ms)
Jul  3 00:10:31.185: INFO: (15) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 18.890111ms)
Jul  3 00:10:31.197: INFO: (16) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 11.13653ms)
Jul  3 00:10:31.197: INFO: (16) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 11.234371ms)
Jul  3 00:10:31.197: INFO: (16) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 11.301744ms)
Jul  3 00:10:31.197: INFO: (16) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 11.225885ms)
Jul  3 00:10:31.202: INFO: (16) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 15.960772ms)
Jul  3 00:10:31.202: INFO: (16) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 16.015168ms)
Jul  3 00:10:31.202: INFO: (16) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 16.190411ms)
Jul  3 00:10:31.202: INFO: (16) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 16.18268ms)
Jul  3 00:10:31.202: INFO: (16) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 16.10525ms)
Jul  3 00:10:31.202: INFO: (16) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 16.180319ms)
Jul  3 00:10:31.203: INFO: (16) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 17.865055ms)
Jul  3 00:10:31.203: INFO: (16) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 17.914444ms)
Jul  3 00:10:31.203: INFO: (16) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 18.013028ms)
Jul  3 00:10:31.203: INFO: (16) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 17.919914ms)
Jul  3 00:10:31.203: INFO: (16) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 17.904673ms)
Jul  3 00:10:31.205: INFO: (16) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 19.293406ms)
Jul  3 00:10:31.216: INFO: (17) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 10.724675ms)
Jul  3 00:10:31.216: INFO: (17) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 10.71877ms)
Jul  3 00:10:31.216: INFO: (17) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 11.197673ms)
Jul  3 00:10:31.216: INFO: (17) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 10.932295ms)
Jul  3 00:10:31.221: INFO: (17) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 15.185812ms)
Jul  3 00:10:31.221: INFO: (17) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 15.401447ms)
Jul  3 00:10:31.221: INFO: (17) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 15.817721ms)
Jul  3 00:10:31.221: INFO: (17) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 15.364839ms)
Jul  3 00:10:31.221: INFO: (17) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 15.571346ms)
Jul  3 00:10:31.221: INFO: (17) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 15.317401ms)
Jul  3 00:10:31.221: INFO: (17) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 15.52728ms)
Jul  3 00:10:31.221: INFO: (17) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 15.573415ms)
Jul  3 00:10:31.221: INFO: (17) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 15.701765ms)
Jul  3 00:10:31.221: INFO: (17) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 15.512593ms)
Jul  3 00:10:31.221: INFO: (17) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 15.499088ms)
Jul  3 00:10:31.225: INFO: (17) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 20.154245ms)
Jul  3 00:10:31.235: INFO: (18) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 9.116528ms)
Jul  3 00:10:31.235: INFO: (18) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 9.177343ms)
Jul  3 00:10:31.235: INFO: (18) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 9.284431ms)
Jul  3 00:10:31.235: INFO: (18) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 8.909052ms)
Jul  3 00:10:31.237: INFO: (18) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 11.870019ms)
Jul  3 00:10:31.237: INFO: (18) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 11.38226ms)
Jul  3 00:10:31.237: INFO: (18) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 11.519682ms)
Jul  3 00:10:31.237: INFO: (18) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 11.818894ms)
Jul  3 00:10:31.237: INFO: (18) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 11.439938ms)
Jul  3 00:10:31.237: INFO: (18) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 11.633428ms)
Jul  3 00:10:31.237: INFO: (18) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 12.12152ms)
Jul  3 00:10:31.239: INFO: (18) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 13.942689ms)
Jul  3 00:10:31.239: INFO: (18) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 13.792951ms)
Jul  3 00:10:31.239: INFO: (18) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 13.670643ms)
Jul  3 00:10:31.241: INFO: (18) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 14.896033ms)
Jul  3 00:10:31.244: INFO: (18) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 18.259721ms)
Jul  3 00:10:31.251: INFO: (19) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname2/proxy/: bar (200; 7.820805ms)
Jul  3 00:10:31.251: INFO: (19) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 7.596223ms)
Jul  3 00:10:31.254: INFO: (19) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:160/proxy/: foo (200; 10.408764ms)
Jul  3 00:10:31.254: INFO: (19) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 10.634757ms)
Jul  3 00:10:31.254: INFO: (19) /api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/http:proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">... (200; 10.56857ms)
Jul  3 00:10:31.257: INFO: (19) /api/v1/namespaces/proxy-3341/services/proxy-service-kz6z9:portname1/proxy/: foo (200; 13.777137ms)
Jul  3 00:10:31.257: INFO: (19) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:443/proxy/tlsrewritem... (200; 13.856748ms)
Jul  3 00:10:31.257: INFO: (19) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf/proxy/rewriteme">test</a> (200; 13.634392ms)
Jul  3 00:10:31.257: INFO: (19) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:460/proxy/: tls baz (200; 13.709409ms)
Jul  3 00:10:31.257: INFO: (19) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:1080/proxy/rewriteme">test<... (200; 13.802267ms)
Jul  3 00:10:31.257: INFO: (19) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname1/proxy/: tls baz (200; 13.68892ms)
Jul  3 00:10:31.258: INFO: (19) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname2/proxy/: bar (200; 14.135932ms)
Jul  3 00:10:31.258: INFO: (19) /api/v1/namespaces/proxy-3341/pods/proxy-service-kz6z9-b9dkf:162/proxy/: bar (200; 14.198784ms)
Jul  3 00:10:31.258: INFO: (19) /api/v1/namespaces/proxy-3341/services/http:proxy-service-kz6z9:portname1/proxy/: foo (200; 14.130193ms)
Jul  3 00:10:31.258: INFO: (19) /api/v1/namespaces/proxy-3341/services/https:proxy-service-kz6z9:tlsportname2/proxy/: tls qux (200; 14.448137ms)
Jul  3 00:10:31.258: INFO: (19) /api/v1/namespaces/proxy-3341/pods/https:proxy-service-kz6z9-b9dkf:462/proxy/: tls qux (200; 14.551792ms)
STEP: deleting ReplicationController proxy-service-kz6z9 in namespace proxy-3341, will wait for the garbage collector to delete the pods
Jul  3 00:10:31.317: INFO: Deleting ReplicationController proxy-service-kz6z9 took: 4.614376ms
Jul  3 00:10:31.417: INFO: Terminating ReplicationController proxy-service-kz6z9 pods took: 100.303676ms
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jul  3 00:10:33.718: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-3341" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":356,"completed":56,"skipped":1048,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:10:33.729: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2085
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
Jul  3 00:10:33.861: INFO: Creating simple deployment test-deployment-qp2nw
Jul  3 00:10:33.875: INFO: deployment "test-deployment-qp2nw" doesn't have the required revision set
STEP: Getting /status
Jul  3 00:10:35.892: INFO: Deployment test-deployment-qp2nw has Conditions: [{Available True 2022-07-03 00:10:34 +0000 UTC 2022-07-03 00:10:34 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2022-07-03 00:10:34 +0000 UTC 2022-07-03 00:10:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qp2nw-688c4d6789" has successfully progressed.}]
STEP: updating Deployment Status
Jul  3 00:10:35.900: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 10, 34, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 10, 34, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 10, 34, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 10, 33, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-qp2nw-688c4d6789\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
Jul  3 00:10:35.903: INFO: Observed &Deployment event: ADDED
Jul  3 00:10:35.903: INFO: Observed Deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-03 00:10:33 +0000 UTC 2022-07-03 00:10:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qp2nw-688c4d6789"}
Jul  3 00:10:35.903: INFO: Observed &Deployment event: MODIFIED
Jul  3 00:10:35.903: INFO: Observed Deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-03 00:10:33 +0000 UTC 2022-07-03 00:10:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qp2nw-688c4d6789"}
Jul  3 00:10:35.903: INFO: Observed Deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-07-03 00:10:33 +0000 UTC 2022-07-03 00:10:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jul  3 00:10:35.903: INFO: Observed &Deployment event: MODIFIED
Jul  3 00:10:35.903: INFO: Observed Deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-07-03 00:10:33 +0000 UTC 2022-07-03 00:10:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jul  3 00:10:35.903: INFO: Observed Deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-03 00:10:33 +0000 UTC 2022-07-03 00:10:33 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-qp2nw-688c4d6789" is progressing.}
Jul  3 00:10:35.903: INFO: Observed &Deployment event: MODIFIED
Jul  3 00:10:35.903: INFO: Observed Deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-07-03 00:10:34 +0000 UTC 2022-07-03 00:10:34 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jul  3 00:10:35.903: INFO: Observed Deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-03 00:10:34 +0000 UTC 2022-07-03 00:10:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qp2nw-688c4d6789" has successfully progressed.}
Jul  3 00:10:35.903: INFO: Observed &Deployment event: MODIFIED
Jul  3 00:10:35.903: INFO: Observed Deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-07-03 00:10:34 +0000 UTC 2022-07-03 00:10:34 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jul  3 00:10:35.903: INFO: Observed Deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-03 00:10:34 +0000 UTC 2022-07-03 00:10:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qp2nw-688c4d6789" has successfully progressed.}
Jul  3 00:10:35.903: INFO: Found Deployment test-deployment-qp2nw in namespace deployment-2085 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jul  3 00:10:35.903: INFO: Deployment test-deployment-qp2nw has an updated status
STEP: patching the Statefulset Status
Jul  3 00:10:35.903: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jul  3 00:10:35.909: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
Jul  3 00:10:35.911: INFO: Observed &Deployment event: ADDED
Jul  3 00:10:35.911: INFO: Observed deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-03 00:10:33 +0000 UTC 2022-07-03 00:10:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qp2nw-688c4d6789"}
Jul  3 00:10:35.912: INFO: Observed &Deployment event: MODIFIED
Jul  3 00:10:35.912: INFO: Observed deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-03 00:10:33 +0000 UTC 2022-07-03 00:10:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qp2nw-688c4d6789"}
Jul  3 00:10:35.912: INFO: Observed deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-07-03 00:10:33 +0000 UTC 2022-07-03 00:10:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jul  3 00:10:35.912: INFO: Observed &Deployment event: MODIFIED
Jul  3 00:10:35.912: INFO: Observed deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-07-03 00:10:33 +0000 UTC 2022-07-03 00:10:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jul  3 00:10:35.912: INFO: Observed deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-03 00:10:33 +0000 UTC 2022-07-03 00:10:33 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-qp2nw-688c4d6789" is progressing.}
Jul  3 00:10:35.912: INFO: Observed &Deployment event: MODIFIED
Jul  3 00:10:35.912: INFO: Observed deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-07-03 00:10:34 +0000 UTC 2022-07-03 00:10:34 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jul  3 00:10:35.912: INFO: Observed deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-03 00:10:34 +0000 UTC 2022-07-03 00:10:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qp2nw-688c4d6789" has successfully progressed.}
Jul  3 00:10:35.912: INFO: Observed &Deployment event: MODIFIED
Jul  3 00:10:35.912: INFO: Observed deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-07-03 00:10:34 +0000 UTC 2022-07-03 00:10:34 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jul  3 00:10:35.912: INFO: Observed deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-03 00:10:34 +0000 UTC 2022-07-03 00:10:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qp2nw-688c4d6789" has successfully progressed.}
Jul  3 00:10:35.912: INFO: Observed deployment test-deployment-qp2nw in namespace deployment-2085 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jul  3 00:10:35.912: INFO: Observed &Deployment event: MODIFIED
Jul  3 00:10:35.912: INFO: Found deployment test-deployment-qp2nw in namespace deployment-2085 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Jul  3 00:10:35.912: INFO: Deployment test-deployment-qp2nw has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul  3 00:10:35.916: INFO: Deployment "test-deployment-qp2nw":
&Deployment{ObjectMeta:{test-deployment-qp2nw  deployment-2085  e4e24274-db33-4ef8-97d0-3b95d73918fa 10882 1 2022-07-03 00:10:33 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-07-03 00:10:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2022-07-03 00:10:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2022-07-03 00:10:35 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0053aca88 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-qp2nw-688c4d6789",LastUpdateTime:2022-07-03 00:10:35 +0000 UTC,LastTransitionTime:2022-07-03 00:10:35 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jul  3 00:10:35.919: INFO: New ReplicaSet "test-deployment-qp2nw-688c4d6789" of Deployment "test-deployment-qp2nw":
&ReplicaSet{ObjectMeta:{test-deployment-qp2nw-688c4d6789  deployment-2085  afce6d17-750c-4256-b520-7ff4d862ece7 10870 1 2022-07-03 00:10:33 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-qp2nw e4e24274-db33-4ef8-97d0-3b95d73918fa 0xc003ad8c50 0xc003ad8c51}] []  [{kube-controller-manager Update apps/v1 2022-07-03 00:10:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e4e24274-db33-4ef8-97d0-3b95d73918fa\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:10:34 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 688c4d6789,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003ad8cf8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jul  3 00:10:35.923: INFO: Pod "test-deployment-qp2nw-688c4d6789-nx2zf" is available:
&Pod{ObjectMeta:{test-deployment-qp2nw-688c4d6789-nx2zf test-deployment-qp2nw-688c4d6789- deployment-2085  727cfb0f-a222-4262-ad4b-9edf45906c5b 10869 0 2022-07-03 00:10:33 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[cni.projectcalico.org/containerID:0833021123cefccfdec301d13dc2387392c30b05b3f546eed4bba635b7333914 cni.projectcalico.org/podIP:100.64.1.61/32 cni.projectcalico.org/podIPs:100.64.1.61/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-qp2nw-688c4d6789 afce6d17-750c-4256-b520-7ff4d862ece7 0xc003f55520 0xc003f55521}] []  [{kube-controller-manager Update v1 2022-07-03 00:10:33 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"afce6d17-750c-4256-b520-7ff4d862ece7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 00:10:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 00:10:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.1.61\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xwp8t,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xwp8t,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:10:33 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:10:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:10:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:10:33 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:100.64.1.61,StartTime:2022-07-03 00:10:33 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 00:10:34 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://e9b11e1352276e3f401a3b856d60b6fc42b2512446e165680c696ce74b3d9660,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.1.61,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul  3 00:10:35.923: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2085" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":356,"completed":57,"skipped":1094,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:10:35.931: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-8051
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Jul  3 00:10:36.063: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:10:51.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8051" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":356,"completed":58,"skipped":1113,"failed":0}
SSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:10:51.323: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-6289
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption-release is created
Jul  3 00:10:51.478: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:10:53.484: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
Jul  3 00:10:54.500: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jul  3 00:10:55.525: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-6289" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":356,"completed":59,"skipped":1116,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:10:55.535: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-5347
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Jul  3 00:10:55.658: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:11:12.245: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-5347" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":356,"completed":60,"skipped":1131,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:11:12.263: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-8777
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jul  3 00:11:14.419: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-8777" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]","total":356,"completed":61,"skipped":1161,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:11:14.427: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1213
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting the proxy server
Jul  3 00:11:14.554: INFO: Asynchronously running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-1213 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 00:11:14.605: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1213" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":356,"completed":62,"skipped":1176,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:11:14.616: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-1642
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
Jul  3 00:11:20.774: INFO: 90 pods remaining
Jul  3 00:11:20.774: INFO: 90 pods has nil DeletionTimestamp
Jul  3 00:11:20.774: INFO: 
Jul  3 00:11:21.772: INFO: 70 pods remaining
Jul  3 00:11:21.772: INFO: 70 pods has nil DeletionTimestamp
Jul  3 00:11:21.772: INFO: 
Jul  3 00:11:22.773: INFO: 70 pods remaining
Jul  3 00:11:22.773: INFO: 70 pods has nil DeletionTimestamp
Jul  3 00:11:22.773: INFO: 
Jul  3 00:11:23.771: INFO: 40 pods remaining
Jul  3 00:11:23.771: INFO: 40 pods has nil DeletionTimestamp
Jul  3 00:11:23.771: INFO: 
Jul  3 00:11:24.770: INFO: 40 pods remaining
Jul  3 00:11:24.770: INFO: 40 pods has nil DeletionTimestamp
Jul  3 00:11:24.770: INFO: 
Jul  3 00:11:25.767: INFO: 10 pods remaining
Jul  3 00:11:25.767: INFO: 10 pods has nil DeletionTimestamp
Jul  3 00:11:25.767: INFO: 
STEP: Gathering metrics
W0703 00:11:26.775892    4513 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jul  3 00:11:26.776: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul  3 00:11:26.776: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-1642" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":356,"completed":63,"skipped":1181,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:11:26.784: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-144
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul  3 00:11:26.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-144" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":356,"completed":64,"skipped":1198,"failed":0}
SS
------------------------------
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:11:26.938: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-576
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secret-namespace-1063
STEP: Creating secret with name secret-test-59f8ce2d-2968-4c02-b79f-7ebf868e83f7
STEP: Creating a pod to test consume secrets
Jul  3 00:11:27.194: INFO: Waiting up to 5m0s for pod "pod-secrets-3527dd87-8996-4bd6-8b67-673a56cfc53e" in namespace "secrets-576" to be "Succeeded or Failed"
Jul  3 00:11:27.199: INFO: Pod "pod-secrets-3527dd87-8996-4bd6-8b67-673a56cfc53e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.812675ms
Jul  3 00:11:29.202: INFO: Pod "pod-secrets-3527dd87-8996-4bd6-8b67-673a56cfc53e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008398197s
Jul  3 00:11:31.207: INFO: Pod "pod-secrets-3527dd87-8996-4bd6-8b67-673a56cfc53e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012563447s
STEP: Saw pod success
Jul  3 00:11:31.207: INFO: Pod "pod-secrets-3527dd87-8996-4bd6-8b67-673a56cfc53e" satisfied condition "Succeeded or Failed"
Jul  3 00:11:31.209: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-secrets-3527dd87-8996-4bd6-8b67-673a56cfc53e container secret-volume-test: <nil>
STEP: delete the pod
Jul  3 00:11:31.269: INFO: Waiting for pod pod-secrets-3527dd87-8996-4bd6-8b67-673a56cfc53e to disappear
Jul  3 00:11:31.272: INFO: Pod pod-secrets-3527dd87-8996-4bd6-8b67-673a56cfc53e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul  3 00:11:31.272: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-576" for this suite.
STEP: Destroying namespace "secret-namespace-1063" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":356,"completed":65,"skipped":1200,"failed":0}
S
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:11:31.285: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-6978
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul  3 00:11:47.491: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-6978" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":356,"completed":66,"skipped":1201,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:11:47.501: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-375
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:11:47.640: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-375" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":356,"completed":67,"skipped":1225,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:11:47.648: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-4845
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Jul  3 00:11:47.785: INFO: Waiting up to 5m0s for pod "security-context-4e16ea29-dce4-463d-be84-a6988046a739" in namespace "security-context-4845" to be "Succeeded or Failed"
Jul  3 00:11:47.788: INFO: Pod "security-context-4e16ea29-dce4-463d-be84-a6988046a739": Phase="Pending", Reason="", readiness=false. Elapsed: 3.54147ms
Jul  3 00:11:49.795: INFO: Pod "security-context-4e16ea29-dce4-463d-be84-a6988046a739": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009809447s
Jul  3 00:11:51.800: INFO: Pod "security-context-4e16ea29-dce4-463d-be84-a6988046a739": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015246444s
STEP: Saw pod success
Jul  3 00:11:51.800: INFO: Pod "security-context-4e16ea29-dce4-463d-be84-a6988046a739" satisfied condition "Succeeded or Failed"
Jul  3 00:11:51.804: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod security-context-4e16ea29-dce4-463d-be84-a6988046a739 container test-container: <nil>
STEP: delete the pod
Jul  3 00:11:51.861: INFO: Waiting for pod security-context-4e16ea29-dce4-463d-be84-a6988046a739 to disappear
Jul  3 00:11:51.864: INFO: Pod security-context-4e16ea29-dce4-463d-be84-a6988046a739 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jul  3 00:11:51.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-4845" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":68,"skipped":1265,"failed":0}
S
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:11:51.874: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-6101
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:11:52.000: INFO: Creating deployment "test-recreate-deployment"
Jul  3 00:11:52.005: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Jul  3 00:11:52.012: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Jul  3 00:11:54.020: INFO: Waiting deployment "test-recreate-deployment" to complete
Jul  3 00:11:54.023: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Jul  3 00:11:54.030: INFO: Updating deployment test-recreate-deployment
Jul  3 00:11:54.030: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul  3 00:11:54.074: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-6101  54c50599-5265-4d9a-898c-ad5bd777e87d 12228 2 2022-07-03 00:11:52 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-07-03 00:11:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:11:54 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004678a48 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-07-03 00:11:54 +0000 UTC,LastTransitionTime:2022-07-03 00:11:54 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cd8586fc7" is progressing.,LastUpdateTime:2022-07-03 00:11:54 +0000 UTC,LastTransitionTime:2022-07-03 00:11:52 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Jul  3 00:11:54.077: INFO: New ReplicaSet "test-recreate-deployment-cd8586fc7" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cd8586fc7  deployment-6101  9d6980e1-aeb9-459e-8f08-d99496b9b4bc 12227 1 2022-07-03 00:11:54 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 54c50599-5265-4d9a-898c-ad5bd777e87d 0xc00461f150 0xc00461f151}] []  [{kube-controller-manager Update apps/v1 2022-07-03 00:11:54 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"54c50599-5265-4d9a-898c-ad5bd777e87d\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:11:54 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cd8586fc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00461f228 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jul  3 00:11:54.077: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Jul  3 00:11:54.078: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-845d658455  deployment-6101  4870d8dc-2296-4556-a46b-f14f3a8302e9 12220 2 2022-07-03 00:11:52 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 54c50599-5265-4d9a-898c-ad5bd777e87d 0xc00461efc7 0xc00461efc8}] []  [{kube-controller-manager Update apps/v1 2022-07-03 00:11:52 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"54c50599-5265-4d9a-898c-ad5bd777e87d\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:11:54 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 845d658455,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00461f0a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jul  3 00:11:54.087: INFO: Pod "test-recreate-deployment-cd8586fc7-pnpfn" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cd8586fc7-pnpfn test-recreate-deployment-cd8586fc7- deployment-6101  9c20b9a5-4c1f-48ae-9f7f-9329e5aa4435 12229 0 2022-07-03 00:11:54 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-recreate-deployment-cd8586fc7 9d6980e1-aeb9-459e-8f08-d99496b9b4bc 0xc0046780a0 0xc0046780a1}] []  [{kube-controller-manager Update v1 2022-07-03 00:11:54 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9d6980e1-aeb9-459e-8f08-d99496b9b4bc\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-03 00:11:54 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-glpvk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-glpvk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:11:54 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:11:54 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:11:54 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:11:54 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:,StartTime:2022-07-03 00:11:54 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul  3 00:11:54.087: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-6101" for this suite.
•{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":69,"skipped":1266,"failed":0}
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:11:54.096: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-8330
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jul  3 00:11:57.260: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jul  3 00:11:57.273: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-8330" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":70,"skipped":1269,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:11:57.283: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9017
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:11:57.420: INFO: Waiting up to 5m0s for pod "downwardapi-volume-3ebc9257-a5b5-4dba-a089-00695b82861c" in namespace "projected-9017" to be "Succeeded or Failed"
Jul  3 00:11:57.423: INFO: Pod "downwardapi-volume-3ebc9257-a5b5-4dba-a089-00695b82861c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.848934ms
Jul  3 00:11:59.428: INFO: Pod "downwardapi-volume-3ebc9257-a5b5-4dba-a089-00695b82861c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007362807s
Jul  3 00:12:01.433: INFO: Pod "downwardapi-volume-3ebc9257-a5b5-4dba-a089-00695b82861c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012601046s
STEP: Saw pod success
Jul  3 00:12:01.433: INFO: Pod "downwardapi-volume-3ebc9257-a5b5-4dba-a089-00695b82861c" satisfied condition "Succeeded or Failed"
Jul  3 00:12:01.437: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-3ebc9257-a5b5-4dba-a089-00695b82861c container client-container: <nil>
STEP: delete the pod
Jul  3 00:12:01.454: INFO: Waiting for pod downwardapi-volume-3ebc9257-a5b5-4dba-a089-00695b82861c to disappear
Jul  3 00:12:01.457: INFO: Pod downwardapi-volume-3ebc9257-a5b5-4dba-a089-00695b82861c no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul  3 00:12:01.457: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9017" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":71,"skipped":1301,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:12:01.465: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1652
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Jul  3 00:12:01.594: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-1652 create -f -'
Jul  3 00:12:02.249: INFO: stderr: ""
Jul  3 00:12:02.250: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jul  3 00:12:03.254: INFO: Selector matched 1 pods for map[app:agnhost]
Jul  3 00:12:03.254: INFO: Found 1 / 1
Jul  3 00:12:03.254: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
Jul  3 00:12:03.258: INFO: Selector matched 1 pods for map[app:agnhost]
Jul  3 00:12:03.258: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jul  3 00:12:03.258: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-1652 patch pod agnhost-primary-rqspm -p {"metadata":{"annotations":{"x":"y"}}}'
Jul  3 00:12:03.343: INFO: stderr: ""
Jul  3 00:12:03.343: INFO: stdout: "pod/agnhost-primary-rqspm patched\n"
STEP: checking annotations
Jul  3 00:12:03.347: INFO: Selector matched 1 pods for map[app:agnhost]
Jul  3 00:12:03.347: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 00:12:03.347: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1652" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":356,"completed":72,"skipped":1328,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:12:03.358: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-9095
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-4016
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-2936
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:12:16.759: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-9095" for this suite.
STEP: Destroying namespace "nsdeletetest-4016" for this suite.
Jul  3 00:12:16.771: INFO: Namespace nsdeletetest-4016 was already deleted
STEP: Destroying namespace "nsdeletetest-2936" for this suite.
•{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":356,"completed":73,"skipped":1366,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:12:16.775: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-353
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:12:17.339: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:12:20.374: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:12:32.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-353" for this suite.
STEP: Destroying namespace "webhook-353-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":356,"completed":74,"skipped":1407,"failed":0}
SSS
------------------------------
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:12:32.663: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-9116
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jul  3 00:12:32.812: INFO: The status of Pod pod-update-1cda33b6-90d5-4c41-826b-a80c981fccde is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:12:34.816: INFO: The status of Pod pod-update-1cda33b6-90d5-4c41-826b-a80c981fccde is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Jul  3 00:12:35.337: INFO: Successfully updated pod "pod-update-1cda33b6-90d5-4c41-826b-a80c981fccde"
STEP: verifying the updated pod is in kubernetes
Jul  3 00:12:35.344: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul  3 00:12:35.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-9116" for this suite.
•{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":356,"completed":75,"skipped":1410,"failed":0}
S
------------------------------
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:12:35.356: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-755
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:12:35.499: INFO: Pod name sample-pod: Found 0 pods out of 1
Jul  3 00:12:40.506: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
Jul  3 00:12:40.521: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
Jul  3 00:12:40.529: INFO: observed ReplicaSet test-rs in namespace replicaset-755 with ReadyReplicas 1, AvailableReplicas 1
Jul  3 00:12:40.543: INFO: observed ReplicaSet test-rs in namespace replicaset-755 with ReadyReplicas 1, AvailableReplicas 1
Jul  3 00:12:40.557: INFO: observed ReplicaSet test-rs in namespace replicaset-755 with ReadyReplicas 1, AvailableReplicas 1
Jul  3 00:12:40.560: INFO: observed ReplicaSet test-rs in namespace replicaset-755 with ReadyReplicas 1, AvailableReplicas 1
Jul  3 00:12:42.134: INFO: observed ReplicaSet test-rs in namespace replicaset-755 with ReadyReplicas 2, AvailableReplicas 2
Jul  3 00:12:46.417: INFO: observed Replicaset test-rs in namespace replicaset-755 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jul  3 00:12:46.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-755" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":356,"completed":76,"skipped":1411,"failed":0}
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:12:46.428: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-9233
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Jul  3 00:12:46.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-9233" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":77,"skipped":1415,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:12:46.573: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-9045
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nspatchtest-22b96388-da7c-4c15-9293-5c252359899c-7369
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:12:46.828: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-9045" for this suite.
STEP: Destroying namespace "nspatchtest-22b96388-da7c-4c15-9293-5c252359899c-7369" for this suite.
•{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":356,"completed":78,"skipped":1424,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:12:46.840: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-3344
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jul  3 00:12:47.001: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 00:12:47.001: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm is running 0 daemon pod, expected 1
Jul  3 00:12:48.011: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 00:12:48.011: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm is running 0 daemon pod, expected 1
Jul  3 00:12:49.011: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul  3 00:12:49.011: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Getting /status
Jul  3 00:12:49.018: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
Jul  3 00:12:49.027: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
Jul  3 00:12:49.029: INFO: Observed &DaemonSet event: ADDED
Jul  3 00:12:49.030: INFO: Observed &DaemonSet event: MODIFIED
Jul  3 00:12:49.030: INFO: Observed &DaemonSet event: MODIFIED
Jul  3 00:12:49.030: INFO: Observed &DaemonSet event: MODIFIED
Jul  3 00:12:49.030: INFO: Found daemon set daemon-set in namespace daemonsets-3344 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jul  3 00:12:49.030: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
Jul  3 00:12:49.039: INFO: Observed &DaemonSet event: ADDED
Jul  3 00:12:49.039: INFO: Observed &DaemonSet event: MODIFIED
Jul  3 00:12:49.039: INFO: Observed &DaemonSet event: MODIFIED
Jul  3 00:12:49.039: INFO: Observed &DaemonSet event: MODIFIED
Jul  3 00:12:49.039: INFO: Observed daemon set daemon-set in namespace daemonsets-3344 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jul  3 00:12:49.039: INFO: Observed &DaemonSet event: MODIFIED
Jul  3 00:12:49.039: INFO: Found daemon set daemon-set in namespace daemonsets-3344 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Jul  3 00:12:49.039: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3344, will wait for the garbage collector to delete the pods
Jul  3 00:12:49.102: INFO: Deleting DaemonSet.extensions daemon-set took: 4.603855ms
Jul  3 00:12:49.203: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.303625ms
Jul  3 00:12:52.507: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 00:12:52.507: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jul  3 00:12:52.510: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12826"},"items":null}

Jul  3 00:12:52.513: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12826"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:12:52.525: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-3344" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":356,"completed":79,"skipped":1444,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:12:52.533: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-2241
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jul  3 00:12:52.659: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jul  3 00:12:52.667: INFO: Waiting for terminating namespaces to be deleted...
Jul  3 00:12:52.670: INFO: 
Logging pods the apiserver thinks is on node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm before test
Jul  3 00:12:52.680: INFO: addons-nginx-ingress-controller-7c48bb6fc9-cssxn from kube-system started at 2022-07-02 23:56:06 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.680: INFO: 	Container nginx-ingress-controller ready: true, restart count 0
Jul  3 00:12:52.680: INFO: apiserver-proxy-kjgqw from kube-system started at 2022-07-02 23:50:00 +0000 UTC (2 container statuses recorded)
Jul  3 00:12:52.680: INFO: 	Container proxy ready: true, restart count 0
Jul  3 00:12:52.680: INFO: 	Container sidecar ready: true, restart count 0
Jul  3 00:12:52.680: INFO: blackbox-exporter-559b7f4b59-pggst from kube-system started at 2022-07-02 23:56:06 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.680: INFO: 	Container blackbox-exporter ready: true, restart count 0
Jul  3 00:12:52.680: INFO: blackbox-exporter-559b7f4b59-w7bnc from kube-system started at 2022-07-02 23:57:06 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.680: INFO: 	Container blackbox-exporter ready: true, restart count 0
Jul  3 00:12:52.680: INFO: calico-kube-controllers-6959b48bb7-h9nqq from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.680: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Jul  3 00:12:52.680: INFO: calico-node-lrbdv from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.680: INFO: 	Container calico-node ready: true, restart count 0
Jul  3 00:12:52.680: INFO: csi-driver-node-d66gz from kube-system started at 2022-07-02 23:50:00 +0000 UTC (3 container statuses recorded)
Jul  3 00:12:52.680: INFO: 	Container csi-driver ready: true, restart count 0
Jul  3 00:12:52.680: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Jul  3 00:12:52.680: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Jul  3 00:12:52.680: INFO: egress-filter-applier-hh2tw from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.680: INFO: 	Container egress-filter-applier ready: true, restart count 0
Jul  3 00:12:52.680: INFO: kube-proxy-worker-1-v1.24.2-2xlkb from kube-system started at 2022-07-03 00:07:07 +0000 UTC (2 container statuses recorded)
Jul  3 00:12:52.680: INFO: 	Container conntrack-fix ready: true, restart count 0
Jul  3 00:12:52.680: INFO: 	Container kube-proxy ready: true, restart count 0
Jul  3 00:12:52.680: INFO: node-exporter-sxs7w from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.680: INFO: 	Container node-exporter ready: true, restart count 0
Jul  3 00:12:52.680: INFO: node-problem-detector-pnv6l from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.680: INFO: 	Container node-problem-detector ready: true, restart count 0
Jul  3 00:12:52.680: INFO: 
Logging pods the apiserver thinks is on node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b before test
Jul  3 00:12:52.692: INFO: addons-nginx-ingress-nginx-ingress-k8s-backend-b6c66fdff-dl2h7 from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container nginx-ingress-nginx-ingress-k8s-backend ready: true, restart count 0
Jul  3 00:12:52.692: INFO: apiserver-proxy-mgzwv from kube-system started at 2022-07-02 23:49:52 +0000 UTC (2 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container proxy ready: true, restart count 0
Jul  3 00:12:52.692: INFO: 	Container sidecar ready: true, restart count 0
Jul  3 00:12:52.692: INFO: calico-node-dvrpl from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container calico-node ready: true, restart count 0
Jul  3 00:12:52.692: INFO: calico-node-vertical-autoscaler-5b74b8f994-4v6kp from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container autoscaler ready: true, restart count 0
Jul  3 00:12:52.692: INFO: calico-typha-deploy-7f646d87dc-5lzhs from kube-system started at 2022-07-02 23:51:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container calico-typha ready: true, restart count 0
Jul  3 00:12:52.692: INFO: calico-typha-horizontal-autoscaler-55ff99f5cf-tnn7q from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container autoscaler ready: true, restart count 0
Jul  3 00:12:52.692: INFO: calico-typha-vertical-autoscaler-78b946fc85-9vzmk from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container autoscaler ready: true, restart count 0
Jul  3 00:12:52.692: INFO: coredns-7f6bdd8558-68vlm from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container coredns ready: true, restart count 0
Jul  3 00:12:52.692: INFO: coredns-7f6bdd8558-p4gr6 from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container coredns ready: true, restart count 0
Jul  3 00:12:52.692: INFO: csi-driver-node-w722v from kube-system started at 2022-07-02 23:49:52 +0000 UTC (3 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container csi-driver ready: true, restart count 0
Jul  3 00:12:52.692: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Jul  3 00:12:52.692: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Jul  3 00:12:52.692: INFO: egress-filter-applier-6m5b7 from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container egress-filter-applier ready: true, restart count 0
Jul  3 00:12:52.692: INFO: kube-proxy-worker-1-v1.24.2-msvh8 from kube-system started at 2022-07-03 00:07:07 +0000 UTC (2 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container conntrack-fix ready: true, restart count 0
Jul  3 00:12:52.692: INFO: 	Container kube-proxy ready: true, restart count 0
Jul  3 00:12:52.692: INFO: metrics-server-6654459fc6-4f92g from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container metrics-server ready: true, restart count 0
Jul  3 00:12:52.692: INFO: node-exporter-f95js from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container node-exporter ready: true, restart count 0
Jul  3 00:12:52.692: INFO: node-problem-detector-nj5t7 from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container node-problem-detector ready: true, restart count 0
Jul  3 00:12:52.692: INFO: vpn-shoot-7788586576-q5cf7 from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container vpn-shoot ready: true, restart count 0
Jul  3 00:12:52.692: INFO: dashboard-metrics-scraper-9c4f98cd5-cwln9 from kubernetes-dashboard started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Jul  3 00:12:52.692: INFO: kubernetes-dashboard-789c777b5c-8wjzk from kubernetes-dashboard started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:12:52.692: INFO: 	Container kubernetes-dashboard ready: true, restart count 4
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.16fe29586f411026], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:12:53.724: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-2241" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":356,"completed":80,"skipped":1470,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:12:53.735: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-5391
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jul  3 00:14:01.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-5391" for this suite.
•{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":356,"completed":81,"skipped":1513,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:14:01.892: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7284
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-0a6a1cf8-94d5-43af-9c01-5fa34e31df84
STEP: Creating a pod to test consume secrets
Jul  3 00:14:02.045: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-4857b5e1-64dd-4815-bdb0-ea8ed2f2e492" in namespace "projected-7284" to be "Succeeded or Failed"
Jul  3 00:14:02.049: INFO: Pod "pod-projected-secrets-4857b5e1-64dd-4815-bdb0-ea8ed2f2e492": Phase="Pending", Reason="", readiness=false. Elapsed: 3.353747ms
Jul  3 00:14:04.053: INFO: Pod "pod-projected-secrets-4857b5e1-64dd-4815-bdb0-ea8ed2f2e492": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007776838s
Jul  3 00:14:06.058: INFO: Pod "pod-projected-secrets-4857b5e1-64dd-4815-bdb0-ea8ed2f2e492": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012433456s
STEP: Saw pod success
Jul  3 00:14:06.058: INFO: Pod "pod-projected-secrets-4857b5e1-64dd-4815-bdb0-ea8ed2f2e492" satisfied condition "Succeeded or Failed"
Jul  3 00:14:06.061: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-secrets-4857b5e1-64dd-4815-bdb0-ea8ed2f2e492 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jul  3 00:14:06.082: INFO: Waiting for pod pod-projected-secrets-4857b5e1-64dd-4815-bdb0-ea8ed2f2e492 to disappear
Jul  3 00:14:06.085: INFO: Pod pod-projected-secrets-4857b5e1-64dd-4815-bdb0-ea8ed2f2e492 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul  3 00:14:06.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7284" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":82,"skipped":1595,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests 
  should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:14:06.094: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename conformance-tests
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in conformance-tests-439
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
STEP: Getting node addresses
Jul  3 00:14:06.222: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:188
Jul  3 00:14:06.228: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "conformance-tests-439" for this suite.
•{"msg":"PASSED [sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]","total":356,"completed":83,"skipped":1610,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:14:06.237: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-2100
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-6e7d33aa-e7f2-471a-9539-ae9c9c81f460
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 00:14:08.413: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2100" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":84,"skipped":1749,"failed":0}
SSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:14:08.423: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-4198
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jul  3 00:20:00.579: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-4198" for this suite.

• [SLOW TEST:352.167 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":356,"completed":85,"skipped":1754,"failed":0}
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:20:00.590: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-1566
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jul  3 00:20:00.724: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jul  3 00:20:06.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-1566" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":356,"completed":86,"skipped":1758,"failed":0}
SSSS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:20:06.058: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8463
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8463.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8463.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul  3 00:20:14.256: INFO: DNS probes using dns-test-e28d33e0-5e1f-45b9-9a51-77e09037f75b succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8463.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8463.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul  3 00:20:16.363: INFO: File wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local from pod  dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jul  3 00:20:16.372: INFO: File jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local from pod  dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jul  3 00:20:16.373: INFO: Lookups using dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 failed for: [wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local]

Jul  3 00:20:21.427: INFO: File wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local from pod  dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jul  3 00:20:21.434: INFO: File jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local from pod  dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jul  3 00:20:21.434: INFO: Lookups using dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 failed for: [wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local]

Jul  3 00:20:26.385: INFO: File wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local from pod  dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jul  3 00:20:26.392: INFO: File jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local from pod  dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jul  3 00:20:26.392: INFO: Lookups using dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 failed for: [wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local]

Jul  3 00:20:31.383: INFO: File wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local from pod  dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jul  3 00:20:31.390: INFO: File jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local from pod  dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jul  3 00:20:31.390: INFO: Lookups using dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 failed for: [wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local]

Jul  3 00:20:36.384: INFO: File wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local from pod  dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jul  3 00:20:36.391: INFO: File jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local from pod  dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jul  3 00:20:36.391: INFO: Lookups using dns-8463/dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 failed for: [wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local]

Jul  3 00:20:41.389: INFO: DNS probes using dns-test-ef8cc439-ac2f-4475-8336-aa7c43acd4f0 succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8463.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8463.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8463.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8463.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul  3 00:20:43.519: INFO: DNS probes using dns-test-f4d5ee8f-ddb0-4992-af21-1650a7b5cefe succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul  3 00:20:43.535: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8463" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":356,"completed":87,"skipped":1762,"failed":0}

------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:20:43.546: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5630
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-97ed3168-8c70-4486-8b3a-dcade46141ef
STEP: Creating a pod to test consume secrets
Jul  3 00:20:43.692: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-21ed033f-5715-47f6-b930-b86a5a49e8cb" in namespace "projected-5630" to be "Succeeded or Failed"
Jul  3 00:20:43.696: INFO: Pod "pod-projected-secrets-21ed033f-5715-47f6-b930-b86a5a49e8cb": Phase="Pending", Reason="", readiness=false. Elapsed: 3.979857ms
Jul  3 00:20:45.702: INFO: Pod "pod-projected-secrets-21ed033f-5715-47f6-b930-b86a5a49e8cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009279543s
Jul  3 00:20:47.706: INFO: Pod "pod-projected-secrets-21ed033f-5715-47f6-b930-b86a5a49e8cb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014016899s
STEP: Saw pod success
Jul  3 00:20:47.707: INFO: Pod "pod-projected-secrets-21ed033f-5715-47f6-b930-b86a5a49e8cb" satisfied condition "Succeeded or Failed"
Jul  3 00:20:47.710: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-secrets-21ed033f-5715-47f6-b930-b86a5a49e8cb container projected-secret-volume-test: <nil>
STEP: delete the pod
Jul  3 00:20:47.775: INFO: Waiting for pod pod-projected-secrets-21ed033f-5715-47f6-b930-b86a5a49e8cb to disappear
Jul  3 00:20:47.779: INFO: Pod pod-projected-secrets-21ed033f-5715-47f6-b930-b86a5a49e8cb no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul  3 00:20:47.779: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5630" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":88,"skipped":1762,"failed":0}

------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:20:47.791: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4483
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-4483/configmap-test-c8ca98ad-9600-46cf-b228-c0be036aa5a9
STEP: Creating a pod to test consume configMaps
Jul  3 00:20:47.941: INFO: Waiting up to 5m0s for pod "pod-configmaps-065fda8e-2023-478a-bd66-eae0305640f4" in namespace "configmap-4483" to be "Succeeded or Failed"
Jul  3 00:20:47.945: INFO: Pod "pod-configmaps-065fda8e-2023-478a-bd66-eae0305640f4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.188262ms
Jul  3 00:20:49.951: INFO: Pod "pod-configmaps-065fda8e-2023-478a-bd66-eae0305640f4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010621725s
Jul  3 00:20:51.956: INFO: Pod "pod-configmaps-065fda8e-2023-478a-bd66-eae0305640f4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015852982s
STEP: Saw pod success
Jul  3 00:20:51.956: INFO: Pod "pod-configmaps-065fda8e-2023-478a-bd66-eae0305640f4" satisfied condition "Succeeded or Failed"
Jul  3 00:20:51.961: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-configmaps-065fda8e-2023-478a-bd66-eae0305640f4 container env-test: <nil>
STEP: delete the pod
Jul  3 00:20:51.979: INFO: Waiting for pod pod-configmaps-065fda8e-2023-478a-bd66-eae0305640f4 to disappear
Jul  3 00:20:51.982: INFO: Pod pod-configmaps-065fda8e-2023-478a-bd66-eae0305640f4 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 00:20:51.982: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4483" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":356,"completed":89,"skipped":1762,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:20:51.993: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5610
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service multi-endpoint-test in namespace services-5610
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5610 to expose endpoints map[]
Jul  3 00:20:52.143: INFO: successfully validated that service multi-endpoint-test in namespace services-5610 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-5610
Jul  3 00:20:52.158: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:20:54.164: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5610 to expose endpoints map[pod1:[100]]
Jul  3 00:20:54.180: INFO: successfully validated that service multi-endpoint-test in namespace services-5610 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-5610
Jul  3 00:20:54.193: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:20:56.199: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5610 to expose endpoints map[pod1:[100] pod2:[101]]
Jul  3 00:20:56.221: INFO: successfully validated that service multi-endpoint-test in namespace services-5610 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
Jul  3 00:20:56.221: INFO: Creating new exec pod
Jul  3 00:20:59.239: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-5610 exec execpod95lm4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
Jul  3 00:20:59.510: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Jul  3 00:20:59.510: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:20:59.510: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-5610 exec execpod95lm4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.107.64.176 80'
Jul  3 00:20:59.810: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.107.64.176 80\nConnection to 100.107.64.176 80 port [tcp/http] succeeded!\n"
Jul  3 00:20:59.810: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:20:59.810: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-5610 exec execpod95lm4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
Jul  3 00:21:00.080: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Jul  3 00:21:00.082: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:21:00.082: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-5610 exec execpod95lm4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.107.64.176 81'
Jul  3 00:21:00.335: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.107.64.176 81\nConnection to 100.107.64.176 81 port [tcp/*] succeeded!\n"
Jul  3 00:21:00.335: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-5610
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5610 to expose endpoints map[pod2:[101]]
Jul  3 00:21:00.362: INFO: successfully validated that service multi-endpoint-test in namespace services-5610 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-5610
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5610 to expose endpoints map[]
Jul  3 00:21:00.383: INFO: successfully validated that service multi-endpoint-test in namespace services-5610 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 00:21:00.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5610" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":356,"completed":90,"skipped":1782,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:00.406: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4920
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:21:00.540: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4920 version'
Jul  3 00:21:00.594: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Jul  3 00:21:00.594: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.2\", GitCommit:\"f66044f4361b9f1f96f0053dd46cb7dce5e990a8\", GitTreeState:\"clean\", BuildDate:\"2022-06-15T14:22:29Z\", GoVersion:\"go1.18.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.4\nServer Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.2\", GitCommit:\"f66044f4361b9f1f96f0053dd46cb7dce5e990a8\", GitTreeState:\"clean\", BuildDate:\"2022-06-15T14:15:38Z\", GoVersion:\"go1.18.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 00:21:00.595: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4920" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":356,"completed":91,"skipped":1867,"failed":0}
S
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:00.604: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-4221
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:21:00.746: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-f68e534f-cb96-4be1-8dcb-6a05637ddc14" in namespace "security-context-test-4221" to be "Succeeded or Failed"
Jul  3 00:21:00.751: INFO: Pod "busybox-privileged-false-f68e534f-cb96-4be1-8dcb-6a05637ddc14": Phase="Pending", Reason="", readiness=false. Elapsed: 4.498709ms
Jul  3 00:21:02.756: INFO: Pod "busybox-privileged-false-f68e534f-cb96-4be1-8dcb-6a05637ddc14": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009560239s
Jul  3 00:21:04.762: INFO: Pod "busybox-privileged-false-f68e534f-cb96-4be1-8dcb-6a05637ddc14": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015368089s
Jul  3 00:21:04.762: INFO: Pod "busybox-privileged-false-f68e534f-cb96-4be1-8dcb-6a05637ddc14" satisfied condition "Succeeded or Failed"
Jul  3 00:21:04.771: INFO: Got logs for pod "busybox-privileged-false-f68e534f-cb96-4be1-8dcb-6a05637ddc14": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jul  3 00:21:04.771: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-4221" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":92,"skipped":1868,"failed":0}
SSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:04.781: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4784
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Jul  3 00:21:04.913: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 create -f -'
Jul  3 00:21:05.066: INFO: stderr: ""
Jul  3 00:21:05.066: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jul  3 00:21:05.066: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul  3 00:21:05.122: INFO: stderr: ""
Jul  3 00:21:05.122: INFO: stdout: "update-demo-nautilus-2r4td update-demo-nautilus-fvpfk "
Jul  3 00:21:05.122: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods update-demo-nautilus-2r4td -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul  3 00:21:05.174: INFO: stderr: ""
Jul  3 00:21:05.174: INFO: stdout: ""
Jul  3 00:21:05.174: INFO: update-demo-nautilus-2r4td is created but not running
Jul  3 00:21:10.174: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul  3 00:21:10.237: INFO: stderr: ""
Jul  3 00:21:10.237: INFO: stdout: "update-demo-nautilus-2r4td update-demo-nautilus-fvpfk "
Jul  3 00:21:10.237: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods update-demo-nautilus-2r4td -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul  3 00:21:10.295: INFO: stderr: ""
Jul  3 00:21:10.295: INFO: stdout: "true"
Jul  3 00:21:10.295: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods update-demo-nautilus-2r4td -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul  3 00:21:10.361: INFO: stderr: ""
Jul  3 00:21:10.361: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul  3 00:21:10.361: INFO: validating pod update-demo-nautilus-2r4td
Jul  3 00:21:10.421: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul  3 00:21:10.421: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul  3 00:21:10.421: INFO: update-demo-nautilus-2r4td is verified up and running
Jul  3 00:21:10.421: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods update-demo-nautilus-fvpfk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul  3 00:21:10.476: INFO: stderr: ""
Jul  3 00:21:10.476: INFO: stdout: "true"
Jul  3 00:21:10.476: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods update-demo-nautilus-fvpfk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul  3 00:21:10.534: INFO: stderr: ""
Jul  3 00:21:10.534: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul  3 00:21:10.534: INFO: validating pod update-demo-nautilus-fvpfk
Jul  3 00:21:10.599: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul  3 00:21:10.599: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul  3 00:21:10.599: INFO: update-demo-nautilus-fvpfk is verified up and running
STEP: scaling down the replication controller
Jul  3 00:21:10.600: INFO: scanned /root for discovery docs: <nil>
Jul  3 00:21:10.600: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Jul  3 00:21:11.672: INFO: stderr: ""
Jul  3 00:21:11.672: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jul  3 00:21:11.672: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul  3 00:21:11.735: INFO: stderr: ""
Jul  3 00:21:11.735: INFO: stdout: "update-demo-nautilus-2r4td update-demo-nautilus-fvpfk "
STEP: Replicas for name=update-demo: expected=1 actual=2
Jul  3 00:21:16.737: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul  3 00:21:16.804: INFO: stderr: ""
Jul  3 00:21:16.804: INFO: stdout: "update-demo-nautilus-fvpfk "
Jul  3 00:21:16.804: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods update-demo-nautilus-fvpfk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul  3 00:21:16.867: INFO: stderr: ""
Jul  3 00:21:16.867: INFO: stdout: "true"
Jul  3 00:21:16.867: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods update-demo-nautilus-fvpfk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul  3 00:21:16.931: INFO: stderr: ""
Jul  3 00:21:16.931: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul  3 00:21:16.931: INFO: validating pod update-demo-nautilus-fvpfk
Jul  3 00:21:16.939: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul  3 00:21:16.939: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul  3 00:21:16.939: INFO: update-demo-nautilus-fvpfk is verified up and running
STEP: scaling up the replication controller
Jul  3 00:21:16.940: INFO: scanned /root for discovery docs: <nil>
Jul  3 00:21:16.940: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Jul  3 00:21:18.014: INFO: stderr: ""
Jul  3 00:21:18.014: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jul  3 00:21:18.014: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul  3 00:21:18.094: INFO: stderr: ""
Jul  3 00:21:18.094: INFO: stdout: "update-demo-nautilus-28llc update-demo-nautilus-fvpfk "
Jul  3 00:21:18.095: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods update-demo-nautilus-28llc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul  3 00:21:18.163: INFO: stderr: ""
Jul  3 00:21:18.163: INFO: stdout: ""
Jul  3 00:21:18.163: INFO: update-demo-nautilus-28llc is created but not running
Jul  3 00:21:23.163: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul  3 00:21:23.230: INFO: stderr: ""
Jul  3 00:21:23.230: INFO: stdout: "update-demo-nautilus-28llc update-demo-nautilus-fvpfk "
Jul  3 00:21:23.230: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods update-demo-nautilus-28llc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul  3 00:21:23.283: INFO: stderr: ""
Jul  3 00:21:23.283: INFO: stdout: "true"
Jul  3 00:21:23.283: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods update-demo-nautilus-28llc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul  3 00:21:23.341: INFO: stderr: ""
Jul  3 00:21:23.341: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul  3 00:21:23.341: INFO: validating pod update-demo-nautilus-28llc
Jul  3 00:21:23.402: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul  3 00:21:23.402: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul  3 00:21:23.402: INFO: update-demo-nautilus-28llc is verified up and running
Jul  3 00:21:23.402: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods update-demo-nautilus-fvpfk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul  3 00:21:23.461: INFO: stderr: ""
Jul  3 00:21:23.461: INFO: stdout: "true"
Jul  3 00:21:23.461: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods update-demo-nautilus-fvpfk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul  3 00:21:23.535: INFO: stderr: ""
Jul  3 00:21:23.535: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul  3 00:21:23.535: INFO: validating pod update-demo-nautilus-fvpfk
Jul  3 00:21:23.551: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul  3 00:21:23.551: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul  3 00:21:23.551: INFO: update-demo-nautilus-fvpfk is verified up and running
STEP: using delete to clean up resources
Jul  3 00:21:23.551: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 delete --grace-period=0 --force -f -'
Jul  3 00:21:23.609: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul  3 00:21:23.610: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jul  3 00:21:23.610: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get rc,svc -l name=update-demo --no-headers'
Jul  3 00:21:23.668: INFO: stderr: "No resources found in kubectl-4784 namespace.\n"
Jul  3 00:21:23.668: INFO: stdout: ""
Jul  3 00:21:23.668: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4784 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jul  3 00:21:23.733: INFO: stderr: ""
Jul  3 00:21:23.733: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 00:21:23.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4784" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":356,"completed":93,"skipped":1874,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:23.746: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3048
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-f4e4fff6-18c4-4aae-b9d0-7466d0d4d29e
STEP: Creating the pod
Jul  3 00:21:23.895: INFO: The status of Pod pod-configmaps-2067f4ca-8f92-49dc-8b88-3e4b7fd39b36 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:21:25.901: INFO: The status of Pod pod-configmaps-2067f4ca-8f92-49dc-8b88-3e4b7fd39b36 is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-f4e4fff6-18c4-4aae-b9d0-7466d0d4d29e
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 00:21:27.970: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3048" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":94,"skipped":1883,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:27.981: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3511
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-36ce54dc-accd-4384-83f4-a091064c5934
STEP: Creating a pod to test consume secrets
Jul  3 00:21:28.128: INFO: Waiting up to 5m0s for pod "pod-secrets-1bc7d7f4-a6a4-4b69-8918-256fd07dc43e" in namespace "secrets-3511" to be "Succeeded or Failed"
Jul  3 00:21:28.135: INFO: Pod "pod-secrets-1bc7d7f4-a6a4-4b69-8918-256fd07dc43e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.684695ms
Jul  3 00:21:30.140: INFO: Pod "pod-secrets-1bc7d7f4-a6a4-4b69-8918-256fd07dc43e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011843387s
Jul  3 00:21:32.145: INFO: Pod "pod-secrets-1bc7d7f4-a6a4-4b69-8918-256fd07dc43e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016711637s
STEP: Saw pod success
Jul  3 00:21:32.145: INFO: Pod "pod-secrets-1bc7d7f4-a6a4-4b69-8918-256fd07dc43e" satisfied condition "Succeeded or Failed"
Jul  3 00:21:32.148: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-secrets-1bc7d7f4-a6a4-4b69-8918-256fd07dc43e container secret-volume-test: <nil>
STEP: delete the pod
Jul  3 00:21:32.166: INFO: Waiting for pod pod-secrets-1bc7d7f4-a6a4-4b69-8918-256fd07dc43e to disappear
Jul  3 00:21:32.169: INFO: Pod pod-secrets-1bc7d7f4-a6a4-4b69-8918-256fd07dc43e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul  3 00:21:32.169: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3511" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":95,"skipped":1896,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:32.178: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-1056
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jul  3 00:21:35.335: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jul  3 00:21:35.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-1056" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":356,"completed":96,"skipped":1904,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:35.354: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-4447
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jul  3 00:21:35.495: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jul  3 00:21:35.501: INFO: starting watch
STEP: patching
STEP: updating
Jul  3 00:21:35.517: INFO: waiting for watch events with expected annotations
Jul  3 00:21:35.517: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jul  3 00:21:35.551: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-4447" for this suite.
•{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":356,"completed":97,"skipped":1923,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:35.558: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9444
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jul  3 00:21:35.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9444" for this suite.
•{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":356,"completed":98,"skipped":1934,"failed":0}

------------------------------
[sig-apps] Job 
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:35.723: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-9460
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Indexed job
STEP: Ensuring job reaches completions
STEP: Ensuring pods with index for job exist
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jul  3 00:21:43.866: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-9460" for this suite.
•{"msg":"PASSED [sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]","total":356,"completed":99,"skipped":1934,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:43.875: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6895
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-dc479878-baf7-42bc-8107-60c35add26a2
STEP: Creating a pod to test consume configMaps
Jul  3 00:21:44.020: INFO: Waiting up to 5m0s for pod "pod-configmaps-a70ac012-35da-4be6-834b-e1a23694f753" in namespace "configmap-6895" to be "Succeeded or Failed"
Jul  3 00:21:44.023: INFO: Pod "pod-configmaps-a70ac012-35da-4be6-834b-e1a23694f753": Phase="Pending", Reason="", readiness=false. Elapsed: 2.896387ms
Jul  3 00:21:46.028: INFO: Pod "pod-configmaps-a70ac012-35da-4be6-834b-e1a23694f753": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008706711s
Jul  3 00:21:48.034: INFO: Pod "pod-configmaps-a70ac012-35da-4be6-834b-e1a23694f753": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013782888s
STEP: Saw pod success
Jul  3 00:21:48.034: INFO: Pod "pod-configmaps-a70ac012-35da-4be6-834b-e1a23694f753" satisfied condition "Succeeded or Failed"
Jul  3 00:21:48.037: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-configmaps-a70ac012-35da-4be6-834b-e1a23694f753 container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:21:48.071: INFO: Waiting for pod pod-configmaps-a70ac012-35da-4be6-834b-e1a23694f753 to disappear
Jul  3 00:21:48.074: INFO: Pod pod-configmaps-a70ac012-35da-4be6-834b-e1a23694f753 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 00:21:48.074: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6895" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":100,"skipped":1961,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:48.083: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8105
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Jul  3 00:21:48.214: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-8105 create -f -'
Jul  3 00:21:48.390: INFO: stderr: ""
Jul  3 00:21:48.390: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jul  3 00:21:48.390: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-8105 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul  3 00:21:48.449: INFO: stderr: ""
Jul  3 00:21:48.449: INFO: stdout: "update-demo-nautilus-6zgps update-demo-nautilus-nszfl "
Jul  3 00:21:48.449: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-8105 get pods update-demo-nautilus-6zgps -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul  3 00:21:48.506: INFO: stderr: ""
Jul  3 00:21:48.506: INFO: stdout: ""
Jul  3 00:21:48.506: INFO: update-demo-nautilus-6zgps is created but not running
Jul  3 00:21:53.507: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-8105 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul  3 00:21:53.575: INFO: stderr: ""
Jul  3 00:21:53.575: INFO: stdout: "update-demo-nautilus-6zgps update-demo-nautilus-nszfl "
Jul  3 00:21:53.575: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-8105 get pods update-demo-nautilus-6zgps -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul  3 00:21:53.633: INFO: stderr: ""
Jul  3 00:21:53.633: INFO: stdout: "true"
Jul  3 00:21:53.633: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-8105 get pods update-demo-nautilus-6zgps -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul  3 00:21:53.686: INFO: stderr: ""
Jul  3 00:21:53.686: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul  3 00:21:53.686: INFO: validating pod update-demo-nautilus-6zgps
Jul  3 00:21:53.743: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul  3 00:21:53.743: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul  3 00:21:53.743: INFO: update-demo-nautilus-6zgps is verified up and running
Jul  3 00:21:53.743: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-8105 get pods update-demo-nautilus-nszfl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul  3 00:21:53.799: INFO: stderr: ""
Jul  3 00:21:53.799: INFO: stdout: "true"
Jul  3 00:21:53.799: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-8105 get pods update-demo-nautilus-nszfl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul  3 00:21:53.851: INFO: stderr: ""
Jul  3 00:21:53.851: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul  3 00:21:53.851: INFO: validating pod update-demo-nautilus-nszfl
Jul  3 00:21:53.868: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul  3 00:21:53.868: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul  3 00:21:53.868: INFO: update-demo-nautilus-nszfl is verified up and running
STEP: using delete to clean up resources
Jul  3 00:21:53.868: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-8105 delete --grace-period=0 --force -f -'
Jul  3 00:21:53.925: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul  3 00:21:53.925: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jul  3 00:21:53.925: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-8105 get rc,svc -l name=update-demo --no-headers'
Jul  3 00:21:53.984: INFO: stderr: "No resources found in kubectl-8105 namespace.\n"
Jul  3 00:21:53.984: INFO: stdout: ""
Jul  3 00:21:53.984: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-8105 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jul  3 00:21:54.047: INFO: stderr: ""
Jul  3 00:21:54.047: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 00:21:54.047: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8105" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":356,"completed":101,"skipped":1979,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:54.073: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1210
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-438aa088-d0d7-4dff-9b25-2dff80d137c1
STEP: Creating a pod to test consume secrets
Jul  3 00:21:54.214: INFO: Waiting up to 5m0s for pod "pod-secrets-16fbdb6b-39a7-4340-94c7-43b5888cad2d" in namespace "secrets-1210" to be "Succeeded or Failed"
Jul  3 00:21:54.218: INFO: Pod "pod-secrets-16fbdb6b-39a7-4340-94c7-43b5888cad2d": Phase="Pending", Reason="", readiness=false. Elapsed: 3.350623ms
Jul  3 00:21:56.224: INFO: Pod "pod-secrets-16fbdb6b-39a7-4340-94c7-43b5888cad2d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009577444s
Jul  3 00:21:58.229: INFO: Pod "pod-secrets-16fbdb6b-39a7-4340-94c7-43b5888cad2d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014714051s
STEP: Saw pod success
Jul  3 00:21:58.229: INFO: Pod "pod-secrets-16fbdb6b-39a7-4340-94c7-43b5888cad2d" satisfied condition "Succeeded or Failed"
Jul  3 00:21:58.232: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-secrets-16fbdb6b-39a7-4340-94c7-43b5888cad2d container secret-volume-test: <nil>
STEP: delete the pod
Jul  3 00:21:58.247: INFO: Waiting for pod pod-secrets-16fbdb6b-39a7-4340-94c7-43b5888cad2d to disappear
Jul  3 00:21:58.250: INFO: Pod pod-secrets-16fbdb6b-39a7-4340-94c7-43b5888cad2d no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul  3 00:21:58.250: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1210" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":102,"skipped":1986,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:21:58.258: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-3490
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
Jul  3 00:22:08.762: INFO: 65 pods remaining
Jul  3 00:22:08.762: INFO: 65 pods has nil DeletionTimestamp
Jul  3 00:22:08.762: INFO: 
STEP: Gathering metrics
W0703 00:22:13.770709    4513 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jul  3 00:22:13.770: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Jul  3 00:22:13.770: INFO: Deleting pod "simpletest-rc-to-be-deleted-26nwx" in namespace "gc-3490"
Jul  3 00:22:13.777: INFO: Deleting pod "simpletest-rc-to-be-deleted-27ls7" in namespace "gc-3490"
Jul  3 00:22:13.783: INFO: Deleting pod "simpletest-rc-to-be-deleted-2bqgj" in namespace "gc-3490"
Jul  3 00:22:13.790: INFO: Deleting pod "simpletest-rc-to-be-deleted-2jr9j" in namespace "gc-3490"
Jul  3 00:22:13.796: INFO: Deleting pod "simpletest-rc-to-be-deleted-49dtb" in namespace "gc-3490"
Jul  3 00:22:13.803: INFO: Deleting pod "simpletest-rc-to-be-deleted-4dmnj" in namespace "gc-3490"
Jul  3 00:22:13.809: INFO: Deleting pod "simpletest-rc-to-be-deleted-4jnnb" in namespace "gc-3490"
Jul  3 00:22:13.815: INFO: Deleting pod "simpletest-rc-to-be-deleted-4q9tl" in namespace "gc-3490"
Jul  3 00:22:13.820: INFO: Deleting pod "simpletest-rc-to-be-deleted-4qkvh" in namespace "gc-3490"
Jul  3 00:22:13.827: INFO: Deleting pod "simpletest-rc-to-be-deleted-5479g" in namespace "gc-3490"
Jul  3 00:22:13.833: INFO: Deleting pod "simpletest-rc-to-be-deleted-5ltdm" in namespace "gc-3490"
Jul  3 00:22:13.841: INFO: Deleting pod "simpletest-rc-to-be-deleted-6m65s" in namespace "gc-3490"
Jul  3 00:22:13.850: INFO: Deleting pod "simpletest-rc-to-be-deleted-76qhf" in namespace "gc-3490"
Jul  3 00:22:13.857: INFO: Deleting pod "simpletest-rc-to-be-deleted-7pmg2" in namespace "gc-3490"
Jul  3 00:22:13.864: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ptxf" in namespace "gc-3490"
Jul  3 00:22:13.873: INFO: Deleting pod "simpletest-rc-to-be-deleted-8f9xw" in namespace "gc-3490"
Jul  3 00:22:13.881: INFO: Deleting pod "simpletest-rc-to-be-deleted-8mcn2" in namespace "gc-3490"
Jul  3 00:22:13.887: INFO: Deleting pod "simpletest-rc-to-be-deleted-8p4lf" in namespace "gc-3490"
Jul  3 00:22:13.894: INFO: Deleting pod "simpletest-rc-to-be-deleted-8sbvw" in namespace "gc-3490"
Jul  3 00:22:13.901: INFO: Deleting pod "simpletest-rc-to-be-deleted-94zdx" in namespace "gc-3490"
Jul  3 00:22:13.907: INFO: Deleting pod "simpletest-rc-to-be-deleted-96fl9" in namespace "gc-3490"
Jul  3 00:22:13.912: INFO: Deleting pod "simpletest-rc-to-be-deleted-9lhxg" in namespace "gc-3490"
Jul  3 00:22:13.919: INFO: Deleting pod "simpletest-rc-to-be-deleted-b9snl" in namespace "gc-3490"
Jul  3 00:22:13.928: INFO: Deleting pod "simpletest-rc-to-be-deleted-bbrrj" in namespace "gc-3490"
Jul  3 00:22:13.934: INFO: Deleting pod "simpletest-rc-to-be-deleted-bcmhm" in namespace "gc-3490"
Jul  3 00:22:13.941: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjrhq" in namespace "gc-3490"
Jul  3 00:22:13.946: INFO: Deleting pod "simpletest-rc-to-be-deleted-cc77x" in namespace "gc-3490"
Jul  3 00:22:13.952: INFO: Deleting pod "simpletest-rc-to-be-deleted-ccdlq" in namespace "gc-3490"
Jul  3 00:22:13.958: INFO: Deleting pod "simpletest-rc-to-be-deleted-cfxr9" in namespace "gc-3490"
Jul  3 00:22:13.963: INFO: Deleting pod "simpletest-rc-to-be-deleted-ctx7t" in namespace "gc-3490"
Jul  3 00:22:13.970: INFO: Deleting pod "simpletest-rc-to-be-deleted-d2kzr" in namespace "gc-3490"
Jul  3 00:22:13.977: INFO: Deleting pod "simpletest-rc-to-be-deleted-dw8qn" in namespace "gc-3490"
Jul  3 00:22:13.984: INFO: Deleting pod "simpletest-rc-to-be-deleted-f4zc5" in namespace "gc-3490"
Jul  3 00:22:13.990: INFO: Deleting pod "simpletest-rc-to-be-deleted-f6bfc" in namespace "gc-3490"
Jul  3 00:22:13.996: INFO: Deleting pod "simpletest-rc-to-be-deleted-f8dqs" in namespace "gc-3490"
Jul  3 00:22:14.003: INFO: Deleting pod "simpletest-rc-to-be-deleted-f8kc9" in namespace "gc-3490"
Jul  3 00:22:14.010: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4r24" in namespace "gc-3490"
Jul  3 00:22:14.019: INFO: Deleting pod "simpletest-rc-to-be-deleted-grgb2" in namespace "gc-3490"
Jul  3 00:22:14.026: INFO: Deleting pod "simpletest-rc-to-be-deleted-gt29z" in namespace "gc-3490"
Jul  3 00:22:14.033: INFO: Deleting pod "simpletest-rc-to-be-deleted-gvn5v" in namespace "gc-3490"
Jul  3 00:22:14.041: INFO: Deleting pod "simpletest-rc-to-be-deleted-h9x6c" in namespace "gc-3490"
Jul  3 00:22:14.066: INFO: Deleting pod "simpletest-rc-to-be-deleted-hb7rr" in namespace "gc-3490"
Jul  3 00:22:14.073: INFO: Deleting pod "simpletest-rc-to-be-deleted-hr5jr" in namespace "gc-3490"
Jul  3 00:22:14.080: INFO: Deleting pod "simpletest-rc-to-be-deleted-j46b2" in namespace "gc-3490"
Jul  3 00:22:14.086: INFO: Deleting pod "simpletest-rc-to-be-deleted-jct77" in namespace "gc-3490"
Jul  3 00:22:14.092: INFO: Deleting pod "simpletest-rc-to-be-deleted-jstkw" in namespace "gc-3490"
Jul  3 00:22:14.099: INFO: Deleting pod "simpletest-rc-to-be-deleted-k7kh8" in namespace "gc-3490"
Jul  3 00:22:14.106: INFO: Deleting pod "simpletest-rc-to-be-deleted-k9gqx" in namespace "gc-3490"
Jul  3 00:22:14.111: INFO: Deleting pod "simpletest-rc-to-be-deleted-kcdg2" in namespace "gc-3490"
Jul  3 00:22:14.117: INFO: Deleting pod "simpletest-rc-to-be-deleted-kr977" in namespace "gc-3490"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul  3 00:22:14.123: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-3490" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":356,"completed":103,"skipped":2011,"failed":0}

------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:22:14.131: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6557
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:22:14.727: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jul  3 00:22:16.739: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.July, 3, 0, 22, 14, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 22, 14, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 0, 22, 14, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 0, 22, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:22:19.753: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:22:19.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6557" for this suite.
STEP: Destroying namespace "webhook-6557-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":356,"completed":104,"skipped":2011,"failed":0}
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:22:19.956: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-4640
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jul  3 00:22:20.100: INFO: Waiting up to 1m0s for all nodes to be ready
Jul  3 00:23:20.143: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:23:20.147: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-6937
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:496
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
Jul  3 00:23:22.309: INFO: found a healthy node: shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:23:30.379: INFO: pods created so far: [1 1 1]
Jul  3 00:23:30.379: INFO: length of pods created so far: 3
Jul  3 00:23:32.394: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:188
Jul  3 00:23:39.395: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-6937" for this suite.
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:470
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:23:39.438: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-4640" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80
•{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":356,"completed":105,"skipped":2018,"failed":0}

------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:23:39.476: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-3964
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:23:39.606: INFO: Creating deployment "webserver-deployment"
Jul  3 00:23:39.611: INFO: Waiting for observed generation 1
Jul  3 00:23:41.623: INFO: Waiting for all required pods to come up
Jul  3 00:23:41.629: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
Jul  3 00:23:43.638: INFO: Waiting for deployment "webserver-deployment" to complete
Jul  3 00:23:43.645: INFO: Updating deployment "webserver-deployment" with a non-existent image
Jul  3 00:23:43.654: INFO: Updating deployment webserver-deployment
Jul  3 00:23:43.654: INFO: Waiting for observed generation 2
Jul  3 00:23:45.661: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Jul  3 00:23:45.664: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Jul  3 00:23:45.667: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jul  3 00:23:45.676: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Jul  3 00:23:45.676: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Jul  3 00:23:45.680: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jul  3 00:23:45.686: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Jul  3 00:23:45.686: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Jul  3 00:23:45.694: INFO: Updating deployment webserver-deployment
Jul  3 00:23:45.694: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Jul  3 00:23:45.700: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Jul  3 00:23:45.703: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul  3 00:23:45.713: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-3964  62cd956c-fd02-477b-9663-35857bdea885 17685 3 2022-07-03 00:23:39 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-07-03 00:23:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0034746c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:25,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-57ccb67bb8" is progressing.,LastUpdateTime:2022-07-03 00:23:43 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-07-03 00:23:45 +0000 UTC,LastTransitionTime:2022-07-03 00:23:45 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Jul  3 00:23:45.717: INFO: New ReplicaSet "webserver-deployment-57ccb67bb8" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-57ccb67bb8  deployment-3964  4392a974-b429-4d85-a9db-e2eaa4f14825 17681 3 2022-07-03 00:23:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 62cd956c-fd02-477b-9663-35857bdea885 0xc00454bc57 0xc00454bc58}] []  [{kube-controller-manager Update apps/v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"62cd956c-fd02-477b-9663-35857bdea885\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 57ccb67bb8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00454bd08 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jul  3 00:23:45.717: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Jul  3 00:23:45.717: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-55df494869  deployment-3964  4902ac4f-8830-453c-8d1b-aa61901db3ce 17680 3 2022-07-03 00:23:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 62cd956c-fd02-477b-9663-35857bdea885 0xc00454bb67 0xc00454bb68}] []  [{kube-controller-manager Update apps/v1 2022-07-03 00:23:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"62cd956c-fd02-477b-9663-35857bdea885\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:23:40 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00454bbf8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Jul  3 00:23:45.727: INFO: Pod "webserver-deployment-55df494869-2lhxh" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-2lhxh webserver-deployment-55df494869- deployment-3964  8b911f2e-17b2-4d0c-a8d9-e6374d51869f 17586 0 2022-07-03 00:23:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[cni.projectcalico.org/containerID:fba3e778891c48e573d421553d0b6d70805a8de755cfcc6d0119a24fdd8e3fbd cni.projectcalico.org/podIP:100.64.1.213/32 cni.projectcalico.org/podIPs:100.64.1.213/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 4902ac4f-8830-453c-8d1b-aa61901db3ce 0xc0045b48b7 0xc0045b48b8}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4902ac4f-8830-453c-8d1b-aa61901db3ce\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 00:23:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 00:23:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.1.213\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-l5qfj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-l5qfj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:100.64.1.213,StartTime:2022-07-03 00:23:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 00:23:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://0d918eb6db68af3c0c65c9c2214fc5a1ad46360ae27a6ae4835cd01460f2ad99,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.1.213,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.727: INFO: Pod "webserver-deployment-55df494869-59sdw" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-59sdw webserver-deployment-55df494869- deployment-3964  b2ad9115-21ef-4925-8bf2-39603c52adf8 17563 0 2022-07-03 00:23:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[cni.projectcalico.org/containerID:efae73dc1ce9ad561f5e5daba547022c6724e902bf4daa758785ef91b182a3b7 cni.projectcalico.org/podIP:100.64.1.210/32 cni.projectcalico.org/podIPs:100.64.1.210/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 4902ac4f-8830-453c-8d1b-aa61901db3ce 0xc0045b4ad7 0xc0045b4ad8}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4902ac4f-8830-453c-8d1b-aa61901db3ce\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 00:23:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 00:23:40 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.1.210\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h5vnk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h5vnk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:100.64.1.210,StartTime:2022-07-03 00:23:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 00:23:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://34641139470b1a796ddd414976029e0c55bb9066b45bce3ed26e5c803f530509,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.1.210,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.727: INFO: Pod "webserver-deployment-55df494869-8586m" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-8586m webserver-deployment-55df494869- deployment-3964  bc6ac632-04b3-4b06-862a-4f0f33af1aab 17690 0 2022-07-03 00:23:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 4902ac4f-8830-453c-8d1b-aa61901db3ce 0xc0045b4cd7 0xc0045b4cd8}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4902ac4f-8830-453c-8d1b-aa61901db3ce\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x5dq6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x5dq6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:45 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.727: INFO: Pod "webserver-deployment-55df494869-9l99w" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-9l99w webserver-deployment-55df494869- deployment-3964  c52adb85-6ff8-4742-85eb-6b25e3d41f0a 17570 0 2022-07-03 00:23:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[cni.projectcalico.org/containerID:03b5067881fc9e0100958180a35b0c937103aaa37f0386c46d1d4eaae3f890fa cni.projectcalico.org/podIP:100.64.0.119/32 cni.projectcalico.org/podIPs:100.64.0.119/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 4902ac4f-8830-453c-8d1b-aa61901db3ce 0xc0045b4e50 0xc0045b4e51}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4902ac4f-8830-453c-8d1b-aa61901db3ce\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 00:23:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 00:23:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.0.119\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2vpb8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2vpb8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.84,PodIP:100.64.0.119,StartTime:2022-07-03 00:23:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 00:23:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://7354897bfe2f665d8886ad9843bc4e1b465fb66e630fcbebcdb0243a18ce6fbd,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.0.119,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.727: INFO: Pod "webserver-deployment-55df494869-fl2cm" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-fl2cm webserver-deployment-55df494869- deployment-3964  f1ad9eb1-03cb-40fd-9f43-39f4f35372c0 17691 0 2022-07-03 00:23:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 4902ac4f-8830-453c-8d1b-aa61901db3ce 0xc0045b5047 0xc0045b5048}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4902ac4f-8830-453c-8d1b-aa61901db3ce\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-78b8z,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-78b8z,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:45 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.727: INFO: Pod "webserver-deployment-55df494869-l6scj" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-l6scj webserver-deployment-55df494869- deployment-3964  7c5e9785-344e-49a1-b270-7cf1604839f3 17592 0 2022-07-03 00:23:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[cni.projectcalico.org/containerID:76c522727b569e0917a467b88edb006397ae56dd6ad8c3bd1f36656954ac3e3f cni.projectcalico.org/podIP:100.64.1.212/32 cni.projectcalico.org/podIPs:100.64.1.212/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 4902ac4f-8830-453c-8d1b-aa61901db3ce 0xc0045b51c0 0xc0045b51c1}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4902ac4f-8830-453c-8d1b-aa61901db3ce\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 00:23:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 00:23:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.1.212\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cc72q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cc72q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:100.64.1.212,StartTime:2022-07-03 00:23:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 00:23:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://f90d48ef27ca6dc6191165236d4b6f0b6db839c0c264f5e9029e17275980d311,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.1.212,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.727: INFO: Pod "webserver-deployment-55df494869-lxnrg" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-lxnrg webserver-deployment-55df494869- deployment-3964  c668f84b-0880-43ef-9488-b924984b9432 17567 0 2022-07-03 00:23:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[cni.projectcalico.org/containerID:30db99ac274b13b468930bc608a96b071eda12057ad4fa096615abeeb4e379de cni.projectcalico.org/podIP:100.64.0.120/32 cni.projectcalico.org/podIPs:100.64.0.120/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 4902ac4f-8830-453c-8d1b-aa61901db3ce 0xc0045b53d7 0xc0045b53d8}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4902ac4f-8830-453c-8d1b-aa61901db3ce\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 00:23:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 00:23:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.0.120\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-krcfz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-krcfz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.84,PodIP:100.64.0.120,StartTime:2022-07-03 00:23:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 00:23:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://7b85a28d59f882933f11746866e9368476dd82e2fae6d76b49a7a06c68f5f265,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.0.120,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.728: INFO: Pod "webserver-deployment-55df494869-pzppt" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-pzppt webserver-deployment-55df494869- deployment-3964  bd4a5a49-5bee-4b4d-8ee4-a876f1c05902 17686 0 2022-07-03 00:23:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 4902ac4f-8830-453c-8d1b-aa61901db3ce 0xc0045b55d7 0xc0045b55d8}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4902ac4f-8830-453c-8d1b-aa61901db3ce\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cphbh,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cphbh,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:45 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.728: INFO: Pod "webserver-deployment-55df494869-qrn8b" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-qrn8b webserver-deployment-55df494869- deployment-3964  42905c4d-bf70-4d9a-b630-44285f15e5b6 17579 0 2022-07-03 00:23:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[cni.projectcalico.org/containerID:b02f838d089c1b15e3d996383484e2838fe19fad7cad505b18a38096d4f68b7a cni.projectcalico.org/podIP:100.64.0.121/32 cni.projectcalico.org/podIPs:100.64.0.121/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 4902ac4f-8830-453c-8d1b-aa61901db3ce 0xc0045b5750 0xc0045b5751}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4902ac4f-8830-453c-8d1b-aa61901db3ce\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 00:23:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 00:23:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.0.121\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pl6qd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pl6qd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.84,PodIP:100.64.0.121,StartTime:2022-07-03 00:23:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 00:23:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://fd62cfc2b4e1419a95951616bc752f0d4ceb9d29a47b79c3f30b8a493dbd0982,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.0.121,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.728: INFO: Pod "webserver-deployment-55df494869-vmhx6" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-vmhx6 webserver-deployment-55df494869- deployment-3964  fd274d50-f405-4b94-b29d-5203cd16cf43 17583 0 2022-07-03 00:23:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[cni.projectcalico.org/containerID:2d1ea950ef7a130d7f2b44467540b710547f38d8a2a1ed9a32ca722437fcb701 cni.projectcalico.org/podIP:100.64.1.211/32 cni.projectcalico.org/podIPs:100.64.1.211/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 4902ac4f-8830-453c-8d1b-aa61901db3ce 0xc0045b5967 0xc0045b5968}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4902ac4f-8830-453c-8d1b-aa61901db3ce\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 00:23:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 00:23:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.1.211\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bh7z6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bh7z6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:100.64.1.211,StartTime:2022-07-03 00:23:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 00:23:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://30534feb938c3c3bb1ed900eef9108ce7fa8409b96d34b44f3be6b36d8489ff7,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.1.211,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.728: INFO: Pod "webserver-deployment-55df494869-zw6qw" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-zw6qw webserver-deployment-55df494869- deployment-3964  7dc59de9-3d9c-4948-97d4-99418b119a49 17576 0 2022-07-03 00:23:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[cni.projectcalico.org/containerID:68a26226839d41b159227875305905285cbaf92d75d6c5a5ffca73fa72a532bf cni.projectcalico.org/podIP:100.64.0.117/32 cni.projectcalico.org/podIPs:100.64.0.117/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 4902ac4f-8830-453c-8d1b-aa61901db3ce 0xc0045b5b97 0xc0045b5b98}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4902ac4f-8830-453c-8d1b-aa61901db3ce\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 00:23:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 00:23:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.0.117\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-888q6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-888q6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.84,PodIP:100.64.0.117,StartTime:2022-07-03 00:23:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 00:23:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://490400b4423d039f80da90b2fcba4644f155a974c0f47b920345816a38d4fc3e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.0.117,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.728: INFO: Pod "webserver-deployment-57ccb67bb8-69m9h" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-69m9h webserver-deployment-57ccb67bb8- deployment-3964  ba98211a-c340-41e1-a576-ba17d1d9c565 17650 0 2022-07-03 00:23:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[cni.projectcalico.org/containerID:a531ceed6a6408b50f985a8e4472440f2ad583eec0b0d0f9c1d6ea40104e5341 cni.projectcalico.org/podIP:100.64.0.123/32 cni.projectcalico.org/podIPs:100.64.0.123/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 4392a974-b429-4d85-a9db-e2eaa4f14825 0xc0045b5db7 0xc0045b5db8}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4392a974-b429-4d85-a9db-e2eaa4f14825\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-07-03 00:23:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vswrd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vswrd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.84,PodIP:,StartTime:2022-07-03 00:23:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.728: INFO: Pod "webserver-deployment-57ccb67bb8-7qjdc" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-7qjdc webserver-deployment-57ccb67bb8- deployment-3964  12b5a340-0051-4d91-bc51-db225b2f7418 17649 0 2022-07-03 00:23:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[cni.projectcalico.org/containerID:3d946a358acacb66591e704fe1f47780e9de9bff1ea6ce091df4acf6b8c7dd00 cni.projectcalico.org/podIP:100.64.1.217/32 cni.projectcalico.org/podIPs:100.64.1.217/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 4392a974-b429-4d85-a9db-e2eaa4f14825 0xc0045b5fd0 0xc0045b5fd1}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4392a974-b429-4d85-a9db-e2eaa4f14825\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-07-03 00:23:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4clxs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4clxs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:,StartTime:2022-07-03 00:23:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.728: INFO: Pod "webserver-deployment-57ccb67bb8-d6l82" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-d6l82 webserver-deployment-57ccb67bb8- deployment-3964  a1157508-e34d-483c-af75-caaf1ed7f471 17647 0 2022-07-03 00:23:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[cni.projectcalico.org/containerID:bb4d3e1036f16afa1a47c046381aa45cdbe0c55b6d2289ab380b50015ed63da5 cni.projectcalico.org/podIP:100.64.1.216/32 cni.projectcalico.org/podIPs:100.64.1.216/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 4392a974-b429-4d85-a9db-e2eaa4f14825 0xc0038bc1e7 0xc0038bc1e8}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4392a974-b429-4d85-a9db-e2eaa4f14825\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-07-03 00:23:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4fwmr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4fwmr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:,StartTime:2022-07-03 00:23:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.729: INFO: Pod "webserver-deployment-57ccb67bb8-d8p5h" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-d8p5h webserver-deployment-57ccb67bb8- deployment-3964  65939ccc-e85d-4357-9b38-7c70c4686db0 17687 0 2022-07-03 00:23:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 4392a974-b429-4d85-a9db-e2eaa4f14825 0xc0038bc3e7 0xc0038bc3e8}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4392a974-b429-4d85-a9db-e2eaa4f14825\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5kp7k,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5kp7k,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:45 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.729: INFO: Pod "webserver-deployment-57ccb67bb8-f24gg" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-f24gg webserver-deployment-57ccb67bb8- deployment-3964  f150276c-c2d0-42dc-be6f-8e1d4d4b7b14 17692 0 2022-07-03 00:23:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 4392a974-b429-4d85-a9db-e2eaa4f14825 0xc0038bc550 0xc0038bc551}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4392a974-b429-4d85-a9db-e2eaa4f14825\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wlzcs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wlzcs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.729: INFO: Pod "webserver-deployment-57ccb67bb8-fppsr" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-fppsr webserver-deployment-57ccb67bb8- deployment-3964  b4eff0db-5b39-4df0-b0e1-39eba413a8b5 17645 0 2022-07-03 00:23:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[cni.projectcalico.org/containerID:d4bd69897c30680ee3894f1ba12f87bd18da0c55f8b7b5e5270cc33e34bb7a89 cni.projectcalico.org/podIP:100.64.0.122/32 cni.projectcalico.org/podIPs:100.64.0.122/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 4392a974-b429-4d85-a9db-e2eaa4f14825 0xc0038bc6b7 0xc0038bc6b8}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4392a974-b429-4d85-a9db-e2eaa4f14825\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-07-03 00:23:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zxc6l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zxc6l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.84,PodIP:,StartTime:2022-07-03 00:23:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:23:45.736: INFO: Pod "webserver-deployment-57ccb67bb8-gb6j5" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-gb6j5 webserver-deployment-57ccb67bb8- deployment-3964  8c29c4b7-d9a9-4703-9c12-6957cc0ba559 17646 0 2022-07-03 00:23:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[cni.projectcalico.org/containerID:f804df9462f208edb02bd2b960ab6b84787f48902df32916f216ac3fc77b19f0 cni.projectcalico.org/podIP:100.64.1.215/32 cni.projectcalico.org/podIPs:100.64.1.215/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 4392a974-b429-4d85-a9db-e2eaa4f14825 0xc0038bc8d0 0xc0038bc8d1}] []  [{kube-controller-manager Update v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4392a974-b429-4d85-a9db-e2eaa4f14825\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-03 00:23:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status} {calico Update v1 2022-07-03 00:23:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t4h48,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t4h48,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:23:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:,StartTime:2022-07-03 00:23:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul  3 00:23:45.736: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-3964" for this suite.
•{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":356,"completed":106,"skipped":2018,"failed":0}
SSSSSS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:23:45.747: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-7082
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jul  3 00:23:48.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-7082" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":356,"completed":107,"skipped":2024,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:23:48.213: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-120
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:23:48.953: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:23:51.971: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:23:51.976: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:23:55.394: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-120" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
•{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":356,"completed":108,"skipped":2051,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:23:55.428: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3923
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-afbabd5d-b8d8-4383-a569-88bb685ce749
STEP: Creating a pod to test consume configMaps
Jul  3 00:23:55.576: INFO: Waiting up to 5m0s for pod "pod-configmaps-8aa02eb7-5e69-43d5-8ce8-449c0cffe2cf" in namespace "configmap-3923" to be "Succeeded or Failed"
Jul  3 00:23:55.579: INFO: Pod "pod-configmaps-8aa02eb7-5e69-43d5-8ce8-449c0cffe2cf": Phase="Pending", Reason="", readiness=false. Elapsed: 3.08002ms
Jul  3 00:23:57.584: INFO: Pod "pod-configmaps-8aa02eb7-5e69-43d5-8ce8-449c0cffe2cf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008016076s
Jul  3 00:23:59.588: INFO: Pod "pod-configmaps-8aa02eb7-5e69-43d5-8ce8-449c0cffe2cf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012638677s
STEP: Saw pod success
Jul  3 00:23:59.588: INFO: Pod "pod-configmaps-8aa02eb7-5e69-43d5-8ce8-449c0cffe2cf" satisfied condition "Succeeded or Failed"
Jul  3 00:23:59.592: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-configmaps-8aa02eb7-5e69-43d5-8ce8-449c0cffe2cf container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:23:59.608: INFO: Waiting for pod pod-configmaps-8aa02eb7-5e69-43d5-8ce8-449c0cffe2cf to disappear
Jul  3 00:23:59.611: INFO: Pod pod-configmaps-8aa02eb7-5e69-43d5-8ce8-449c0cffe2cf no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 00:23:59.611: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3923" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":109,"skipped":2119,"failed":0}
SSSSSS
------------------------------
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:23:59.620: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2805
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-ca415fec-6c70-4bae-acd2-e5022be16125
STEP: Creating configMap with name cm-test-opt-upd-fbf610cd-ad1a-4fe8-a7fb-7691e120296b
STEP: Creating the pod
Jul  3 00:23:59.777: INFO: The status of Pod pod-projected-configmaps-f9141fd3-ea36-42f0-9ac4-0528f8b990a9 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:24:01.782: INFO: The status of Pod pod-projected-configmaps-f9141fd3-ea36-42f0-9ac4-0528f8b990a9 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-ca415fec-6c70-4bae-acd2-e5022be16125
STEP: Updating configmap cm-test-opt-upd-fbf610cd-ad1a-4fe8-a7fb-7691e120296b
STEP: Creating configMap with name cm-test-opt-create-10c8a65e-592b-43e6-9d15-b5d9ef8a866e
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul  3 00:24:03.932: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2805" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":110,"skipped":2125,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:24:03.943: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-1161
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:24:04.072: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:24:05.096: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-1161" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":356,"completed":111,"skipped":2134,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:24:05.108: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-96
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jul  3 00:24:30.618: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-96" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":356,"completed":112,"skipped":2158,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:24:30.627: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2026
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:24:31.143: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:24:34.167: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:24:34.172: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:24:37.530: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2026" for this suite.
STEP: Destroying namespace "webhook-2026-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":356,"completed":113,"skipped":2173,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:24:37.575: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2287
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Jul  3 00:24:37.724: INFO: Waiting up to 5m0s for pod "pod-725872c5-2376-4e0d-bee9-c6a05ed01265" in namespace "emptydir-2287" to be "Succeeded or Failed"
Jul  3 00:24:37.729: INFO: Pod "pod-725872c5-2376-4e0d-bee9-c6a05ed01265": Phase="Pending", Reason="", readiness=false. Elapsed: 4.793245ms
Jul  3 00:24:39.734: INFO: Pod "pod-725872c5-2376-4e0d-bee9-c6a05ed01265": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009976475s
Jul  3 00:24:41.741: INFO: Pod "pod-725872c5-2376-4e0d-bee9-c6a05ed01265": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017252293s
STEP: Saw pod success
Jul  3 00:24:41.744: INFO: Pod "pod-725872c5-2376-4e0d-bee9-c6a05ed01265" satisfied condition "Succeeded or Failed"
Jul  3 00:24:41.749: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-725872c5-2376-4e0d-bee9-c6a05ed01265 container test-container: <nil>
STEP: delete the pod
Jul  3 00:24:41.812: INFO: Waiting for pod pod-725872c5-2376-4e0d-bee9-c6a05ed01265 to disappear
Jul  3 00:24:41.815: INFO: Pod pod-725872c5-2376-4e0d-bee9-c6a05ed01265 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 00:24:41.815: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2287" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":114,"skipped":2206,"failed":0}
S
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:24:41.826: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename tables
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in tables-1489
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:188
Jul  3 00:24:41.963: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-1489" for this suite.
•{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":356,"completed":115,"skipped":2207,"failed":0}
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:24:41.971: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-1720
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: reading a file in the container
Jul  3 00:24:44.127: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl exec --namespace=svcaccounts-1720 pod-service-account-21cceb6d-25f7-4faf-a9ae-45424e81523e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
Jul  3 00:24:44.384: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl exec --namespace=svcaccounts-1720 pod-service-account-21cceb6d-25f7-4faf-a9ae-45424e81523e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
Jul  3 00:24:44.652: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl exec --namespace=svcaccounts-1720 pod-service-account-21cceb6d-25f7-4faf-a9ae-45424e81523e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Jul  3 00:24:44.980: INFO: Got root ca configmap in namespace "svcaccounts-1720"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jul  3 00:24:44.984: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-1720" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":356,"completed":116,"skipped":2216,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:24:44.995: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-6215
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jul  3 00:24:45.149: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 00:24:45.149: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm is running 0 daemon pod, expected 1
Jul  3 00:24:46.159: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul  3 00:24:46.159: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 00:24:47.160: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul  3 00:24:47.160: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
Jul  3 00:24:47.186: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18469"},"items":null}

Jul  3 00:24:47.190: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18469"},"items":[{"metadata":{"name":"daemon-set-dggkg","generateName":"daemon-set-","namespace":"daemonsets-6215","uid":"6d5bf37f-426f-4e91-b0c6-02c00edb62ca","resourceVersion":"18469","creationTimestamp":"2022-07-03T00:24:45Z","deletionTimestamp":"2022-07-03T00:25:17Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"7a6ff4b563b2bc106849783f3bc10505b91316fba9ab69132a478b2900e09e70","cni.projectcalico.org/podIP":"100.64.0.125/32","cni.projectcalico.org/podIPs":"100.64.0.125/32","kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4b7b8fdb-5a8c-43be-969e-94f8b29cbc22","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2022-07-03T00:24:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-07-03T00:24:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4b7b8fdb-5a8c-43be-969e-94f8b29cbc22\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-07-03T00:24:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.0.125\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4v6k9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"env":[{"name":"KUBERNETES_SERVICE_HOST","value":"api.tmffe-jrp.it.internal.staging.k8s.ondemand.com"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-4v6k9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-03T00:24:45Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-03T00:24:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-03T00:24:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-03T00:24:45Z"}],"hostIP":"10.250.2.84","podIP":"100.64.0.125","podIPs":[{"ip":"100.64.0.125"}],"startTime":"2022-07-03T00:24:45Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-07-03T00:24:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://056b2fec4082b96eb6803be2d97793053a0d965690ea7817ac89b404d16f3a89","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-j56zg","generateName":"daemon-set-","namespace":"daemonsets-6215","uid":"50b1bf28-ab37-4eb2-9deb-64943759e117","resourceVersion":"18468","creationTimestamp":"2022-07-03T00:24:45Z","deletionTimestamp":"2022-07-03T00:25:17Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"7a0c9ff1c4649cff560940600925cedc07e7b646a25bbc601bf3937bf5b07ded","cni.projectcalico.org/podIP":"100.64.1.228/32","cni.projectcalico.org/podIPs":"100.64.1.228/32","kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4b7b8fdb-5a8c-43be-969e-94f8b29cbc22","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2022-07-03T00:24:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-07-03T00:24:45Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4b7b8fdb-5a8c-43be-969e-94f8b29cbc22\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-07-03T00:24:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.1.228\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-bcfn6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"env":[{"name":"KUBERNETES_SERVICE_HOST","value":"api.tmffe-jrp.it.internal.staging.k8s.ondemand.com"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-bcfn6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-03T00:24:45Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-03T00:24:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-03T00:24:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-03T00:24:45Z"}],"hostIP":"10.250.2.183","podIP":"100.64.1.228","podIPs":[{"ip":"100.64.1.228"}],"startTime":"2022-07-03T00:24:45Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-07-03T00:24:45Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://b5dabfa4a1975a35374c90e57d2afbeb0effb3716fa80ebdedb54473c7d01e8b","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:24:47.200: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-6215" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":356,"completed":117,"skipped":2228,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:24:47.209: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-8939
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
Jul  3 00:24:49.365: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jul  3 00:24:51.404: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-8939" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":356,"completed":118,"skipped":2271,"failed":0}
SS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:24:51.414: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2084
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-9c69cf53-c0a2-4e1c-9f20-b3b6fd927fd7
STEP: Creating a pod to test consume configMaps
Jul  3 00:24:51.561: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-d9a922fa-4292-429d-bc09-7b7bc6d7d0d2" in namespace "projected-2084" to be "Succeeded or Failed"
Jul  3 00:24:51.565: INFO: Pod "pod-projected-configmaps-d9a922fa-4292-429d-bc09-7b7bc6d7d0d2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.933708ms
Jul  3 00:24:53.569: INFO: Pod "pod-projected-configmaps-d9a922fa-4292-429d-bc09-7b7bc6d7d0d2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00842873s
Jul  3 00:24:55.574: INFO: Pod "pod-projected-configmaps-d9a922fa-4292-429d-bc09-7b7bc6d7d0d2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01372126s
STEP: Saw pod success
Jul  3 00:24:55.574: INFO: Pod "pod-projected-configmaps-d9a922fa-4292-429d-bc09-7b7bc6d7d0d2" satisfied condition "Succeeded or Failed"
Jul  3 00:24:55.578: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-configmaps-d9a922fa-4292-429d-bc09-7b7bc6d7d0d2 container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:24:55.595: INFO: Waiting for pod pod-projected-configmaps-d9a922fa-4292-429d-bc09-7b7bc6d7d0d2 to disappear
Jul  3 00:24:55.599: INFO: Pod pod-projected-configmaps-d9a922fa-4292-429d-bc09-7b7bc6d7d0d2 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul  3 00:24:55.599: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2084" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":119,"skipped":2273,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:24:55.609: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1543
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on node default medium
Jul  3 00:24:55.754: INFO: Waiting up to 5m0s for pod "pod-45c22b09-f694-433d-b0cb-9ed2277aed55" in namespace "emptydir-1543" to be "Succeeded or Failed"
Jul  3 00:24:55.758: INFO: Pod "pod-45c22b09-f694-433d-b0cb-9ed2277aed55": Phase="Pending", Reason="", readiness=false. Elapsed: 3.832992ms
Jul  3 00:24:57.763: INFO: Pod "pod-45c22b09-f694-433d-b0cb-9ed2277aed55": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009131007s
Jul  3 00:24:59.770: INFO: Pod "pod-45c22b09-f694-433d-b0cb-9ed2277aed55": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01572174s
STEP: Saw pod success
Jul  3 00:24:59.770: INFO: Pod "pod-45c22b09-f694-433d-b0cb-9ed2277aed55" satisfied condition "Succeeded or Failed"
Jul  3 00:24:59.775: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-45c22b09-f694-433d-b0cb-9ed2277aed55 container test-container: <nil>
STEP: delete the pod
Jul  3 00:24:59.842: INFO: Waiting for pod pod-45c22b09-f694-433d-b0cb-9ed2277aed55 to disappear
Jul  3 00:24:59.846: INFO: Pod pod-45c22b09-f694-433d-b0cb-9ed2277aed55 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 00:24:59.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1543" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":120,"skipped":2291,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:24:59.856: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename discovery
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in discovery-9207
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:25:00.371: INFO: Checking APIGroup: apiregistration.k8s.io
Jul  3 00:25:00.374: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Jul  3 00:25:00.374: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Jul  3 00:25:00.374: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Jul  3 00:25:00.374: INFO: Checking APIGroup: apps
Jul  3 00:25:00.377: INFO: PreferredVersion.GroupVersion: apps/v1
Jul  3 00:25:00.377: INFO: Versions found [{apps/v1 v1}]
Jul  3 00:25:00.377: INFO: apps/v1 matches apps/v1
Jul  3 00:25:00.377: INFO: Checking APIGroup: events.k8s.io
Jul  3 00:25:00.379: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Jul  3 00:25:00.379: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
Jul  3 00:25:00.379: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Jul  3 00:25:00.379: INFO: Checking APIGroup: authentication.k8s.io
Jul  3 00:25:00.382: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Jul  3 00:25:00.382: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Jul  3 00:25:00.382: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Jul  3 00:25:00.382: INFO: Checking APIGroup: authorization.k8s.io
Jul  3 00:25:00.384: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Jul  3 00:25:00.384: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Jul  3 00:25:00.384: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Jul  3 00:25:00.384: INFO: Checking APIGroup: autoscaling
Jul  3 00:25:00.386: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Jul  3 00:25:00.386: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
Jul  3 00:25:00.386: INFO: autoscaling/v2 matches autoscaling/v2
Jul  3 00:25:00.386: INFO: Checking APIGroup: batch
Jul  3 00:25:00.389: INFO: PreferredVersion.GroupVersion: batch/v1
Jul  3 00:25:00.389: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
Jul  3 00:25:00.389: INFO: batch/v1 matches batch/v1
Jul  3 00:25:00.389: INFO: Checking APIGroup: certificates.k8s.io
Jul  3 00:25:00.391: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Jul  3 00:25:00.391: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Jul  3 00:25:00.391: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Jul  3 00:25:00.391: INFO: Checking APIGroup: networking.k8s.io
Jul  3 00:25:00.394: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Jul  3 00:25:00.394: INFO: Versions found [{networking.k8s.io/v1 v1}]
Jul  3 00:25:00.394: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Jul  3 00:25:00.394: INFO: Checking APIGroup: policy
Jul  3 00:25:00.396: INFO: PreferredVersion.GroupVersion: policy/v1
Jul  3 00:25:00.396: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
Jul  3 00:25:00.396: INFO: policy/v1 matches policy/v1
Jul  3 00:25:00.396: INFO: Checking APIGroup: rbac.authorization.k8s.io
Jul  3 00:25:00.398: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Jul  3 00:25:00.398: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Jul  3 00:25:00.398: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Jul  3 00:25:00.398: INFO: Checking APIGroup: storage.k8s.io
Jul  3 00:25:00.401: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Jul  3 00:25:00.401: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Jul  3 00:25:00.401: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Jul  3 00:25:00.401: INFO: Checking APIGroup: admissionregistration.k8s.io
Jul  3 00:25:00.404: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Jul  3 00:25:00.404: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Jul  3 00:25:00.404: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Jul  3 00:25:00.404: INFO: Checking APIGroup: apiextensions.k8s.io
Jul  3 00:25:00.406: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Jul  3 00:25:00.406: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Jul  3 00:25:00.406: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Jul  3 00:25:00.407: INFO: Checking APIGroup: scheduling.k8s.io
Jul  3 00:25:00.409: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Jul  3 00:25:00.409: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Jul  3 00:25:00.409: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Jul  3 00:25:00.409: INFO: Checking APIGroup: coordination.k8s.io
Jul  3 00:25:00.411: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Jul  3 00:25:00.411: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Jul  3 00:25:00.411: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Jul  3 00:25:00.411: INFO: Checking APIGroup: node.k8s.io
Jul  3 00:25:00.414: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Jul  3 00:25:00.414: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1}]
Jul  3 00:25:00.414: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Jul  3 00:25:00.414: INFO: Checking APIGroup: discovery.k8s.io
Jul  3 00:25:00.417: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Jul  3 00:25:00.417: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
Jul  3 00:25:00.417: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Jul  3 00:25:00.417: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Jul  3 00:25:00.419: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
Jul  3 00:25:00.419: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
Jul  3 00:25:00.419: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
Jul  3 00:25:00.419: INFO: Checking APIGroup: autoscaling.k8s.io
Jul  3 00:25:00.421: INFO: PreferredVersion.GroupVersion: autoscaling.k8s.io/v1
Jul  3 00:25:00.421: INFO: Versions found [{autoscaling.k8s.io/v1 v1} {autoscaling.k8s.io/v1beta2 v1beta2}]
Jul  3 00:25:00.421: INFO: autoscaling.k8s.io/v1 matches autoscaling.k8s.io/v1
Jul  3 00:25:00.421: INFO: Checking APIGroup: crd.projectcalico.org
Jul  3 00:25:00.424: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
Jul  3 00:25:00.424: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
Jul  3 00:25:00.424: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
Jul  3 00:25:00.424: INFO: Checking APIGroup: cert.gardener.cloud
Jul  3 00:25:00.427: INFO: PreferredVersion.GroupVersion: cert.gardener.cloud/v1alpha1
Jul  3 00:25:00.427: INFO: Versions found [{cert.gardener.cloud/v1alpha1 v1alpha1}]
Jul  3 00:25:00.427: INFO: cert.gardener.cloud/v1alpha1 matches cert.gardener.cloud/v1alpha1
Jul  3 00:25:00.427: INFO: Checking APIGroup: dns.gardener.cloud
Jul  3 00:25:00.429: INFO: PreferredVersion.GroupVersion: dns.gardener.cloud/v1alpha1
Jul  3 00:25:00.429: INFO: Versions found [{dns.gardener.cloud/v1alpha1 v1alpha1}]
Jul  3 00:25:00.429: INFO: dns.gardener.cloud/v1alpha1 matches dns.gardener.cloud/v1alpha1
Jul  3 00:25:00.429: INFO: Checking APIGroup: snapshot.storage.k8s.io
Jul  3 00:25:00.432: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1beta1
Jul  3 00:25:00.432: INFO: Versions found [{snapshot.storage.k8s.io/v1beta1 v1beta1}]
Jul  3 00:25:00.432: INFO: snapshot.storage.k8s.io/v1beta1 matches snapshot.storage.k8s.io/v1beta1
Jul  3 00:25:00.432: INFO: Checking APIGroup: metrics.k8s.io
Jul  3 00:25:00.434: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Jul  3 00:25:00.434: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Jul  3 00:25:00.434: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:188
Jul  3 00:25:00.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-9207" for this suite.
•{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":356,"completed":121,"skipped":2301,"failed":0}
SSSSSSS
------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:25:00.447: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5117
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jul  3 00:25:00.591: INFO: The status of Pod pod-update-activedeadlineseconds-6d674b2b-4cf6-453f-ad01-9ebcd69b59be is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:25:02.597: INFO: The status of Pod pod-update-activedeadlineseconds-6d674b2b-4cf6-453f-ad01-9ebcd69b59be is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Jul  3 00:25:03.119: INFO: Successfully updated pod "pod-update-activedeadlineseconds-6d674b2b-4cf6-453f-ad01-9ebcd69b59be"
Jul  3 00:25:03.119: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-6d674b2b-4cf6-453f-ad01-9ebcd69b59be" in namespace "pods-5117" to be "terminated due to deadline exceeded"
Jul  3 00:25:03.123: INFO: Pod "pod-update-activedeadlineseconds-6d674b2b-4cf6-453f-ad01-9ebcd69b59be": Phase="Running", Reason="", readiness=true. Elapsed: 3.726279ms
Jul  3 00:25:05.128: INFO: Pod "pod-update-activedeadlineseconds-6d674b2b-4cf6-453f-ad01-9ebcd69b59be": Phase="Running", Reason="", readiness=true. Elapsed: 2.008442895s
Jul  3 00:25:07.133: INFO: Pod "pod-update-activedeadlineseconds-6d674b2b-4cf6-453f-ad01-9ebcd69b59be": Phase="Running", Reason="", readiness=false. Elapsed: 4.013720068s
Jul  3 00:25:09.139: INFO: Pod "pod-update-activedeadlineseconds-6d674b2b-4cf6-453f-ad01-9ebcd69b59be": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 6.019283679s
Jul  3 00:25:09.139: INFO: Pod "pod-update-activedeadlineseconds-6d674b2b-4cf6-453f-ad01-9ebcd69b59be" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul  3 00:25:09.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5117" for this suite.
•{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":356,"completed":122,"skipped":2308,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:25:09.150: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-3714
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:25:09.297: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
Jul  3 00:25:09.311: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 00:25:09.311: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm is running 0 daemon pod, expected 1
Jul  3 00:25:10.322: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul  3 00:25:10.322: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 00:25:11.323: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul  3 00:25:11.323: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
Jul  3 00:25:11.351: INFO: Wrong image for pod: daemon-set-gwmsp. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul  3 00:25:11.351: INFO: Wrong image for pod: daemon-set-r9c7m. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul  3 00:25:12.361: INFO: Wrong image for pod: daemon-set-r9c7m. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul  3 00:25:13.361: INFO: Wrong image for pod: daemon-set-r9c7m. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul  3 00:25:14.362: INFO: Wrong image for pod: daemon-set-r9c7m. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul  3 00:25:14.362: INFO: Pod daemon-set-wrbwb is not available
Jul  3 00:25:15.361: INFO: Pod daemon-set-ts22l is not available
STEP: Check that daemon pods are still running on every node of the cluster.
Jul  3 00:25:15.376: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul  3 00:25:15.376: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm is running 0 daemon pod, expected 1
Jul  3 00:25:16.387: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul  3 00:25:16.387: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3714, will wait for the garbage collector to delete the pods
Jul  3 00:25:16.464: INFO: Deleting DaemonSet.extensions daemon-set took: 5.136555ms
Jul  3 00:25:16.564: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.339956ms
Jul  3 00:25:19.269: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 00:25:19.269: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jul  3 00:25:19.273: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18817"},"items":null}

Jul  3 00:25:19.276: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18817"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:25:19.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-3714" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":356,"completed":123,"skipped":2318,"failed":0}
SSSSS
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:25:19.297: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-6267
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replication controller my-hostname-basic-51b60889-e6de-4294-a4a0-ff8079a10be6
Jul  3 00:25:19.435: INFO: Pod name my-hostname-basic-51b60889-e6de-4294-a4a0-ff8079a10be6: Found 0 pods out of 1
Jul  3 00:25:24.440: INFO: Pod name my-hostname-basic-51b60889-e6de-4294-a4a0-ff8079a10be6: Found 1 pods out of 1
Jul  3 00:25:24.441: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-51b60889-e6de-4294-a4a0-ff8079a10be6" are running
Jul  3 00:25:24.444: INFO: Pod "my-hostname-basic-51b60889-e6de-4294-a4a0-ff8079a10be6-9nhr5" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-03 00:25:19 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-03 00:25:20 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-03 00:25:20 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-03 00:25:19 +0000 UTC Reason: Message:}])
Jul  3 00:25:24.444: INFO: Trying to dial the pod
Jul  3 00:25:29.524: INFO: Controller my-hostname-basic-51b60889-e6de-4294-a4a0-ff8079a10be6: Got expected result from replica 1 [my-hostname-basic-51b60889-e6de-4294-a4a0-ff8079a10be6-9nhr5]: "my-hostname-basic-51b60889-e6de-4294-a4a0-ff8079a10be6-9nhr5", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jul  3 00:25:29.524: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-6267" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":124,"skipped":2323,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:25:29.535: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-6427
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:25:29.664: INFO: Creating pod...
Jul  3 00:25:31.682: INFO: Creating service...
Jul  3 00:25:31.692: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/pods/agnhost/proxy?method=DELETE
Jul  3 00:25:31.749: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jul  3 00:25:31.749: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/pods/agnhost/proxy?method=OPTIONS
Jul  3 00:25:31.757: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jul  3 00:25:31.757: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/pods/agnhost/proxy?method=PATCH
Jul  3 00:25:31.807: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jul  3 00:25:31.807: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/pods/agnhost/proxy?method=POST
Jul  3 00:25:31.855: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jul  3 00:25:31.855: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/pods/agnhost/proxy?method=PUT
Jul  3 00:25:31.862: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jul  3 00:25:31.862: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/services/e2e-proxy-test-service/proxy?method=DELETE
Jul  3 00:25:31.870: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jul  3 00:25:31.870: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/services/e2e-proxy-test-service/proxy?method=OPTIONS
Jul  3 00:25:31.878: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jul  3 00:25:31.878: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/services/e2e-proxy-test-service/proxy?method=PATCH
Jul  3 00:25:31.931: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jul  3 00:25:31.931: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/services/e2e-proxy-test-service/proxy?method=POST
Jul  3 00:25:31.941: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jul  3 00:25:31.941: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/services/e2e-proxy-test-service/proxy?method=PUT
Jul  3 00:25:31.950: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jul  3 00:25:31.950: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/pods/agnhost/proxy?method=GET
Jul  3 00:25:31.953: INFO: http.Client request:GET StatusCode:301
Jul  3 00:25:31.953: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/services/e2e-proxy-test-service/proxy?method=GET
Jul  3 00:25:31.957: INFO: http.Client request:GET StatusCode:301
Jul  3 00:25:31.957: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/pods/agnhost/proxy?method=HEAD
Jul  3 00:25:31.960: INFO: http.Client request:HEAD StatusCode:301
Jul  3 00:25:31.960: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-6427/services/e2e-proxy-test-service/proxy?method=HEAD
Jul  3 00:25:31.964: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jul  3 00:25:31.964: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-6427" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]","total":356,"completed":125,"skipped":2341,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:25:31.975: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-8465
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override all
Jul  3 00:25:32.115: INFO: Waiting up to 5m0s for pod "client-containers-c98ef760-3c29-45c6-b9c8-eaeb187f3375" in namespace "containers-8465" to be "Succeeded or Failed"
Jul  3 00:25:32.119: INFO: Pod "client-containers-c98ef760-3c29-45c6-b9c8-eaeb187f3375": Phase="Pending", Reason="", readiness=false. Elapsed: 3.397741ms
Jul  3 00:25:34.123: INFO: Pod "client-containers-c98ef760-3c29-45c6-b9c8-eaeb187f3375": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00765226s
Jul  3 00:25:36.129: INFO: Pod "client-containers-c98ef760-3c29-45c6-b9c8-eaeb187f3375": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01364984s
STEP: Saw pod success
Jul  3 00:25:36.129: INFO: Pod "client-containers-c98ef760-3c29-45c6-b9c8-eaeb187f3375" satisfied condition "Succeeded or Failed"
Jul  3 00:25:36.133: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod client-containers-c98ef760-3c29-45c6-b9c8-eaeb187f3375 container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:25:36.151: INFO: Waiting for pod client-containers-c98ef760-3c29-45c6-b9c8-eaeb187f3375 to disappear
Jul  3 00:25:36.153: INFO: Pod client-containers-c98ef760-3c29-45c6-b9c8-eaeb187f3375 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jul  3 00:25:36.153: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-8465" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":356,"completed":126,"skipped":2352,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:25:36.163: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-3731
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:25:36.291: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jul  3 00:25:36.306: INFO: The status of Pod pod-exec-websocket-df496d92-9e92-4f5c-ba0b-d4dde96146e9 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:25:38.311: INFO: The status of Pod pod-exec-websocket-df496d92-9e92-4f5c-ba0b-d4dde96146e9 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul  3 00:25:38.410: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-3731" for this suite.
•{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":356,"completed":127,"skipped":2360,"failed":0}
SSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:25:38.421: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-2713
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:25:38.563: INFO: Endpoints addresses: [10.243.40.18] , ports: [443]
Jul  3 00:25:38.563: INFO: EndpointSlices addresses: [10.243.40.18] , ports: [443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jul  3 00:25:38.563: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-2713" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":356,"completed":128,"skipped":2367,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:25:38.571: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1637
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:25:38.717: INFO: Waiting up to 5m0s for pod "downwardapi-volume-74eeca40-0d2b-4391-a2d9-839f69422afc" in namespace "downward-api-1637" to be "Succeeded or Failed"
Jul  3 00:25:38.727: INFO: Pod "downwardapi-volume-74eeca40-0d2b-4391-a2d9-839f69422afc": Phase="Pending", Reason="", readiness=false. Elapsed: 9.886108ms
Jul  3 00:25:40.732: INFO: Pod "downwardapi-volume-74eeca40-0d2b-4391-a2d9-839f69422afc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014871093s
Jul  3 00:25:42.738: INFO: Pod "downwardapi-volume-74eeca40-0d2b-4391-a2d9-839f69422afc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020924559s
STEP: Saw pod success
Jul  3 00:25:42.738: INFO: Pod "downwardapi-volume-74eeca40-0d2b-4391-a2d9-839f69422afc" satisfied condition "Succeeded or Failed"
Jul  3 00:25:42.742: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-74eeca40-0d2b-4391-a2d9-839f69422afc container client-container: <nil>
STEP: delete the pod
Jul  3 00:25:42.759: INFO: Waiting for pod downwardapi-volume-74eeca40-0d2b-4391-a2d9-839f69422afc to disappear
Jul  3 00:25:42.762: INFO: Pod downwardapi-volume-74eeca40-0d2b-4391-a2d9-839f69422afc no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul  3 00:25:42.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1637" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":129,"skipped":2388,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:25:42.772: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-9208
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
Jul  3 00:25:42.902: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:25:45.137: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:25:56.706: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-9208" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":356,"completed":130,"skipped":2405,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:25:56.722: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-3096
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pods
Jul  3 00:25:56.861: INFO: created test-pod-1
Jul  3 00:25:56.868: INFO: created test-pod-2
Jul  3 00:25:56.875: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running
Jul  3 00:25:56.875: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-3096' to be running and ready
Jul  3 00:25:56.882: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jul  3 00:25:56.882: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jul  3 00:25:56.882: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jul  3 00:25:56.882: INFO: 0 / 3 pods in namespace 'pods-3096' are running and ready (0 seconds elapsed)
Jul  3 00:25:56.882: INFO: expected 0 pod replicas in namespace 'pods-3096', 0 are Running and Ready.
Jul  3 00:25:56.882: INFO: POD         NODE                                          PHASE    GRACE  CONDITIONS
Jul  3 00:25:56.882: INFO: test-pod-1  shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:25:56 +0000 UTC  }]
Jul  3 00:25:56.882: INFO: test-pod-2  shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:25:56 +0000 UTC  }]
Jul  3 00:25:56.882: INFO: test-pod-3  shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:25:56 +0000 UTC  }]
Jul  3 00:25:56.882: INFO: 
Jul  3 00:25:58.892: INFO: 3 / 3 pods in namespace 'pods-3096' are running and ready (2 seconds elapsed)
Jul  3 00:25:58.892: INFO: expected 0 pod replicas in namespace 'pods-3096', 0 are Running and Ready.
STEP: waiting for all pods to be deleted
Jul  3 00:25:58.907: INFO: Pod quantity 3 is different from expected quantity 0
Jul  3 00:25:59.911: INFO: Pod quantity 3 is different from expected quantity 0
Jul  3 00:26:00.912: INFO: Pod quantity 3 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul  3 00:26:01.912: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-3096" for this suite.
•{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":356,"completed":131,"skipped":2468,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:26:01.921: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6392
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
Jul  3 00:26:02.068: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6392  086a4c1a-e3e9-4743-869b-36175bf0d7dc 19183 0 2022-07-03 00:26:02 +0000 UTC <nil> <nil> map[] map[kubernetes.io/psp:e2e-test-privileged-psp] [] []  [{e2e.test Update v1 2022-07-03 00:26:02 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cvcnc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cvcnc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 00:26:02.071: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:26:04.076: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
Jul  3 00:26:04.076: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6392 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:26:04.076: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:26:04.076: INFO: ExecWithOptions: Clientset creation
Jul  3 00:26:04.076: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/dns-6392/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod...
Jul  3 00:26:04.264: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6392 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:26:04.264: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:26:04.264: INFO: ExecWithOptions: Clientset creation
Jul  3 00:26:04.264: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/dns-6392/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jul  3 00:26:04.566: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul  3 00:26:04.573: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6392" for this suite.
•{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":356,"completed":132,"skipped":2486,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:26:04.580: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-457
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jul  3 00:26:04.715: INFO: The status of Pod annotationupdate37c1595d-0239-463c-879b-59d2af0330b5 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:26:06.719: INFO: The status of Pod annotationupdate37c1595d-0239-463c-879b-59d2af0330b5 is Running (Ready = true)
Jul  3 00:26:07.244: INFO: Successfully updated pod "annotationupdate37c1595d-0239-463c-879b-59d2af0330b5"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul  3 00:26:11.273: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-457" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":133,"skipped":2496,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:26:11.281: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3302
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-3302
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-3302
I0703 00:26:11.423251    4513 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3302, replica count: 2
Jul  3 00:26:14.474: INFO: Creating new exec pod
I0703 00:26:14.474938    4513 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul  3 00:26:17.492: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-3302 exec execpodlndmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jul  3 00:26:17.797: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jul  3 00:26:17.797: INFO: stdout: "externalname-service-mm9j6"
Jul  3 00:26:17.797: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-3302 exec execpodlndmr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.107.254.209 80'
Jul  3 00:26:18.083: INFO: stderr: "+ nc -v -t -w 2 100.107.254.209 80\n+ echo hostName\nConnection to 100.107.254.209 80 port [tcp/http] succeeded!\n"
Jul  3 00:26:18.083: INFO: stdout: "externalname-service-psrsr"
Jul  3 00:26:18.083: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 00:26:18.093: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3302" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":356,"completed":134,"skipped":2505,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:26:18.102: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-4058
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul  3 00:26:34.258: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-4058" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":356,"completed":135,"skipped":2518,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:26:34.267: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1199
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-1199
STEP: creating service affinity-clusterip-transition in namespace services-1199
STEP: creating replication controller affinity-clusterip-transition in namespace services-1199
I0703 00:26:34.403789    4513 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-1199, replica count: 3
I0703 00:26:37.455331    4513 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul  3 00:26:37.460: INFO: Creating new exec pod
Jul  3 00:26:40.476: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-1199 exec execpod-affinity6c95r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
Jul  3 00:26:40.770: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Jul  3 00:26:40.770: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:26:40.770: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-1199 exec execpod-affinity6c95r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.110.13.19 80'
Jul  3 00:26:41.001: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.110.13.19 80\nConnection to 100.110.13.19 80 port [tcp/http] succeeded!\n"
Jul  3 00:26:41.001: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:26:41.012: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-1199 exec execpod-affinity6c95r -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://100.110.13.19:80/ ; done'
Jul  3 00:26:41.318: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n"
Jul  3 00:26:41.319: INFO: stdout: "\naffinity-clusterip-transition-5c5t7\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-khtnb\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-khtnb\naffinity-clusterip-transition-khtnb\naffinity-clusterip-transition-5c5t7\naffinity-clusterip-transition-5c5t7\naffinity-clusterip-transition-khtnb\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-5c5t7\naffinity-clusterip-transition-khtnb\naffinity-clusterip-transition-njsd5"
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-5c5t7
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-khtnb
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-khtnb
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-khtnb
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-5c5t7
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-5c5t7
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-khtnb
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-5c5t7
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-khtnb
Jul  3 00:26:41.319: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.325: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-1199 exec execpod-affinity6c95r -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://100.110.13.19:80/ ; done'
Jul  3 00:26:41.611: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.110.13.19:80/\n"
Jul  3 00:26:41.611: INFO: stdout: "\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5\naffinity-clusterip-transition-njsd5"
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Received response from host: affinity-clusterip-transition-njsd5
Jul  3 00:26:41.611: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-1199, will wait for the garbage collector to delete the pods
Jul  3 00:26:41.676: INFO: Deleting ReplicationController affinity-clusterip-transition took: 4.832083ms
Jul  3 00:26:41.777: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.711857ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 00:26:43.687: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1199" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":136,"skipped":2539,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:26:43.695: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-7217
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-downwardapi-8j6w
STEP: Creating a pod to test atomic-volume-subpath
Jul  3 00:26:43.835: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-8j6w" in namespace "subpath-7217" to be "Succeeded or Failed"
Jul  3 00:26:43.838: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Pending", Reason="", readiness=false. Elapsed: 2.496957ms
Jul  3 00:26:45.842: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Running", Reason="", readiness=true. Elapsed: 2.007240525s
Jul  3 00:26:47.846: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Running", Reason="", readiness=true. Elapsed: 4.011371897s
Jul  3 00:26:49.852: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Running", Reason="", readiness=true. Elapsed: 6.016861132s
Jul  3 00:26:51.856: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Running", Reason="", readiness=true. Elapsed: 8.020465124s
Jul  3 00:26:53.860: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Running", Reason="", readiness=true. Elapsed: 10.025155151s
Jul  3 00:26:55.865: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Running", Reason="", readiness=true. Elapsed: 12.029746634s
Jul  3 00:26:57.869: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Running", Reason="", readiness=true. Elapsed: 14.033562312s
Jul  3 00:26:59.873: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Running", Reason="", readiness=true. Elapsed: 16.038006149s
Jul  3 00:27:01.878: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Running", Reason="", readiness=true. Elapsed: 18.042520018s
Jul  3 00:27:03.883: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Running", Reason="", readiness=true. Elapsed: 20.047479276s
Jul  3 00:27:05.888: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Running", Reason="", readiness=false. Elapsed: 22.052475807s
Jul  3 00:27:07.892: INFO: Pod "pod-subpath-test-downwardapi-8j6w": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.057295983s
STEP: Saw pod success
Jul  3 00:27:07.892: INFO: Pod "pod-subpath-test-downwardapi-8j6w" satisfied condition "Succeeded or Failed"
Jul  3 00:27:07.895: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-subpath-test-downwardapi-8j6w container test-container-subpath-downwardapi-8j6w: <nil>
STEP: delete the pod
Jul  3 00:27:07.910: INFO: Waiting for pod pod-subpath-test-downwardapi-8j6w to disappear
Jul  3 00:27:07.913: INFO: Pod pod-subpath-test-downwardapi-8j6w no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-8j6w
Jul  3 00:27:07.913: INFO: Deleting pod "pod-subpath-test-downwardapi-8j6w" in namespace "subpath-7217"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jul  3 00:27:07.915: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-7217" for this suite.
•{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]","total":356,"completed":137,"skipped":2558,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:27:07.923: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-201
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-201
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:27:08.063: INFO: Found 0 stateful pods, waiting for 1
Jul  3 00:27:18.070: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
Jul  3 00:27:18.091: INFO: Found 1 stateful pods, waiting for 2
Jul  3 00:27:28.099: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jul  3 00:27:28.099: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul  3 00:27:28.114: INFO: Deleting all statefulset in ns statefulset-201
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul  3 00:27:28.121: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-201" for this suite.
•{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":356,"completed":138,"skipped":2576,"failed":0}
SSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:27:28.128: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4028
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jul  3 00:27:28.271: INFO: Waiting up to 5m0s for pod "downward-api-1bb63062-0b6d-4cd9-b40d-242eefa9ff44" in namespace "downward-api-4028" to be "Succeeded or Failed"
Jul  3 00:27:28.273: INFO: Pod "downward-api-1bb63062-0b6d-4cd9-b40d-242eefa9ff44": Phase="Pending", Reason="", readiness=false. Elapsed: 2.348544ms
Jul  3 00:27:30.278: INFO: Pod "downward-api-1bb63062-0b6d-4cd9-b40d-242eefa9ff44": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007416021s
Jul  3 00:27:32.282: INFO: Pod "downward-api-1bb63062-0b6d-4cd9-b40d-242eefa9ff44": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011885127s
STEP: Saw pod success
Jul  3 00:27:32.283: INFO: Pod "downward-api-1bb63062-0b6d-4cd9-b40d-242eefa9ff44" satisfied condition "Succeeded or Failed"
Jul  3 00:27:32.286: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downward-api-1bb63062-0b6d-4cd9-b40d-242eefa9ff44 container dapi-container: <nil>
STEP: delete the pod
Jul  3 00:27:32.301: INFO: Waiting for pod downward-api-1bb63062-0b6d-4cd9-b40d-242eefa9ff44 to disappear
Jul  3 00:27:32.304: INFO: Pod downward-api-1bb63062-0b6d-4cd9-b40d-242eefa9ff44 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jul  3 00:27:32.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4028" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":356,"completed":139,"skipped":2583,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:27:32.311: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-808
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jul  3 00:27:32.459: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 00:27:32.459: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm is running 0 daemon pod, expected 1
Jul  3 00:27:33.467: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 00:27:33.467: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm is running 0 daemon pod, expected 1
Jul  3 00:27:34.468: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul  3 00:27:34.468: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
Jul  3 00:27:34.486: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul  3 00:27:34.486: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 00:27:35.498: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul  3 00:27:35.498: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 00:27:36.495: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul  3 00:27:36.495: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-808, will wait for the garbage collector to delete the pods
Jul  3 00:27:36.557: INFO: Deleting DaemonSet.extensions daemon-set took: 4.296075ms
Jul  3 00:27:36.658: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.759032ms
Jul  3 00:27:38.761: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 00:27:38.761: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jul  3 00:27:38.764: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20007"},"items":null}

Jul  3 00:27:38.767: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20010"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:27:38.779: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-808" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":356,"completed":140,"skipped":2654,"failed":0}
SSS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:27:38.788: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-1009
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
Jul  3 00:27:40.935: INFO: pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jul  3 00:27:47.027: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-1009" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":356,"completed":141,"skipped":2657,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:27:47.034: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-6076
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:27:47.161: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties
Jul  3 00:27:49.492: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 --namespace=crd-publish-openapi-6076 create -f -'
Jul  3 00:27:50.239: INFO: stderr: ""
Jul  3 00:27:50.239: INFO: stdout: "e2e-test-crd-publish-openapi-1930-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jul  3 00:27:50.239: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 --namespace=crd-publish-openapi-6076 delete e2e-test-crd-publish-openapi-1930-crds test-foo'
Jul  3 00:27:50.298: INFO: stderr: ""
Jul  3 00:27:50.298: INFO: stdout: "e2e-test-crd-publish-openapi-1930-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Jul  3 00:27:50.298: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 --namespace=crd-publish-openapi-6076 apply -f -'
Jul  3 00:27:50.462: INFO: stderr: ""
Jul  3 00:27:50.462: INFO: stdout: "e2e-test-crd-publish-openapi-1930-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jul  3 00:27:50.462: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 --namespace=crd-publish-openapi-6076 delete e2e-test-crd-publish-openapi-1930-crds test-foo'
Jul  3 00:27:50.521: INFO: stderr: ""
Jul  3 00:27:50.521: INFO: stdout: "e2e-test-crd-publish-openapi-1930-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values
Jul  3 00:27:50.521: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 --namespace=crd-publish-openapi-6076 create -f -'
Jul  3 00:27:50.664: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
Jul  3 00:27:50.664: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 --namespace=crd-publish-openapi-6076 create -f -'
Jul  3 00:27:50.806: INFO: rc: 1
Jul  3 00:27:50.806: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 --namespace=crd-publish-openapi-6076 apply -f -'
Jul  3 00:27:50.952: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties
Jul  3 00:27:50.952: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 --namespace=crd-publish-openapi-6076 create -f -'
Jul  3 00:27:51.093: INFO: rc: 1
Jul  3 00:27:51.093: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 --namespace=crd-publish-openapi-6076 apply -f -'
Jul  3 00:27:51.230: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
Jul  3 00:27:51.230: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 explain e2e-test-crd-publish-openapi-1930-crds'
Jul  3 00:27:51.372: INFO: stderr: ""
Jul  3 00:27:51.372: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1930-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
Jul  3 00:27:51.373: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 explain e2e-test-crd-publish-openapi-1930-crds.metadata'
Jul  3 00:27:51.516: INFO: stderr: ""
Jul  3 00:27:51.516: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1930-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     Deprecated: ClusterName is a legacy field that was always cleared by the\n     system and never used; it will be removed completely in 1.25.\n\n     The name in the go struct is changed to help clients detect accidental use.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Jul  3 00:27:51.516: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 explain e2e-test-crd-publish-openapi-1930-crds.spec'
Jul  3 00:27:51.681: INFO: stderr: ""
Jul  3 00:27:51.681: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1930-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Jul  3 00:27:51.681: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 explain e2e-test-crd-publish-openapi-1930-crds.spec.bars'
Jul  3 00:27:51.830: INFO: stderr: ""
Jul  3 00:27:51.830: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1930-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
Jul  3 00:27:51.830: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-6076 explain e2e-test-crd-publish-openapi-1930-crds.spec.bars2'
Jul  3 00:27:51.975: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:27:54.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-6076" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":356,"completed":142,"skipped":2662,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:27:54.155: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename ingress
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingress-6343
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jul  3 00:27:54.300: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jul  3 00:27:54.304: INFO: starting watch
STEP: patching
STEP: updating
Jul  3 00:27:54.315: INFO: waiting for watch events with expected annotations
Jul  3 00:27:54.315: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:188
Jul  3 00:27:54.343: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-6343" for this suite.
•{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":356,"completed":143,"skipped":2689,"failed":0}
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:27:54.350: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-965
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1412
STEP: creating an pod
Jul  3 00:27:54.472: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-965 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.39 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Jul  3 00:27:54.534: INFO: stderr: ""
Jul  3 00:27:54.534: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for log generator to start.
Jul  3 00:27:54.534: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Jul  3 00:27:54.534: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-965" to be "running and ready, or succeeded"
Jul  3 00:27:54.537: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 3.324606ms
Jul  3 00:27:56.542: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.008339338s
Jul  3 00:27:56.542: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Jul  3 00:27:56.542: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
Jul  3 00:27:56.542: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-965 logs logs-generator logs-generator'
Jul  3 00:27:56.609: INFO: stderr: ""
Jul  3 00:27:56.610: INFO: stdout: "I0703 00:27:55.182982       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/ws9 300\nI0703 00:27:55.383083       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/brz 441\nI0703 00:27:55.583321       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/5btz 440\nI0703 00:27:55.783645       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/psx 294\nI0703 00:27:55.984006       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/xdn2 248\nI0703 00:27:56.183314       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/xq9 537\nI0703 00:27:56.383959       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/xpj 244\nI0703 00:27:56.583306       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/9v88 506\n"
STEP: limiting log lines
Jul  3 00:27:56.610: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-965 logs logs-generator logs-generator --tail=1'
Jul  3 00:27:56.680: INFO: stderr: ""
Jul  3 00:27:56.680: INFO: stdout: "I0703 00:27:56.583306       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/9v88 506\n"
Jul  3 00:27:56.680: INFO: got output "I0703 00:27:56.583306       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/9v88 506\n"
STEP: limiting log bytes
Jul  3 00:27:56.680: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-965 logs logs-generator logs-generator --limit-bytes=1'
Jul  3 00:27:56.741: INFO: stderr: ""
Jul  3 00:27:56.741: INFO: stdout: "I"
Jul  3 00:27:56.741: INFO: got output "I"
STEP: exposing timestamps
Jul  3 00:27:56.741: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-965 logs logs-generator logs-generator --tail=1 --timestamps'
Jul  3 00:27:56.811: INFO: stderr: ""
Jul  3 00:27:56.811: INFO: stdout: "2022-07-03T00:27:56.783757940Z I0703 00:27:56.783657       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/fr2 318\n"
Jul  3 00:27:56.811: INFO: got output "2022-07-03T00:27:56.783757940Z I0703 00:27:56.783657       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/fr2 318\n"
STEP: restricting to a time range
Jul  3 00:27:59.311: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-965 logs logs-generator logs-generator --since=1s'
Jul  3 00:27:59.411: INFO: stderr: ""
Jul  3 00:27:59.411: INFO: stdout: "I0703 00:27:58.583771       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/57z 452\nI0703 00:27:58.783083       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/97s 317\nI0703 00:27:58.983427       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/wjx 307\nI0703 00:27:59.183778       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/tbvf 555\nI0703 00:27:59.383073       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/d9s 391\n"
Jul  3 00:27:59.411: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-965 logs logs-generator logs-generator --since=24h'
Jul  3 00:27:59.473: INFO: stderr: ""
Jul  3 00:27:59.473: INFO: stdout: "I0703 00:27:55.182982       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/ws9 300\nI0703 00:27:55.383083       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/brz 441\nI0703 00:27:55.583321       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/5btz 440\nI0703 00:27:55.783645       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/psx 294\nI0703 00:27:55.984006       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/xdn2 248\nI0703 00:27:56.183314       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/xq9 537\nI0703 00:27:56.383959       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/xpj 244\nI0703 00:27:56.583306       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/9v88 506\nI0703 00:27:56.783657       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/fr2 318\nI0703 00:27:56.984010       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/m6z 536\nI0703 00:27:57.183362       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/cgnz 424\nI0703 00:27:57.383707       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/pfdp 500\nI0703 00:27:57.584055       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/pd64 255\nI0703 00:27:57.783504       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/7886 597\nI0703 00:27:57.983900       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/cnqj 554\nI0703 00:27:58.183277       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/4lkl 572\nI0703 00:27:58.383109       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/4wm 235\nI0703 00:27:58.583771       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/57z 452\nI0703 00:27:58.783083       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/97s 317\nI0703 00:27:58.983427       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/wjx 307\nI0703 00:27:59.183778       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/tbvf 555\nI0703 00:27:59.383073       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/d9s 391\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1417
Jul  3 00:27:59.473: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-965 delete pod logs-generator'
Jul  3 00:28:00.678: INFO: stderr: ""
Jul  3 00:28:00.678: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 00:28:00.678: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-965" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":356,"completed":144,"skipped":2695,"failed":0}
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:00.689: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2643
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1540
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jul  3 00:28:00.813: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2643 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
Jul  3 00:28:00.877: INFO: stderr: ""
Jul  3 00:28:00.877: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1544
Jul  3 00:28:00.880: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2643 delete pods e2e-test-httpd-pod'
Jul  3 00:28:02.676: INFO: stderr: ""
Jul  3 00:28:02.676: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 00:28:02.676: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2643" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":356,"completed":145,"skipped":2700,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:02.685: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5583
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-7638a9f9-9a30-4fee-9f59-f2482b275edd
STEP: Creating a pod to test consume configMaps
Jul  3 00:28:02.824: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-02a11e6d-c9da-4667-b791-a01f7c970cd0" in namespace "projected-5583" to be "Succeeded or Failed"
Jul  3 00:28:02.827: INFO: Pod "pod-projected-configmaps-02a11e6d-c9da-4667-b791-a01f7c970cd0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.786884ms
Jul  3 00:28:04.831: INFO: Pod "pod-projected-configmaps-02a11e6d-c9da-4667-b791-a01f7c970cd0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006912686s
Jul  3 00:28:06.836: INFO: Pod "pod-projected-configmaps-02a11e6d-c9da-4667-b791-a01f7c970cd0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0116658s
STEP: Saw pod success
Jul  3 00:28:06.836: INFO: Pod "pod-projected-configmaps-02a11e6d-c9da-4667-b791-a01f7c970cd0" satisfied condition "Succeeded or Failed"
Jul  3 00:28:06.840: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-configmaps-02a11e6d-c9da-4667-b791-a01f7c970cd0 container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:28:06.854: INFO: Waiting for pod pod-projected-configmaps-02a11e6d-c9da-4667-b791-a01f7c970cd0 to disappear
Jul  3 00:28:06.857: INFO: Pod pod-projected-configmaps-02a11e6d-c9da-4667-b791-a01f7c970cd0 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul  3 00:28:06.857: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5583" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":146,"skipped":2711,"failed":0}
S
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:06.864: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1527
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Jul  3 00:28:06.999: INFO: Waiting up to 5m0s for pod "pod-8fc5aeb5-7d75-41a1-8300-65c359ee98ff" in namespace "emptydir-1527" to be "Succeeded or Failed"
Jul  3 00:28:07.002: INFO: Pod "pod-8fc5aeb5-7d75-41a1-8300-65c359ee98ff": Phase="Pending", Reason="", readiness=false. Elapsed: 2.798083ms
Jul  3 00:28:09.006: INFO: Pod "pod-8fc5aeb5-7d75-41a1-8300-65c359ee98ff": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006505444s
Jul  3 00:28:11.011: INFO: Pod "pod-8fc5aeb5-7d75-41a1-8300-65c359ee98ff": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011599717s
STEP: Saw pod success
Jul  3 00:28:11.011: INFO: Pod "pod-8fc5aeb5-7d75-41a1-8300-65c359ee98ff" satisfied condition "Succeeded or Failed"
Jul  3 00:28:11.014: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-8fc5aeb5-7d75-41a1-8300-65c359ee98ff container test-container: <nil>
STEP: delete the pod
Jul  3 00:28:11.030: INFO: Waiting for pod pod-8fc5aeb5-7d75-41a1-8300-65c359ee98ff to disappear
Jul  3 00:28:11.033: INFO: Pod pod-8fc5aeb5-7d75-41a1-8300-65c359ee98ff no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 00:28:11.033: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1527" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":147,"skipped":2712,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:11.042: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6895
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:28:11.176: INFO: Waiting up to 5m0s for pod "downwardapi-volume-b13e7bf7-e818-43a6-b770-906b6bc69fd7" in namespace "downward-api-6895" to be "Succeeded or Failed"
Jul  3 00:28:11.180: INFO: Pod "downwardapi-volume-b13e7bf7-e818-43a6-b770-906b6bc69fd7": Phase="Pending", Reason="", readiness=false. Elapsed: 3.923821ms
Jul  3 00:28:13.184: INFO: Pod "downwardapi-volume-b13e7bf7-e818-43a6-b770-906b6bc69fd7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008801461s
Jul  3 00:28:15.190: INFO: Pod "downwardapi-volume-b13e7bf7-e818-43a6-b770-906b6bc69fd7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013897571s
STEP: Saw pod success
Jul  3 00:28:15.190: INFO: Pod "downwardapi-volume-b13e7bf7-e818-43a6-b770-906b6bc69fd7" satisfied condition "Succeeded or Failed"
Jul  3 00:28:15.193: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-b13e7bf7-e818-43a6-b770-906b6bc69fd7 container client-container: <nil>
STEP: delete the pod
Jul  3 00:28:15.208: INFO: Waiting for pod downwardapi-volume-b13e7bf7-e818-43a6-b770-906b6bc69fd7 to disappear
Jul  3 00:28:15.210: INFO: Pod downwardapi-volume-b13e7bf7-e818-43a6-b770-906b6bc69fd7 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul  3 00:28:15.210: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6895" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":148,"skipped":2725,"failed":0}
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:15.217: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-5717
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jul  3 00:28:15.340: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jul  3 00:28:15.348: INFO: Waiting for terminating namespaces to be deleted...
Jul  3 00:28:15.351: INFO: 
Logging pods the apiserver thinks is on node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm before test
Jul  3 00:28:15.360: INFO: addons-nginx-ingress-controller-7c48bb6fc9-cssxn from kube-system started at 2022-07-02 23:56:06 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.360: INFO: 	Container nginx-ingress-controller ready: true, restart count 0
Jul  3 00:28:15.360: INFO: apiserver-proxy-kjgqw from kube-system started at 2022-07-02 23:50:00 +0000 UTC (2 container statuses recorded)
Jul  3 00:28:15.360: INFO: 	Container proxy ready: true, restart count 0
Jul  3 00:28:15.360: INFO: 	Container sidecar ready: true, restart count 0
Jul  3 00:28:15.360: INFO: blackbox-exporter-559b7f4b59-pggst from kube-system started at 2022-07-02 23:56:06 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.360: INFO: 	Container blackbox-exporter ready: true, restart count 0
Jul  3 00:28:15.360: INFO: blackbox-exporter-559b7f4b59-wjtp7 from kube-system started at 2022-07-03 00:28:06 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.360: INFO: 	Container blackbox-exporter ready: true, restart count 0
Jul  3 00:28:15.360: INFO: calico-kube-controllers-6959b48bb7-h9nqq from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.360: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Jul  3 00:28:15.360: INFO: calico-node-lrbdv from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.360: INFO: 	Container calico-node ready: true, restart count 0
Jul  3 00:28:15.360: INFO: csi-driver-node-d66gz from kube-system started at 2022-07-02 23:50:00 +0000 UTC (3 container statuses recorded)
Jul  3 00:28:15.360: INFO: 	Container csi-driver ready: true, restart count 0
Jul  3 00:28:15.360: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Jul  3 00:28:15.360: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Jul  3 00:28:15.360: INFO: egress-filter-applier-hh2tw from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.360: INFO: 	Container egress-filter-applier ready: true, restart count 0
Jul  3 00:28:15.360: INFO: kube-proxy-worker-1-v1.24.2-2xlkb from kube-system started at 2022-07-03 00:07:07 +0000 UTC (2 container statuses recorded)
Jul  3 00:28:15.360: INFO: 	Container conntrack-fix ready: true, restart count 0
Jul  3 00:28:15.360: INFO: 	Container kube-proxy ready: true, restart count 0
Jul  3 00:28:15.360: INFO: node-exporter-sxs7w from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.360: INFO: 	Container node-exporter ready: true, restart count 0
Jul  3 00:28:15.360: INFO: node-problem-detector-jrk7n from kube-system started at 2022-07-03 00:17:07 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.360: INFO: 	Container node-problem-detector ready: true, restart count 0
Jul  3 00:28:15.360: INFO: 
Logging pods the apiserver thinks is on node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b before test
Jul  3 00:28:15.370: INFO: addons-nginx-ingress-nginx-ingress-k8s-backend-b6c66fdff-dl2h7 from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container nginx-ingress-nginx-ingress-k8s-backend ready: true, restart count 0
Jul  3 00:28:15.370: INFO: apiserver-proxy-mgzwv from kube-system started at 2022-07-02 23:49:52 +0000 UTC (2 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container proxy ready: true, restart count 0
Jul  3 00:28:15.370: INFO: 	Container sidecar ready: true, restart count 0
Jul  3 00:28:15.370: INFO: calico-node-dvrpl from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container calico-node ready: true, restart count 0
Jul  3 00:28:15.370: INFO: calico-node-vertical-autoscaler-5b74b8f994-4v6kp from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container autoscaler ready: true, restart count 0
Jul  3 00:28:15.370: INFO: calico-typha-deploy-7f646d87dc-5lzhs from kube-system started at 2022-07-02 23:51:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container calico-typha ready: true, restart count 0
Jul  3 00:28:15.370: INFO: calico-typha-horizontal-autoscaler-55ff99f5cf-tnn7q from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container autoscaler ready: true, restart count 0
Jul  3 00:28:15.370: INFO: calico-typha-vertical-autoscaler-78b946fc85-9vzmk from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container autoscaler ready: true, restart count 0
Jul  3 00:28:15.370: INFO: coredns-7f6bdd8558-68vlm from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container coredns ready: true, restart count 0
Jul  3 00:28:15.370: INFO: coredns-7f6bdd8558-p4gr6 from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container coredns ready: true, restart count 0
Jul  3 00:28:15.370: INFO: csi-driver-node-w722v from kube-system started at 2022-07-02 23:49:52 +0000 UTC (3 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container csi-driver ready: true, restart count 0
Jul  3 00:28:15.370: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Jul  3 00:28:15.370: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Jul  3 00:28:15.370: INFO: egress-filter-applier-6m5b7 from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container egress-filter-applier ready: true, restart count 0
Jul  3 00:28:15.370: INFO: kube-proxy-worker-1-v1.24.2-msvh8 from kube-system started at 2022-07-03 00:07:07 +0000 UTC (2 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container conntrack-fix ready: true, restart count 0
Jul  3 00:28:15.370: INFO: 	Container kube-proxy ready: true, restart count 0
Jul  3 00:28:15.370: INFO: metrics-server-6654459fc6-4f92g from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container metrics-server ready: true, restart count 0
Jul  3 00:28:15.370: INFO: node-exporter-f95js from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container node-exporter ready: true, restart count 0
Jul  3 00:28:15.370: INFO: node-problem-detector-kbbjx from kube-system started at 2022-07-03 00:17:07 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container node-problem-detector ready: true, restart count 0
Jul  3 00:28:15.370: INFO: vpn-shoot-7788586576-q5cf7 from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container vpn-shoot ready: true, restart count 0
Jul  3 00:28:15.370: INFO: dashboard-metrics-scraper-9c4f98cd5-cwln9 from kubernetes-dashboard started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Jul  3 00:28:15.370: INFO: kubernetes-dashboard-789c777b5c-8wjzk from kubernetes-dashboard started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:28:15.370: INFO: 	Container kubernetes-dashboard ready: true, restart count 4
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
STEP: verifying the node has the label node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
STEP: verifying the node has the label node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod addons-nginx-ingress-controller-7c48bb6fc9-cssxn requesting resource cpu=100m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
Jul  3 00:28:15.433: INFO: Pod addons-nginx-ingress-nginx-ingress-k8s-backend-b6c66fdff-dl2h7 requesting resource cpu=0m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod apiserver-proxy-kjgqw requesting resource cpu=40m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
Jul  3 00:28:15.433: INFO: Pod apiserver-proxy-mgzwv requesting resource cpu=40m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod blackbox-exporter-559b7f4b59-pggst requesting resource cpu=11m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
Jul  3 00:28:15.433: INFO: Pod blackbox-exporter-559b7f4b59-wjtp7 requesting resource cpu=11m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
Jul  3 00:28:15.433: INFO: Pod calico-kube-controllers-6959b48bb7-h9nqq requesting resource cpu=10m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
Jul  3 00:28:15.433: INFO: Pod calico-node-dvrpl requesting resource cpu=250m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod calico-node-lrbdv requesting resource cpu=250m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
Jul  3 00:28:15.433: INFO: Pod calico-node-vertical-autoscaler-5b74b8f994-4v6kp requesting resource cpu=10m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod calico-typha-deploy-7f646d87dc-5lzhs requesting resource cpu=320m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod calico-typha-horizontal-autoscaler-55ff99f5cf-tnn7q requesting resource cpu=10m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod calico-typha-vertical-autoscaler-78b946fc85-9vzmk requesting resource cpu=10m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod coredns-7f6bdd8558-68vlm requesting resource cpu=50m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod coredns-7f6bdd8558-p4gr6 requesting resource cpu=50m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod csi-driver-node-d66gz requesting resource cpu=37m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
Jul  3 00:28:15.433: INFO: Pod csi-driver-node-w722v requesting resource cpu=37m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod egress-filter-applier-6m5b7 requesting resource cpu=50m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod egress-filter-applier-hh2tw requesting resource cpu=50m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
Jul  3 00:28:15.433: INFO: Pod kube-proxy-worker-1-v1.24.2-2xlkb requesting resource cpu=34m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
Jul  3 00:28:15.433: INFO: Pod kube-proxy-worker-1-v1.24.2-msvh8 requesting resource cpu=34m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod metrics-server-6654459fc6-4f92g requesting resource cpu=50m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod node-exporter-f95js requesting resource cpu=50m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod node-exporter-sxs7w requesting resource cpu=50m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
Jul  3 00:28:15.433: INFO: Pod node-problem-detector-jrk7n requesting resource cpu=11m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
Jul  3 00:28:15.433: INFO: Pod node-problem-detector-kbbjx requesting resource cpu=11m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod vpn-shoot-7788586576-q5cf7 requesting resource cpu=100m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod dashboard-metrics-scraper-9c4f98cd5-cwln9 requesting resource cpu=0m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
Jul  3 00:28:15.433: INFO: Pod kubernetes-dashboard-789c777b5c-8wjzk requesting resource cpu=50m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
STEP: Starting Pods to consume most of the cluster CPU.
Jul  3 00:28:15.433: INFO: Creating a pod which consumes cpu=921m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
Jul  3 00:28:15.443: INFO: Creating a pod which consumes cpu=558m on Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-98602fce-ce3e-44fa-a7a6-669ebf0fea05.16fe2a2f46a0a2f2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5717/filler-pod-98602fce-ce3e-44fa-a7a6-669ebf0fea05 to shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-98602fce-ce3e-44fa-a7a6-669ebf0fea05.16fe2a2f67939c2c], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-98602fce-ce3e-44fa-a7a6-669ebf0fea05.16fe2a2f684d1666], Reason = [Created], Message = [Created container filler-pod-98602fce-ce3e-44fa-a7a6-669ebf0fea05]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-98602fce-ce3e-44fa-a7a6-669ebf0fea05.16fe2a2f6c524d23], Reason = [Started], Message = [Started container filler-pod-98602fce-ce3e-44fa-a7a6-669ebf0fea05]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d1a9be1c-da44-470d-9986-14c1121ebda8.16fe2a2f4619760e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5717/filler-pod-d1a9be1c-da44-470d-9986-14c1121ebda8 to shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d1a9be1c-da44-470d-9986-14c1121ebda8.16fe2a2f685d2574], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d1a9be1c-da44-470d-9986-14c1121ebda8.16fe2a2f69224360], Reason = [Created], Message = [Created container filler-pod-d1a9be1c-da44-470d-9986-14c1121ebda8]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-d1a9be1c-da44-470d-9986-14c1121ebda8.16fe2a2f6cbb0f91], Reason = [Started], Message = [Started container filler-pod-d1a9be1c-da44-470d-9986-14c1121ebda8]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.16fe2a2fbf32f961], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.]
STEP: removing the label node off the node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:28:18.516: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-5717" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":356,"completed":149,"skipped":2729,"failed":0}
SS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:18.543: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-624
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-624
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-624
I0703 00:28:18.693399    4513 runners.go:193] Created replication controller with name: externalname-service, namespace: services-624, replica count: 2
I0703 00:28:21.744992    4513 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul  3 00:28:21.745: INFO: Creating new exec pod
Jul  3 00:28:24.772: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-624 exec execpodnww6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jul  3 00:28:25.074: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jul  3 00:28:25.074: INFO: stdout: ""
Jul  3 00:28:26.074: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-624 exec execpodnww6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jul  3 00:28:26.314: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jul  3 00:28:26.315: INFO: stdout: "externalname-service-9crtk"
Jul  3 00:28:26.315: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-624 exec execpodnww6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.109.237.144 80'
Jul  3 00:28:26.508: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.109.237.144 80\nConnection to 100.109.237.144 80 port [tcp/http] succeeded!\n"
Jul  3 00:28:26.508: INFO: stdout: ""
Jul  3 00:28:27.508: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-624 exec execpodnww6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.109.237.144 80'
Jul  3 00:28:27.744: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.109.237.144 80\nConnection to 100.109.237.144 80 port [tcp/http] succeeded!\n"
Jul  3 00:28:27.744: INFO: stdout: "externalname-service-9crtk"
Jul  3 00:28:27.745: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-624 exec execpodnww6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.183 30479'
Jul  3 00:28:28.015: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.183 30479\nConnection to 10.250.2.183 30479 port [tcp/*] succeeded!\n"
Jul  3 00:28:28.015: INFO: stdout: "externalname-service-9crtk"
Jul  3 00:28:28.015: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-624 exec execpodnww6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.84 30479'
Jul  3 00:28:28.225: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.84 30479\nConnection to 10.250.2.84 30479 port [tcp/*] succeeded!\n"
Jul  3 00:28:28.225: INFO: stdout: ""
Jul  3 00:28:29.225: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-624 exec execpodnww6b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.84 30479'
Jul  3 00:28:29.455: INFO: stderr: "+ nc -v -t -w 2 10.250.2.84 30479\n+ echo hostName\nConnection to 10.250.2.84 30479 port [tcp/*] succeeded!\n"
Jul  3 00:28:29.455: INFO: stdout: "externalname-service-9crtk"
Jul  3 00:28:29.455: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 00:28:29.469: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-624" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":356,"completed":150,"skipped":2731,"failed":0}
SSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:29.477: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-8819
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
Jul  3 00:28:29.608: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul  3 00:28:33.764: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-8819" for this suite.
•{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":356,"completed":151,"skipped":2734,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:33.773: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1670
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching services
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 00:28:33.900: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1670" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":356,"completed":152,"skipped":2755,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:33.908: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-8263
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-8263
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jul  3 00:28:34.033: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jul  3 00:28:34.065: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:28:36.070: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:28:38.077: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:28:40.070: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:28:42.071: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:28:44.070: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 00:28:46.071: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jul  3 00:28:46.077: INFO: The status of Pod netserver-1 is Running (Ready = true)
STEP: Creating test pods
Jul  3 00:28:48.115: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Jul  3 00:28:48.115: INFO: Going to poll 100.64.1.19 on port 8083 at least 0 times, with a maximum of 34 tries before failing
Jul  3 00:28:48.118: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://100.64.1.19:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8263 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:28:48.118: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:28:48.118: INFO: ExecWithOptions: Clientset creation
Jul  3 00:28:48.118: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/pod-network-test-8263/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F100.64.1.19%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jul  3 00:28:48.299: INFO: Found all 1 expected endpoints: [netserver-0]
Jul  3 00:28:48.299: INFO: Going to poll 100.64.0.136 on port 8083 at least 0 times, with a maximum of 34 tries before failing
Jul  3 00:28:48.303: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://100.64.0.136:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8263 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:28:48.303: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:28:48.303: INFO: ExecWithOptions: Clientset creation
Jul  3 00:28:48.303: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/pod-network-test-8263/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F100.64.0.136%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jul  3 00:28:48.565: INFO: Found all 1 expected endpoints: [netserver-1]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jul  3 00:28:48.566: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-8263" for this suite.
•{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":153,"skipped":2786,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:48.577: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3381
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:28:48.714: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c4692e9e-81d6-40f6-9aa9-d4f245f6bbe4" in namespace "projected-3381" to be "Succeeded or Failed"
Jul  3 00:28:48.717: INFO: Pod "downwardapi-volume-c4692e9e-81d6-40f6-9aa9-d4f245f6bbe4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.88706ms
Jul  3 00:28:50.722: INFO: Pod "downwardapi-volume-c4692e9e-81d6-40f6-9aa9-d4f245f6bbe4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0080663s
Jul  3 00:28:52.728: INFO: Pod "downwardapi-volume-c4692e9e-81d6-40f6-9aa9-d4f245f6bbe4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013713702s
STEP: Saw pod success
Jul  3 00:28:52.728: INFO: Pod "downwardapi-volume-c4692e9e-81d6-40f6-9aa9-d4f245f6bbe4" satisfied condition "Succeeded or Failed"
Jul  3 00:28:52.731: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-c4692e9e-81d6-40f6-9aa9-d4f245f6bbe4 container client-container: <nil>
STEP: delete the pod
Jul  3 00:28:52.747: INFO: Waiting for pod downwardapi-volume-c4692e9e-81d6-40f6-9aa9-d4f245f6bbe4 to disappear
Jul  3 00:28:52.750: INFO: Pod downwardapi-volume-c4692e9e-81d6-40f6-9aa9-d4f245f6bbe4 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul  3 00:28:52.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3381" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":356,"completed":154,"skipped":2804,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:52.759: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-7291
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:28:52.896: INFO: The status of Pod busybox-host-aliases56f74e32-230a-4f61-927d-8f595aeb0c50 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:28:54.901: INFO: The status of Pod busybox-host-aliases56f74e32-230a-4f61-927d-8f595aeb0c50 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jul  3 00:28:54.913: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-7291" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":155,"skipped":2812,"failed":0}
S
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:54.922: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-11
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-7df38066-eda7-48e3-8c8d-07bd58c81c64
STEP: Creating a pod to test consume secrets
Jul  3 00:28:55.064: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-db01e203-8330-4a4f-be62-c3f13006d7bf" in namespace "projected-11" to be "Succeeded or Failed"
Jul  3 00:28:55.067: INFO: Pod "pod-projected-secrets-db01e203-8330-4a4f-be62-c3f13006d7bf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.599454ms
Jul  3 00:28:57.071: INFO: Pod "pod-projected-secrets-db01e203-8330-4a4f-be62-c3f13006d7bf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007343179s
Jul  3 00:28:59.076: INFO: Pod "pod-projected-secrets-db01e203-8330-4a4f-be62-c3f13006d7bf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012314977s
STEP: Saw pod success
Jul  3 00:28:59.076: INFO: Pod "pod-projected-secrets-db01e203-8330-4a4f-be62-c3f13006d7bf" satisfied condition "Succeeded or Failed"
Jul  3 00:28:59.082: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-secrets-db01e203-8330-4a4f-be62-c3f13006d7bf container projected-secret-volume-test: <nil>
STEP: delete the pod
Jul  3 00:28:59.096: INFO: Waiting for pod pod-projected-secrets-db01e203-8330-4a4f-be62-c3f13006d7bf to disappear
Jul  3 00:28:59.098: INFO: Pod pod-projected-secrets-db01e203-8330-4a4f-be62-c3f13006d7bf no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul  3 00:28:59.098: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-11" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":156,"skipped":2813,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:28:59.107: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2354
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
STEP: create deployment with httpd image
Jul  3 00:28:59.233: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2354 create -f -'
Jul  3 00:28:59.894: INFO: stderr: ""
Jul  3 00:28:59.894: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
Jul  3 00:28:59.894: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2354 diff -f -'
Jul  3 00:29:00.056: INFO: rc: 1
Jul  3 00:29:00.056: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2354 delete -f -'
Jul  3 00:29:00.118: INFO: stderr: ""
Jul  3 00:29:00.118: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 00:29:00.118: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2354" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":356,"completed":157,"skipped":2826,"failed":0}

------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:29:00.126: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8871
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:29:00.266: INFO: Waiting up to 5m0s for pod "downwardapi-volume-3697435a-b994-4a07-a46e-024eaa72db7c" in namespace "projected-8871" to be "Succeeded or Failed"
Jul  3 00:29:00.270: INFO: Pod "downwardapi-volume-3697435a-b994-4a07-a46e-024eaa72db7c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.355287ms
Jul  3 00:29:02.275: INFO: Pod "downwardapi-volume-3697435a-b994-4a07-a46e-024eaa72db7c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009079056s
Jul  3 00:29:04.279: INFO: Pod "downwardapi-volume-3697435a-b994-4a07-a46e-024eaa72db7c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013454333s
STEP: Saw pod success
Jul  3 00:29:04.279: INFO: Pod "downwardapi-volume-3697435a-b994-4a07-a46e-024eaa72db7c" satisfied condition "Succeeded or Failed"
Jul  3 00:29:04.285: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-3697435a-b994-4a07-a46e-024eaa72db7c container client-container: <nil>
STEP: delete the pod
Jul  3 00:29:04.306: INFO: Waiting for pod downwardapi-volume-3697435a-b994-4a07-a46e-024eaa72db7c to disappear
Jul  3 00:29:04.308: INFO: Pod downwardapi-volume-3697435a-b994-4a07-a46e-024eaa72db7c no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul  3 00:29:04.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8871" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":158,"skipped":2826,"failed":0}
SS
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:29:04.317: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7262
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jul  3 00:29:04.455: INFO: The status of Pod annotationupdate9f7f59e2-d43b-4b16-b64d-0b18e1958612 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:29:06.460: INFO: The status of Pod annotationupdate9f7f59e2-d43b-4b16-b64d-0b18e1958612 is Running (Ready = true)
Jul  3 00:29:06.986: INFO: Successfully updated pod "annotationupdate9f7f59e2-d43b-4b16-b64d-0b18e1958612"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul  3 00:29:11.017: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7262" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":159,"skipped":2828,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:29:11.028: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2761
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name projected-secret-test-9860bc22-2580-4c63-bb2f-46d203b93315
STEP: Creating a pod to test consume secrets
Jul  3 00:29:11.172: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-acb1999d-ea8b-43d4-9241-478a25f6e918" in namespace "projected-2761" to be "Succeeded or Failed"
Jul  3 00:29:11.176: INFO: Pod "pod-projected-secrets-acb1999d-ea8b-43d4-9241-478a25f6e918": Phase="Pending", Reason="", readiness=false. Elapsed: 3.875251ms
Jul  3 00:29:13.180: INFO: Pod "pod-projected-secrets-acb1999d-ea8b-43d4-9241-478a25f6e918": Phase="Running", Reason="", readiness=false. Elapsed: 2.008696573s
Jul  3 00:29:15.184: INFO: Pod "pod-projected-secrets-acb1999d-ea8b-43d4-9241-478a25f6e918": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012665787s
STEP: Saw pod success
Jul  3 00:29:15.184: INFO: Pod "pod-projected-secrets-acb1999d-ea8b-43d4-9241-478a25f6e918" satisfied condition "Succeeded or Failed"
Jul  3 00:29:15.187: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-secrets-acb1999d-ea8b-43d4-9241-478a25f6e918 container secret-volume-test: <nil>
STEP: delete the pod
Jul  3 00:29:15.201: INFO: Waiting for pod pod-projected-secrets-acb1999d-ea8b-43d4-9241-478a25f6e918 to disappear
Jul  3 00:29:15.203: INFO: Pod pod-projected-secrets-acb1999d-ea8b-43d4-9241-478a25f6e918 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul  3 00:29:15.203: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2761" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":160,"skipped":2840,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:29:15.211: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-779
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:29:15.344: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8849349a-853d-4ac8-bc5a-7958d3379560" in namespace "projected-779" to be "Succeeded or Failed"
Jul  3 00:29:15.347: INFO: Pod "downwardapi-volume-8849349a-853d-4ac8-bc5a-7958d3379560": Phase="Pending", Reason="", readiness=false. Elapsed: 2.771342ms
Jul  3 00:29:17.353: INFO: Pod "downwardapi-volume-8849349a-853d-4ac8-bc5a-7958d3379560": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008566733s
Jul  3 00:29:19.358: INFO: Pod "downwardapi-volume-8849349a-853d-4ac8-bc5a-7958d3379560": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013927304s
STEP: Saw pod success
Jul  3 00:29:19.358: INFO: Pod "downwardapi-volume-8849349a-853d-4ac8-bc5a-7958d3379560" satisfied condition "Succeeded or Failed"
Jul  3 00:29:19.362: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-8849349a-853d-4ac8-bc5a-7958d3379560 container client-container: <nil>
STEP: delete the pod
Jul  3 00:29:19.379: INFO: Waiting for pod downwardapi-volume-8849349a-853d-4ac8-bc5a-7958d3379560 to disappear
Jul  3 00:29:19.382: INFO: Pod downwardapi-volume-8849349a-853d-4ac8-bc5a-7958d3379560 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul  3 00:29:19.382: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-779" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":161,"skipped":2864,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:29:19.392: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7528
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Jul  3 00:29:19.537: INFO: Waiting up to 5m0s for pod "pod-d09ddf08-75ff-43fd-9ad4-add1fd99e0e5" in namespace "emptydir-7528" to be "Succeeded or Failed"
Jul  3 00:29:19.542: INFO: Pod "pod-d09ddf08-75ff-43fd-9ad4-add1fd99e0e5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.945971ms
Jul  3 00:29:21.547: INFO: Pod "pod-d09ddf08-75ff-43fd-9ad4-add1fd99e0e5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009700657s
Jul  3 00:29:23.552: INFO: Pod "pod-d09ddf08-75ff-43fd-9ad4-add1fd99e0e5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01499082s
STEP: Saw pod success
Jul  3 00:29:23.552: INFO: Pod "pod-d09ddf08-75ff-43fd-9ad4-add1fd99e0e5" satisfied condition "Succeeded or Failed"
Jul  3 00:29:23.575: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-d09ddf08-75ff-43fd-9ad4-add1fd99e0e5 container test-container: <nil>
STEP: delete the pod
Jul  3 00:29:23.605: INFO: Waiting for pod pod-d09ddf08-75ff-43fd-9ad4-add1fd99e0e5 to disappear
Jul  3 00:29:23.609: INFO: Pod pod-d09ddf08-75ff-43fd-9ad4-add1fd99e0e5 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 00:29:23.609: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7528" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":162,"skipped":2947,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:29:23.619: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-4506
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jul  3 00:29:23.763: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:29:25.768: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jul  3 00:29:25.782: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:29:27.787: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Jul  3 00:29:27.794: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jul  3 00:29:27.797: INFO: Pod pod-with-prestop-exec-hook still exists
Jul  3 00:29:29.798: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jul  3 00:29:29.802: INFO: Pod pod-with-prestop-exec-hook still exists
Jul  3 00:29:31.798: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jul  3 00:29:31.802: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jul  3 00:29:31.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-4506" for this suite.
•{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":356,"completed":163,"skipped":2982,"failed":0}
SSSSSSS
------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:29:31.821: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename limitrange
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in limitrange-5143
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
Jul  3 00:29:31.950: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
Jul  3 00:29:31.955: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jul  3 00:29:31.955: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
Jul  3 00:29:31.965: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jul  3 00:29:31.965: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
Jul  3 00:29:31.975: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Jul  3 00:29:31.975: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
Jul  3 00:29:39.018: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:188
Jul  3 00:29:39.027: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-5143" for this suite.
•{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":356,"completed":164,"skipped":2989,"failed":0}

------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:29:39.036: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-670
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jul  3 00:29:39.183: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-670" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":356,"completed":165,"skipped":2989,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:29:39.190: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4900
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:29:39.322: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6a60ede1-895b-4787-9309-9e2be3b335a6" in namespace "projected-4900" to be "Succeeded or Failed"
Jul  3 00:29:39.325: INFO: Pod "downwardapi-volume-6a60ede1-895b-4787-9309-9e2be3b335a6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.631105ms
Jul  3 00:29:41.329: INFO: Pod "downwardapi-volume-6a60ede1-895b-4787-9309-9e2be3b335a6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006748902s
Jul  3 00:29:43.333: INFO: Pod "downwardapi-volume-6a60ede1-895b-4787-9309-9e2be3b335a6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011149522s
STEP: Saw pod success
Jul  3 00:29:43.335: INFO: Pod "downwardapi-volume-6a60ede1-895b-4787-9309-9e2be3b335a6" satisfied condition "Succeeded or Failed"
Jul  3 00:29:43.338: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-6a60ede1-895b-4787-9309-9e2be3b335a6 container client-container: <nil>
STEP: delete the pod
Jul  3 00:29:43.353: INFO: Waiting for pod downwardapi-volume-6a60ede1-895b-4787-9309-9e2be3b335a6 to disappear
Jul  3 00:29:43.356: INFO: Pod downwardapi-volume-6a60ede1-895b-4787-9309-9e2be3b335a6 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul  3 00:29:43.356: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4900" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":166,"skipped":2997,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:29:43.367: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6248
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-ce5b8f96-38f9-4a3f-8b73-2852050ecbc0
STEP: Creating a pod to test consume secrets
Jul  3 00:29:43.509: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-0bddfc6a-bb83-4442-8242-b6565826bb5a" in namespace "projected-6248" to be "Succeeded or Failed"
Jul  3 00:29:43.511: INFO: Pod "pod-projected-secrets-0bddfc6a-bb83-4442-8242-b6565826bb5a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.569707ms
Jul  3 00:29:45.515: INFO: Pod "pod-projected-secrets-0bddfc6a-bb83-4442-8242-b6565826bb5a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006666969s
Jul  3 00:29:47.520: INFO: Pod "pod-projected-secrets-0bddfc6a-bb83-4442-8242-b6565826bb5a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011298022s
STEP: Saw pod success
Jul  3 00:29:47.520: INFO: Pod "pod-projected-secrets-0bddfc6a-bb83-4442-8242-b6565826bb5a" satisfied condition "Succeeded or Failed"
Jul  3 00:29:47.523: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-secrets-0bddfc6a-bb83-4442-8242-b6565826bb5a container projected-secret-volume-test: <nil>
STEP: delete the pod
Jul  3 00:29:47.541: INFO: Waiting for pod pod-projected-secrets-0bddfc6a-bb83-4442-8242-b6565826bb5a to disappear
Jul  3 00:29:47.544: INFO: Pod pod-projected-secrets-0bddfc6a-bb83-4442-8242-b6565826bb5a no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul  3 00:29:47.544: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6248" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":167,"skipped":3054,"failed":0}
SSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:29:47.555: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename taint-single-pod
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-single-pod-8438
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:166
Jul  3 00:29:47.679: INFO: Waiting up to 1m0s for all nodes to be ready
Jul  3 00:30:47.716: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:30:47.719: INFO: Starting informer...
STEP: Starting pod...
Jul  3 00:30:47.939: INFO: Pod is running on shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
Jul  3 00:30:47.958: INFO: Pod wasn't evicted. Proceeding
Jul  3 00:30:47.958: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
Jul  3 00:32:02.977: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:32:02.977: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-8438" for this suite.
•{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":356,"completed":168,"skipped":3061,"failed":0}
S
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:32:02.989: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3068
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Jul  3 00:32:03.129: INFO: Waiting up to 5m0s for pod "pod-adb35706-5d33-4c01-afb6-45053d4518b1" in namespace "emptydir-3068" to be "Succeeded or Failed"
Jul  3 00:32:03.134: INFO: Pod "pod-adb35706-5d33-4c01-afb6-45053d4518b1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.011905ms
Jul  3 00:32:05.141: INFO: Pod "pod-adb35706-5d33-4c01-afb6-45053d4518b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012126099s
Jul  3 00:32:07.146: INFO: Pod "pod-adb35706-5d33-4c01-afb6-45053d4518b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017684687s
STEP: Saw pod success
Jul  3 00:32:07.146: INFO: Pod "pod-adb35706-5d33-4c01-afb6-45053d4518b1" satisfied condition "Succeeded or Failed"
Jul  3 00:32:07.150: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-adb35706-5d33-4c01-afb6-45053d4518b1 container test-container: <nil>
STEP: delete the pod
Jul  3 00:32:07.171: INFO: Waiting for pod pod-adb35706-5d33-4c01-afb6-45053d4518b1 to disappear
Jul  3 00:32:07.174: INFO: Pod pod-adb35706-5d33-4c01-afb6-45053d4518b1 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 00:32:07.174: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3068" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":169,"skipped":3062,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:32:07.184: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-1103
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:32:07.326: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-ab247178-6c18-4417-b435-eb202b414ec7" in namespace "security-context-test-1103" to be "Succeeded or Failed"
Jul  3 00:32:07.330: INFO: Pod "busybox-readonly-false-ab247178-6c18-4417-b435-eb202b414ec7": Phase="Pending", Reason="", readiness=false. Elapsed: 3.413536ms
Jul  3 00:32:09.335: INFO: Pod "busybox-readonly-false-ab247178-6c18-4417-b435-eb202b414ec7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008519498s
Jul  3 00:32:11.340: INFO: Pod "busybox-readonly-false-ab247178-6c18-4417-b435-eb202b414ec7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013256276s
Jul  3 00:32:11.340: INFO: Pod "busybox-readonly-false-ab247178-6c18-4417-b435-eb202b414ec7" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jul  3 00:32:11.340: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-1103" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":356,"completed":170,"skipped":3080,"failed":0}
SSS
------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:32:11.351: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4071
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 00:32:11.510: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4071" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":356,"completed":171,"skipped":3083,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:32:11.519: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1321
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:32:12.067: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:32:15.090: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:32:15.094: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6264-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:32:18.368: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1321" for this suite.
STEP: Destroying namespace "webhook-1321-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":356,"completed":172,"skipped":3097,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:32:18.407: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9173
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Jul  3 00:32:18.547: INFO: Waiting up to 5m0s for pod "pod-7bf458c6-95c2-43e3-a2fc-26ccd1ba01a0" in namespace "emptydir-9173" to be "Succeeded or Failed"
Jul  3 00:32:18.551: INFO: Pod "pod-7bf458c6-95c2-43e3-a2fc-26ccd1ba01a0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.052548ms
Jul  3 00:32:20.556: INFO: Pod "pod-7bf458c6-95c2-43e3-a2fc-26ccd1ba01a0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009799245s
Jul  3 00:32:22.561: INFO: Pod "pod-7bf458c6-95c2-43e3-a2fc-26ccd1ba01a0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014699852s
STEP: Saw pod success
Jul  3 00:32:22.561: INFO: Pod "pod-7bf458c6-95c2-43e3-a2fc-26ccd1ba01a0" satisfied condition "Succeeded or Failed"
Jul  3 00:32:22.565: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-7bf458c6-95c2-43e3-a2fc-26ccd1ba01a0 container test-container: <nil>
STEP: delete the pod
Jul  3 00:32:22.583: INFO: Waiting for pod pod-7bf458c6-95c2-43e3-a2fc-26ccd1ba01a0 to disappear
Jul  3 00:32:22.586: INFO: Pod pod-7bf458c6-95c2-43e3-a2fc-26ccd1ba01a0 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 00:32:22.586: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9173" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":173,"skipped":3147,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:32:22.596: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-1302
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
Jul  3 00:32:22.757: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1302  79597db6-9d93-48ef-a6c0-8db79d53d0fa 22292 0 2022-07-03 00:32:22 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-07-03 00:32:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:32:22.757: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1302  79597db6-9d93-48ef-a6c0-8db79d53d0fa 22293 0 2022-07-03 00:32:22 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-07-03 00:32:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jul  3 00:32:22.757: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-1302" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":356,"completed":174,"skipped":3158,"failed":0}
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:32:22.766: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-3845
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:32:22.927: INFO: The status of Pod pod-secrets-bd511b67-6536-4b42-8d81-269ad5e03f2e is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:32:24.934: INFO: The status of Pod pod-secrets-bd511b67-6536-4b42-8d81-269ad5e03f2e is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Jul  3 00:32:24.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-3845" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":356,"completed":175,"skipped":3164,"failed":0}
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:32:24.964: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-3258
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-3258
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Jul  3 00:32:25.118: INFO: Found 0 stateful pods, waiting for 3
Jul  3 00:32:35.124: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jul  3 00:32:35.124: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jul  3 00:32:35.124: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Jul  3 00:32:35.134: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-3258 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul  3 00:32:35.447: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul  3 00:32:35.447: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul  3 00:32:35.447: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Jul  3 00:32:45.490: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
Jul  3 00:32:55.513: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-3258 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul  3 00:32:55.748: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul  3 00:32:55.748: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul  3 00:32:55.748: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision
Jul  3 00:33:15.771: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-3258 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul  3 00:33:16.124: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul  3 00:33:16.124: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul  3 00:33:16.124: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul  3 00:33:26.160: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
Jul  3 00:33:36.180: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-3258 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul  3 00:33:36.415: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul  3 00:33:36.415: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul  3 00:33:36.415: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul  3 00:33:46.439: INFO: Deleting all statefulset in ns statefulset-3258
Jul  3 00:33:46.443: INFO: Scaling statefulset ss2 to 0
Jul  3 00:33:56.459: INFO: Waiting for statefulset status.replicas updated to 0
Jul  3 00:33:56.463: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul  3 00:33:56.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-3258" for this suite.
•{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":356,"completed":176,"skipped":3168,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:33:56.490: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-2007
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:33:56.634: INFO: created pod pod-service-account-defaultsa
Jul  3 00:33:56.634: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Jul  3 00:33:56.642: INFO: created pod pod-service-account-mountsa
Jul  3 00:33:56.642: INFO: pod pod-service-account-mountsa service account token volume mount: true
Jul  3 00:33:56.648: INFO: created pod pod-service-account-nomountsa
Jul  3 00:33:56.648: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Jul  3 00:33:56.655: INFO: created pod pod-service-account-defaultsa-mountspec
Jul  3 00:33:56.655: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Jul  3 00:33:56.663: INFO: created pod pod-service-account-mountsa-mountspec
Jul  3 00:33:56.664: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Jul  3 00:33:56.671: INFO: created pod pod-service-account-nomountsa-mountspec
Jul  3 00:33:56.671: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Jul  3 00:33:56.677: INFO: created pod pod-service-account-defaultsa-nomountspec
Jul  3 00:33:56.677: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Jul  3 00:33:56.684: INFO: created pod pod-service-account-mountsa-nomountspec
Jul  3 00:33:56.684: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Jul  3 00:33:56.690: INFO: created pod pod-service-account-nomountsa-nomountspec
Jul  3 00:33:56.690: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jul  3 00:33:56.690: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-2007" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":356,"completed":177,"skipped":3202,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:33:56.699: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename hostport
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in hostport-3425
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
Jul  3 00:33:56.843: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:33:58.849: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.250.2.84 on the node which pod1 resides and expect scheduled
Jul  3 00:33:58.862: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:34:00.868: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.250.2.84 but use UDP protocol on the node which pod2 resides
Jul  3 00:34:00.880: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:34:02.885: INFO: The status of Pod pod3 is Running (Ready = true)
Jul  3 00:34:02.897: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:34:04.901: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
Jul  3 00:34:04.904: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.250.2.84 http://127.0.0.1:54323/hostname] Namespace:hostport-3425 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:34:04.904: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:34:04.905: INFO: ExecWithOptions: Clientset creation
Jul  3 00:34:04.905: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/hostport-3425/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.250.2.84+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.250.2.84, port: 54323
Jul  3 00:34:05.087: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.250.2.84:54323/hostname] Namespace:hostport-3425 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:34:05.087: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:34:05.087: INFO: ExecWithOptions: Clientset creation
Jul  3 00:34:05.087: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/hostport-3425/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.250.2.84%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.250.2.84, port: 54323 UDP
Jul  3 00:34:05.310: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 10.250.2.84 54323] Namespace:hostport-3425 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:34:05.310: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:34:05.311: INFO: ExecWithOptions: Clientset creation
Jul  3 00:34:05.311: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/hostport-3425/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+10.250.2.84+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/framework.go:188
Jul  3 00:34:10.525: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-3425" for this suite.
•{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":356,"completed":178,"skipped":3236,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:34:10.536: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-4384
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
Jul  3 00:34:11.714: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0703 00:34:11.714251    4513 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul  3 00:34:11.714: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-4384" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":356,"completed":179,"skipped":3245,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:34:11.722: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-221
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override arguments
Jul  3 00:34:11.861: INFO: Waiting up to 5m0s for pod "client-containers-566d94ac-2116-435e-a594-41d3a38cf1dc" in namespace "containers-221" to be "Succeeded or Failed"
Jul  3 00:34:11.864: INFO: Pod "client-containers-566d94ac-2116-435e-a594-41d3a38cf1dc": Phase="Pending", Reason="", readiness=false. Elapsed: 3.728721ms
Jul  3 00:34:13.869: INFO: Pod "client-containers-566d94ac-2116-435e-a594-41d3a38cf1dc": Phase="Running", Reason="", readiness=false. Elapsed: 2.008840904s
Jul  3 00:34:15.875: INFO: Pod "client-containers-566d94ac-2116-435e-a594-41d3a38cf1dc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014090139s
STEP: Saw pod success
Jul  3 00:34:15.875: INFO: Pod "client-containers-566d94ac-2116-435e-a594-41d3a38cf1dc" satisfied condition "Succeeded or Failed"
Jul  3 00:34:15.878: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod client-containers-566d94ac-2116-435e-a594-41d3a38cf1dc container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:34:15.894: INFO: Waiting for pod client-containers-566d94ac-2116-435e-a594-41d3a38cf1dc to disappear
Jul  3 00:34:15.899: INFO: Pod client-containers-566d94ac-2116-435e-a594-41d3a38cf1dc no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jul  3 00:34:15.899: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-221" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]","total":356,"completed":180,"skipped":3259,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:34:15.909: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename crd-watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-watch-6707
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:34:16.037: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Creating first CR 
Jul  3 00:34:18.594: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-07-03T00:34:18Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-07-03T00:34:18Z]] name:name1 resourceVersion:23316 uid:55e73713-6017-4e85-9667-b36d0a1cf1d4] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
Jul  3 00:34:28.599: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-07-03T00:34:28Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-07-03T00:34:28Z]] name:name2 resourceVersion:23367 uid:bf8144fc-2f98-4635-89dc-fdaff073cbff] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
Jul  3 00:34:38.605: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-07-03T00:34:18Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-07-03T00:34:38Z]] name:name1 resourceVersion:23411 uid:55e73713-6017-4e85-9667-b36d0a1cf1d4] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
Jul  3 00:34:48.611: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-07-03T00:34:28Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-07-03T00:34:48Z]] name:name2 resourceVersion:23454 uid:bf8144fc-2f98-4635-89dc-fdaff073cbff] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
Jul  3 00:34:58.618: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-07-03T00:34:18Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-07-03T00:34:38Z]] name:name1 resourceVersion:23495 uid:55e73713-6017-4e85-9667-b36d0a1cf1d4] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
Jul  3 00:35:08.624: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-07-03T00:34:28Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-07-03T00:34:48Z]] name:name2 resourceVersion:23566 uid:bf8144fc-2f98-4635-89dc-fdaff073cbff] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:35:19.136: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-6707" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":356,"completed":181,"skipped":3327,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:35:19.146: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-2816
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a pod template
STEP: Replace a pod template
Jul  3 00:35:19.288: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jul  3 00:35:19.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-2816" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should replace a pod template [Conformance]","total":356,"completed":182,"skipped":3340,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:35:19.297: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-6027
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
Jul  3 00:35:19.437: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6027  659074a0-25ff-49a6-86d9-7708461ed823 23631 0 2022-07-03 00:35:19 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-07-03 00:35:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:35:19.437: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6027  659074a0-25ff-49a6-86d9-7708461ed823 23632 0 2022-07-03 00:35:19 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-07-03 00:35:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
Jul  3 00:35:19.451: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6027  659074a0-25ff-49a6-86d9-7708461ed823 23633 0 2022-07-03 00:35:19 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-07-03 00:35:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:35:19.451: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6027  659074a0-25ff-49a6-86d9-7708461ed823 23634 0 2022-07-03 00:35:19 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-07-03 00:35:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jul  3 00:35:19.451: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-6027" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":356,"completed":183,"skipped":3365,"failed":0}
SSS
------------------------------
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:35:19.460: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-3899
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pod templates
Jul  3 00:35:19.595: INFO: created test-podtemplate-1
Jul  3 00:35:19.598: INFO: created test-podtemplate-2
Jul  3 00:35:19.602: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
Jul  3 00:35:19.606: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
Jul  3 00:35:19.613: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jul  3 00:35:19.616: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-3899" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":356,"completed":184,"skipped":3368,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:35:19.626: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4937
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service nodeport-service with the type=NodePort in namespace services-4937
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-4937
STEP: creating replication controller externalsvc in namespace services-4937
I0703 00:35:19.784862    4513 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4937, replica count: 2
I0703 00:35:22.837580    4513 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
Jul  3 00:35:22.855: INFO: Creating new exec pod
Jul  3 00:35:24.871: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-4937 exec execpod7qmmk -- /bin/sh -x -c nslookup nodeport-service.services-4937.svc.cluster.local'
Jul  3 00:35:25.136: INFO: stderr: "+ nslookup nodeport-service.services-4937.svc.cluster.local\n"
Jul  3 00:35:25.136: INFO: stdout: "Server:\t\t100.104.0.10\nAddress:\t100.104.0.10#53\n\nnodeport-service.services-4937.svc.cluster.local\tcanonical name = externalsvc.services-4937.svc.cluster.local.\nName:\texternalsvc.services-4937.svc.cluster.local\nAddress: 100.107.36.78\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-4937, will wait for the garbage collector to delete the pods
Jul  3 00:35:25.196: INFO: Deleting ReplicationController externalsvc took: 5.64356ms
Jul  3 00:35:25.296: INFO: Terminating ReplicationController externalsvc pods took: 100.351939ms
Jul  3 00:35:27.007: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 00:35:27.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4937" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":356,"completed":185,"skipped":3425,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:35:27.023: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-7570
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
Jul  3 00:35:37.196: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0703 00:35:37.196529    4513 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul  3 00:35:37.196: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-7570" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":356,"completed":186,"skipped":3438,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:35:37.206: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-6902
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-6941
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-8097
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:35:43.606: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-6902" for this suite.
STEP: Destroying namespace "nsdeletetest-6941" for this suite.
Jul  3 00:35:43.619: INFO: Namespace nsdeletetest-6941 was already deleted
STEP: Destroying namespace "nsdeletetest-8097" for this suite.
•{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":356,"completed":187,"skipped":3460,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:35:43.624: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-95
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
Jul  3 00:35:44.079: INFO: Pod name wrapped-volume-race-6a6b9a8c-04b7-4410-91af-7a3715ed1406: Found 1 pods out of 5
Jul  3 00:35:49.092: INFO: Pod name wrapped-volume-race-6a6b9a8c-04b7-4410-91af-7a3715ed1406: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-6a6b9a8c-04b7-4410-91af-7a3715ed1406 in namespace emptydir-wrapper-95, will wait for the garbage collector to delete the pods
Jul  3 00:35:49.173: INFO: Deleting ReplicationController wrapped-volume-race-6a6b9a8c-04b7-4410-91af-7a3715ed1406 took: 6.049355ms
Jul  3 00:35:49.274: INFO: Terminating ReplicationController wrapped-volume-race-6a6b9a8c-04b7-4410-91af-7a3715ed1406 pods took: 100.635404ms
STEP: Creating RC which spawns configmap-volume pods
Jul  3 00:35:50.990: INFO: Pod name wrapped-volume-race-2676f137-cd5a-4975-8000-f143dec1cf5e: Found 0 pods out of 5
Jul  3 00:35:56.001: INFO: Pod name wrapped-volume-race-2676f137-cd5a-4975-8000-f143dec1cf5e: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-2676f137-cd5a-4975-8000-f143dec1cf5e in namespace emptydir-wrapper-95, will wait for the garbage collector to delete the pods
Jul  3 00:35:56.086: INFO: Deleting ReplicationController wrapped-volume-race-2676f137-cd5a-4975-8000-f143dec1cf5e took: 8.800425ms
Jul  3 00:35:56.186: INFO: Terminating ReplicationController wrapped-volume-race-2676f137-cd5a-4975-8000-f143dec1cf5e pods took: 100.190911ms
STEP: Creating RC which spawns configmap-volume pods
Jul  3 00:35:57.404: INFO: Pod name wrapped-volume-race-3a00c7a1-7bd8-455a-a9c4-52095766cc5c: Found 0 pods out of 5
Jul  3 00:36:02.417: INFO: Pod name wrapped-volume-race-3a00c7a1-7bd8-455a-a9c4-52095766cc5c: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-3a00c7a1-7bd8-455a-a9c4-52095766cc5c in namespace emptydir-wrapper-95, will wait for the garbage collector to delete the pods
Jul  3 00:36:02.497: INFO: Deleting ReplicationController wrapped-volume-race-3a00c7a1-7bd8-455a-a9c4-52095766cc5c took: 5.467017ms
Jul  3 00:36:02.598: INFO: Terminating ReplicationController wrapped-volume-race-3a00c7a1-7bd8-455a-a9c4-52095766cc5c pods took: 100.285714ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Jul  3 00:36:04.307: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-95" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":356,"completed":188,"skipped":3537,"failed":0}
SS
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:36:04.316: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-4328
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
Jul  3 00:36:06.996: INFO: Successfully updated pod "adopt-release-f7brb"
STEP: Checking that the Job readopts the Pod
Jul  3 00:36:06.996: INFO: Waiting up to 15m0s for pod "adopt-release-f7brb" in namespace "job-4328" to be "adopted"
Jul  3 00:36:06.999: INFO: Pod "adopt-release-f7brb": Phase="Running", Reason="", readiness=true. Elapsed: 3.351623ms
Jul  3 00:36:09.003: INFO: Pod "adopt-release-f7brb": Phase="Running", Reason="", readiness=true. Elapsed: 2.007565927s
Jul  3 00:36:09.003: INFO: Pod "adopt-release-f7brb" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
Jul  3 00:36:09.517: INFO: Successfully updated pod "adopt-release-f7brb"
STEP: Checking that the Job releases the Pod
Jul  3 00:36:09.517: INFO: Waiting up to 15m0s for pod "adopt-release-f7brb" in namespace "job-4328" to be "released"
Jul  3 00:36:09.521: INFO: Pod "adopt-release-f7brb": Phase="Running", Reason="", readiness=true. Elapsed: 3.945589ms
Jul  3 00:36:11.527: INFO: Pod "adopt-release-f7brb": Phase="Running", Reason="", readiness=true. Elapsed: 2.009845095s
Jul  3 00:36:11.527: INFO: Pod "adopt-release-f7brb" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jul  3 00:36:11.527: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-4328" for this suite.
•{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":356,"completed":189,"skipped":3539,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:36:11.537: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-727
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
Jul  3 00:36:11.688: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
Jul  3 00:36:11.707: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jul  3 00:36:11.726: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-727" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":356,"completed":190,"skipped":3560,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:36:11.734: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-1058
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-1058
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-1058
Jul  3 00:36:11.880: INFO: Found 0 stateful pods, waiting for 1
Jul  3 00:36:21.885: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
Jul  3 00:36:21.900: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
Jul  3 00:36:21.909: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
Jul  3 00:36:21.911: INFO: Observed &StatefulSet event: ADDED
Jul  3 00:36:21.912: INFO: Found Statefulset ss in namespace statefulset-1058 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jul  3 00:36:21.912: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
Jul  3 00:36:21.912: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jul  3 00:36:21.917: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
Jul  3 00:36:21.920: INFO: Observed &StatefulSet event: ADDED
Jul  3 00:36:21.920: INFO: Observed Statefulset ss in namespace statefulset-1058 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jul  3 00:36:21.920: INFO: Observed &StatefulSet event: MODIFIED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul  3 00:36:21.920: INFO: Deleting all statefulset in ns statefulset-1058
Jul  3 00:36:21.923: INFO: Scaling statefulset ss to 0
Jul  3 00:36:31.941: INFO: Waiting for statefulset status.replicas updated to 0
Jul  3 00:36:31.944: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul  3 00:36:31.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-1058" for this suite.
•{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":356,"completed":191,"skipped":3583,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:36:31.964: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-9356
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's command
Jul  3 00:36:32.104: INFO: Waiting up to 5m0s for pod "var-expansion-c56063cc-2913-4df9-8df3-7a1c58a52865" in namespace "var-expansion-9356" to be "Succeeded or Failed"
Jul  3 00:36:32.108: INFO: Pod "var-expansion-c56063cc-2913-4df9-8df3-7a1c58a52865": Phase="Pending", Reason="", readiness=false. Elapsed: 3.485778ms
Jul  3 00:36:34.112: INFO: Pod "var-expansion-c56063cc-2913-4df9-8df3-7a1c58a52865": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008154207s
Jul  3 00:36:36.117: INFO: Pod "var-expansion-c56063cc-2913-4df9-8df3-7a1c58a52865": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012369721s
STEP: Saw pod success
Jul  3 00:36:36.117: INFO: Pod "var-expansion-c56063cc-2913-4df9-8df3-7a1c58a52865" satisfied condition "Succeeded or Failed"
Jul  3 00:36:36.120: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod var-expansion-c56063cc-2913-4df9-8df3-7a1c58a52865 container dapi-container: <nil>
STEP: delete the pod
Jul  3 00:36:36.178: INFO: Waiting for pod var-expansion-c56063cc-2913-4df9-8df3-7a1c58a52865 to disappear
Jul  3 00:36:36.182: INFO: Pod var-expansion-c56063cc-2913-4df9-8df3-7a1c58a52865 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul  3 00:36:36.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-9356" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":356,"completed":192,"skipped":3596,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] Job 
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:36:36.191: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-6979
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-6979, will wait for the garbage collector to delete the pods
Jul  3 00:36:38.389: INFO: Deleting Job.batch foo took: 5.827027ms
Jul  3 00:36:38.490: INFO: Terminating Job.batch foo pods took: 100.656209ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jul  3 00:37:11.194: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-6979" for this suite.
•{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":356,"completed":193,"skipped":3606,"failed":0}
SS
------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:37:11.204: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-1980
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jul  3 00:37:11.357: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jul  3 00:37:11.362: INFO: starting watch
STEP: patching
STEP: updating
Jul  3 00:37:11.375: INFO: waiting for watch events with expected annotations
Jul  3 00:37:11.375: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jul  3 00:37:11.396: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-1980" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":356,"completed":194,"skipped":3608,"failed":0}
S
------------------------------
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:37:11.403: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8616
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on tmpfs
Jul  3 00:37:11.539: INFO: Waiting up to 5m0s for pod "pod-e9512a91-62ee-4a90-8b97-c9d2ccf1fcdb" in namespace "emptydir-8616" to be "Succeeded or Failed"
Jul  3 00:37:11.545: INFO: Pod "pod-e9512a91-62ee-4a90-8b97-c9d2ccf1fcdb": Phase="Pending", Reason="", readiness=false. Elapsed: 5.650409ms
Jul  3 00:37:13.550: INFO: Pod "pod-e9512a91-62ee-4a90-8b97-c9d2ccf1fcdb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011476068s
Jul  3 00:37:15.555: INFO: Pod "pod-e9512a91-62ee-4a90-8b97-c9d2ccf1fcdb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016322854s
STEP: Saw pod success
Jul  3 00:37:15.555: INFO: Pod "pod-e9512a91-62ee-4a90-8b97-c9d2ccf1fcdb" satisfied condition "Succeeded or Failed"
Jul  3 00:37:15.559: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-e9512a91-62ee-4a90-8b97-c9d2ccf1fcdb container test-container: <nil>
STEP: delete the pod
Jul  3 00:37:15.579: INFO: Waiting for pod pod-e9512a91-62ee-4a90-8b97-c9d2ccf1fcdb to disappear
Jul  3 00:37:15.582: INFO: Pod pod-e9512a91-62ee-4a90-8b97-c9d2ccf1fcdb no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 00:37:15.582: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8616" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":195,"skipped":3609,"failed":0}
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:37:15.592: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-6452
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-6452
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Jul  3 00:37:15.734: INFO: Found 0 stateful pods, waiting for 3
Jul  3 00:37:25.741: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jul  3 00:37:25.741: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jul  3 00:37:25.741: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Jul  3 00:37:25.772: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
Jul  3 00:37:35.806: INFO: Updating stateful set ss2
Jul  3 00:37:35.813: INFO: Waiting for Pod statefulset-6452/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
Jul  3 00:37:45.838: INFO: Found 1 stateful pods, waiting for 3
Jul  3 00:37:55.844: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jul  3 00:37:55.844: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jul  3 00:37:55.844: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
Jul  3 00:37:55.870: INFO: Updating stateful set ss2
Jul  3 00:37:55.878: INFO: Waiting for Pod statefulset-6452/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Jul  3 00:38:05.906: INFO: Updating stateful set ss2
Jul  3 00:38:05.912: INFO: Waiting for StatefulSet statefulset-6452/ss2 to complete update
Jul  3 00:38:05.912: INFO: Waiting for Pod statefulset-6452/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul  3 00:38:15.923: INFO: Deleting all statefulset in ns statefulset-6452
Jul  3 00:38:15.926: INFO: Scaling statefulset ss2 to 0
Jul  3 00:38:25.944: INFO: Waiting for statefulset status.replicas updated to 0
Jul  3 00:38:25.948: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul  3 00:38:25.958: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-6452" for this suite.
•{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":356,"completed":196,"skipped":3611,"failed":0}
SSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:38:25.968: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9345
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-03da5ea5-1923-41a0-9904-a2c5f0174f52
STEP: Creating a pod to test consume configMaps
Jul  3 00:38:26.110: INFO: Waiting up to 5m0s for pod "pod-configmaps-9322493f-24c9-4095-a896-7e8acf5007fa" in namespace "configmap-9345" to be "Succeeded or Failed"
Jul  3 00:38:26.114: INFO: Pod "pod-configmaps-9322493f-24c9-4095-a896-7e8acf5007fa": Phase="Pending", Reason="", readiness=false. Elapsed: 3.285902ms
Jul  3 00:38:28.119: INFO: Pod "pod-configmaps-9322493f-24c9-4095-a896-7e8acf5007fa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00875208s
Jul  3 00:38:30.123: INFO: Pod "pod-configmaps-9322493f-24c9-4095-a896-7e8acf5007fa": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013009851s
STEP: Saw pod success
Jul  3 00:38:30.123: INFO: Pod "pod-configmaps-9322493f-24c9-4095-a896-7e8acf5007fa" satisfied condition "Succeeded or Failed"
Jul  3 00:38:30.127: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-configmaps-9322493f-24c9-4095-a896-7e8acf5007fa container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:38:30.186: INFO: Waiting for pod pod-configmaps-9322493f-24c9-4095-a896-7e8acf5007fa to disappear
Jul  3 00:38:30.189: INFO: Pod pod-configmaps-9322493f-24c9-4095-a896-7e8acf5007fa no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 00:38:30.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9345" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":197,"skipped":3616,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:38:30.199: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9210
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jul  3 00:38:30.339: INFO: Waiting up to 5m0s for pod "downward-api-5cf52413-b1f0-45e1-ba14-4c6880a097da" in namespace "downward-api-9210" to be "Succeeded or Failed"
Jul  3 00:38:30.343: INFO: Pod "downward-api-5cf52413-b1f0-45e1-ba14-4c6880a097da": Phase="Pending", Reason="", readiness=false. Elapsed: 3.299503ms
Jul  3 00:38:32.347: INFO: Pod "downward-api-5cf52413-b1f0-45e1-ba14-4c6880a097da": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007496017s
Jul  3 00:38:34.351: INFO: Pod "downward-api-5cf52413-b1f0-45e1-ba14-4c6880a097da": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012131322s
STEP: Saw pod success
Jul  3 00:38:34.351: INFO: Pod "downward-api-5cf52413-b1f0-45e1-ba14-4c6880a097da" satisfied condition "Succeeded or Failed"
Jul  3 00:38:34.355: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downward-api-5cf52413-b1f0-45e1-ba14-4c6880a097da container dapi-container: <nil>
STEP: delete the pod
Jul  3 00:38:34.372: INFO: Waiting for pod downward-api-5cf52413-b1f0-45e1-ba14-4c6880a097da to disappear
Jul  3 00:38:34.375: INFO: Pod downward-api-5cf52413-b1f0-45e1-ba14-4c6880a097da no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jul  3 00:38:34.375: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9210" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":356,"completed":198,"skipped":3675,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:38:34.385: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-910
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jul  3 00:38:34.530: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:38:36.536: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jul  3 00:38:36.552: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:38:38.557: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Jul  3 00:38:38.616: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jul  3 00:38:38.620: INFO: Pod pod-with-poststart-http-hook still exists
Jul  3 00:38:40.621: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jul  3 00:38:40.625: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jul  3 00:38:40.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-910" for this suite.
•{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":356,"completed":199,"skipped":3694,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:38:40.635: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-5869
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-5581866c-29d3-4733-afac-c09e32363f85 in namespace container-probe-5869
Jul  3 00:38:42.782: INFO: Started pod liveness-5581866c-29d3-4733-afac-c09e32363f85 in namespace container-probe-5869
STEP: checking the pod's current state and verifying that restartCount is present
Jul  3 00:38:42.785: INFO: Initial restart count of pod liveness-5581866c-29d3-4733-afac-c09e32363f85 is 0
Jul  3 00:39:02.842: INFO: Restart count of pod container-probe-5869/liveness-5581866c-29d3-4733-afac-c09e32363f85 is now 1 (20.056710429s elapsed)
Jul  3 00:39:22.893: INFO: Restart count of pod container-probe-5869/liveness-5581866c-29d3-4733-afac-c09e32363f85 is now 2 (40.108231543s elapsed)
Jul  3 00:39:42.943: INFO: Restart count of pod container-probe-5869/liveness-5581866c-29d3-4733-afac-c09e32363f85 is now 3 (1m0.157670325s elapsed)
Jul  3 00:40:02.994: INFO: Restart count of pod container-probe-5869/liveness-5581866c-29d3-4733-afac-c09e32363f85 is now 4 (1m20.208360582s elapsed)
Jul  3 00:41:13.183: INFO: Restart count of pod container-probe-5869/liveness-5581866c-29d3-4733-afac-c09e32363f85 is now 5 (2m30.397814812s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul  3 00:41:13.190: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-5869" for this suite.
•{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":356,"completed":200,"skipped":3725,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:41:13.201: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-7734
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
Jul  3 00:41:53.394: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Jul  3 00:41:53.394: INFO: Deleting pod "simpletest.rc-2cdw8" in namespace "gc-7734"
W0703 00:41:53.394142    4513 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jul  3 00:41:53.402: INFO: Deleting pod "simpletest.rc-2dgsb" in namespace "gc-7734"
Jul  3 00:41:53.411: INFO: Deleting pod "simpletest.rc-2kwkw" in namespace "gc-7734"
Jul  3 00:41:53.424: INFO: Deleting pod "simpletest.rc-2mndx" in namespace "gc-7734"
Jul  3 00:41:53.431: INFO: Deleting pod "simpletest.rc-2xjgt" in namespace "gc-7734"
Jul  3 00:41:53.439: INFO: Deleting pod "simpletest.rc-4lgm6" in namespace "gc-7734"
Jul  3 00:41:53.448: INFO: Deleting pod "simpletest.rc-4qmjx" in namespace "gc-7734"
Jul  3 00:41:53.455: INFO: Deleting pod "simpletest.rc-4qw4m" in namespace "gc-7734"
Jul  3 00:41:53.472: INFO: Deleting pod "simpletest.rc-4r4jr" in namespace "gc-7734"
Jul  3 00:41:53.480: INFO: Deleting pod "simpletest.rc-4t59f" in namespace "gc-7734"
Jul  3 00:41:53.487: INFO: Deleting pod "simpletest.rc-4vjsk" in namespace "gc-7734"
Jul  3 00:41:53.496: INFO: Deleting pod "simpletest.rc-57rfw" in namespace "gc-7734"
Jul  3 00:41:53.503: INFO: Deleting pod "simpletest.rc-5fczd" in namespace "gc-7734"
Jul  3 00:41:53.511: INFO: Deleting pod "simpletest.rc-5xcj6" in namespace "gc-7734"
Jul  3 00:41:53.517: INFO: Deleting pod "simpletest.rc-6d5zf" in namespace "gc-7734"
Jul  3 00:41:53.523: INFO: Deleting pod "simpletest.rc-6fvcg" in namespace "gc-7734"
Jul  3 00:41:53.547: INFO: Deleting pod "simpletest.rc-6lmcp" in namespace "gc-7734"
Jul  3 00:41:53.561: INFO: Deleting pod "simpletest.rc-6rj6r" in namespace "gc-7734"
Jul  3 00:41:53.568: INFO: Deleting pod "simpletest.rc-6s5fc" in namespace "gc-7734"
Jul  3 00:41:53.573: INFO: Deleting pod "simpletest.rc-79pc5" in namespace "gc-7734"
Jul  3 00:41:53.581: INFO: Deleting pod "simpletest.rc-7dpz2" in namespace "gc-7734"
Jul  3 00:41:53.589: INFO: Deleting pod "simpletest.rc-7xkb9" in namespace "gc-7734"
Jul  3 00:41:53.596: INFO: Deleting pod "simpletest.rc-8846s" in namespace "gc-7734"
Jul  3 00:41:53.602: INFO: Deleting pod "simpletest.rc-8dh2t" in namespace "gc-7734"
Jul  3 00:41:53.608: INFO: Deleting pod "simpletest.rc-8p9dx" in namespace "gc-7734"
Jul  3 00:41:53.614: INFO: Deleting pod "simpletest.rc-8vc8b" in namespace "gc-7734"
Jul  3 00:41:53.621: INFO: Deleting pod "simpletest.rc-98bf8" in namespace "gc-7734"
Jul  3 00:41:53.629: INFO: Deleting pod "simpletest.rc-9gb7p" in namespace "gc-7734"
Jul  3 00:41:53.635: INFO: Deleting pod "simpletest.rc-9lcqt" in namespace "gc-7734"
Jul  3 00:41:53.642: INFO: Deleting pod "simpletest.rc-b95mb" in namespace "gc-7734"
Jul  3 00:41:53.648: INFO: Deleting pod "simpletest.rc-bpmj5" in namespace "gc-7734"
Jul  3 00:41:53.657: INFO: Deleting pod "simpletest.rc-bv275" in namespace "gc-7734"
Jul  3 00:41:53.664: INFO: Deleting pod "simpletest.rc-c94z5" in namespace "gc-7734"
Jul  3 00:41:53.670: INFO: Deleting pod "simpletest.rc-cgvsx" in namespace "gc-7734"
Jul  3 00:41:53.680: INFO: Deleting pod "simpletest.rc-cgxh7" in namespace "gc-7734"
Jul  3 00:41:53.689: INFO: Deleting pod "simpletest.rc-ch2dt" in namespace "gc-7734"
Jul  3 00:41:53.697: INFO: Deleting pod "simpletest.rc-cpqhf" in namespace "gc-7734"
Jul  3 00:41:53.704: INFO: Deleting pod "simpletest.rc-cszmq" in namespace "gc-7734"
Jul  3 00:41:53.710: INFO: Deleting pod "simpletest.rc-dfvt5" in namespace "gc-7734"
Jul  3 00:41:53.717: INFO: Deleting pod "simpletest.rc-dgdjm" in namespace "gc-7734"
Jul  3 00:41:53.722: INFO: Deleting pod "simpletest.rc-dnzsc" in namespace "gc-7734"
Jul  3 00:41:53.729: INFO: Deleting pod "simpletest.rc-drk7f" in namespace "gc-7734"
Jul  3 00:41:53.735: INFO: Deleting pod "simpletest.rc-fm5qd" in namespace "gc-7734"
Jul  3 00:41:53.741: INFO: Deleting pod "simpletest.rc-fsrdw" in namespace "gc-7734"
Jul  3 00:41:53.747: INFO: Deleting pod "simpletest.rc-gks76" in namespace "gc-7734"
Jul  3 00:41:53.753: INFO: Deleting pod "simpletest.rc-gw9dk" in namespace "gc-7734"
Jul  3 00:41:53.761: INFO: Deleting pod "simpletest.rc-h2vbv" in namespace "gc-7734"
Jul  3 00:41:53.767: INFO: Deleting pod "simpletest.rc-h58bm" in namespace "gc-7734"
Jul  3 00:41:53.773: INFO: Deleting pod "simpletest.rc-hksqz" in namespace "gc-7734"
Jul  3 00:41:53.780: INFO: Deleting pod "simpletest.rc-hrmdq" in namespace "gc-7734"
Jul  3 00:41:53.786: INFO: Deleting pod "simpletest.rc-hv9g2" in namespace "gc-7734"
Jul  3 00:41:53.799: INFO: Deleting pod "simpletest.rc-j8xll" in namespace "gc-7734"
Jul  3 00:41:53.805: INFO: Deleting pod "simpletest.rc-jmwf7" in namespace "gc-7734"
Jul  3 00:41:53.812: INFO: Deleting pod "simpletest.rc-jsjk6" in namespace "gc-7734"
Jul  3 00:41:53.819: INFO: Deleting pod "simpletest.rc-k2gxd" in namespace "gc-7734"
Jul  3 00:41:53.826: INFO: Deleting pod "simpletest.rc-kcsqp" in namespace "gc-7734"
Jul  3 00:41:53.835: INFO: Deleting pod "simpletest.rc-kgs95" in namespace "gc-7734"
Jul  3 00:41:53.847: INFO: Deleting pod "simpletest.rc-kw5b9" in namespace "gc-7734"
Jul  3 00:41:53.868: INFO: Deleting pod "simpletest.rc-lgkw2" in namespace "gc-7734"
Jul  3 00:41:53.920: INFO: Deleting pod "simpletest.rc-lr8rf" in namespace "gc-7734"
Jul  3 00:41:53.969: INFO: Deleting pod "simpletest.rc-m7mtd" in namespace "gc-7734"
Jul  3 00:41:54.019: INFO: Deleting pod "simpletest.rc-md4hl" in namespace "gc-7734"
Jul  3 00:41:54.079: INFO: Deleting pod "simpletest.rc-mdxqj" in namespace "gc-7734"
Jul  3 00:41:54.121: INFO: Deleting pod "simpletest.rc-mfhx8" in namespace "gc-7734"
Jul  3 00:41:54.170: INFO: Deleting pod "simpletest.rc-nc7m6" in namespace "gc-7734"
Jul  3 00:41:54.221: INFO: Deleting pod "simpletest.rc-nnvjx" in namespace "gc-7734"
Jul  3 00:41:54.271: INFO: Deleting pod "simpletest.rc-nx4lx" in namespace "gc-7734"
Jul  3 00:41:54.319: INFO: Deleting pod "simpletest.rc-p4cvf" in namespace "gc-7734"
Jul  3 00:41:54.370: INFO: Deleting pod "simpletest.rc-p77zp" in namespace "gc-7734"
Jul  3 00:41:54.420: INFO: Deleting pod "simpletest.rc-plg69" in namespace "gc-7734"
Jul  3 00:41:54.476: INFO: Deleting pod "simpletest.rc-pqlqw" in namespace "gc-7734"
Jul  3 00:41:54.518: INFO: Deleting pod "simpletest.rc-pxvqj" in namespace "gc-7734"
Jul  3 00:41:54.570: INFO: Deleting pod "simpletest.rc-qhl6g" in namespace "gc-7734"
Jul  3 00:41:54.619: INFO: Deleting pod "simpletest.rc-qrbtb" in namespace "gc-7734"
Jul  3 00:41:54.669: INFO: Deleting pod "simpletest.rc-rmgv6" in namespace "gc-7734"
Jul  3 00:41:54.722: INFO: Deleting pod "simpletest.rc-rqxx2" in namespace "gc-7734"
Jul  3 00:41:54.770: INFO: Deleting pod "simpletest.rc-rv7m6" in namespace "gc-7734"
Jul  3 00:41:54.819: INFO: Deleting pod "simpletest.rc-rx7zx" in namespace "gc-7734"
Jul  3 00:41:54.873: INFO: Deleting pod "simpletest.rc-s6z2w" in namespace "gc-7734"
Jul  3 00:41:54.918: INFO: Deleting pod "simpletest.rc-s7l5n" in namespace "gc-7734"
Jul  3 00:41:54.967: INFO: Deleting pod "simpletest.rc-sq5wp" in namespace "gc-7734"
Jul  3 00:41:55.028: INFO: Deleting pod "simpletest.rc-srsc6" in namespace "gc-7734"
Jul  3 00:41:55.076: INFO: Deleting pod "simpletest.rc-ssp4r" in namespace "gc-7734"
Jul  3 00:41:55.121: INFO: Deleting pod "simpletest.rc-swpjq" in namespace "gc-7734"
Jul  3 00:41:55.170: INFO: Deleting pod "simpletest.rc-t4568" in namespace "gc-7734"
Jul  3 00:41:55.221: INFO: Deleting pod "simpletest.rc-thlmn" in namespace "gc-7734"
Jul  3 00:41:55.271: INFO: Deleting pod "simpletest.rc-vmxq9" in namespace "gc-7734"
Jul  3 00:41:55.322: INFO: Deleting pod "simpletest.rc-w8jql" in namespace "gc-7734"
Jul  3 00:41:55.371: INFO: Deleting pod "simpletest.rc-wjgbf" in namespace "gc-7734"
Jul  3 00:41:55.435: INFO: Deleting pod "simpletest.rc-wsbzj" in namespace "gc-7734"
Jul  3 00:41:55.475: INFO: Deleting pod "simpletest.rc-wtw88" in namespace "gc-7734"
Jul  3 00:41:55.522: INFO: Deleting pod "simpletest.rc-wzjfq" in namespace "gc-7734"
Jul  3 00:41:55.568: INFO: Deleting pod "simpletest.rc-wzscd" in namespace "gc-7734"
Jul  3 00:41:55.625: INFO: Deleting pod "simpletest.rc-xbblm" in namespace "gc-7734"
Jul  3 00:41:55.674: INFO: Deleting pod "simpletest.rc-xclvf" in namespace "gc-7734"
Jul  3 00:41:55.722: INFO: Deleting pod "simpletest.rc-zntlz" in namespace "gc-7734"
Jul  3 00:41:55.771: INFO: Deleting pod "simpletest.rc-zq29f" in namespace "gc-7734"
Jul  3 00:41:55.822: INFO: Deleting pod "simpletest.rc-zt6m9" in namespace "gc-7734"
Jul  3 00:41:55.869: INFO: Deleting pod "simpletest.rc-zv2gd" in namespace "gc-7734"
Jul  3 00:41:55.919: INFO: Deleting pod "simpletest.rc-zx5sr" in namespace "gc-7734"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul  3 00:41:55.972: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-7734" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":356,"completed":201,"skipped":3748,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:41:56.075: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-6151
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jul  3 00:42:12.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-6151" for this suite.
•{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":356,"completed":202,"skipped":3762,"failed":0}
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:42:12.231: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-8756
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jul  3 00:42:16.403: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jul  3 00:42:16.413: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-8756" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":203,"skipped":3766,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:42:16.424: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7867
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Service
STEP: watching for the Service to be added
Jul  3 00:42:16.572: INFO: Found Service test-service-9ks4l in namespace services-7867 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Jul  3 00:42:16.572: INFO: Service test-service-9ks4l created
STEP: Getting /status
Jul  3 00:42:16.575: INFO: Service test-service-9ks4l has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
Jul  3 00:42:16.584: INFO: observed Service test-service-9ks4l in namespace services-7867 with annotations: map[] & LoadBalancer: {[]}
Jul  3 00:42:16.584: INFO: Found Service test-service-9ks4l in namespace services-7867 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Jul  3 00:42:16.584: INFO: Service test-service-9ks4l has service status patched
STEP: updating the ServiceStatus
Jul  3 00:42:16.592: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
Jul  3 00:42:16.595: INFO: Observed Service test-service-9ks4l in namespace services-7867 with annotations: map[] & Conditions: {[]}
Jul  3 00:42:16.595: INFO: Observed event: &Service{ObjectMeta:{test-service-9ks4l  services-7867  39bed1c1-83f0-4813-b8eb-87de91213cf7 27475 0 2022-07-03 00:42:16 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2022-07-03 00:42:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2022-07-03 00:42:16 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:100.109.59.41,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[100.109.59.41],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Jul  3 00:42:16.595: INFO: Found Service test-service-9ks4l in namespace services-7867 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jul  3 00:42:16.595: INFO: Service test-service-9ks4l has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
Jul  3 00:42:16.602: INFO: observed Service test-service-9ks4l in namespace services-7867 with labels: map[test-service-static:true]
Jul  3 00:42:16.602: INFO: observed Service test-service-9ks4l in namespace services-7867 with labels: map[test-service-static:true]
Jul  3 00:42:16.602: INFO: observed Service test-service-9ks4l in namespace services-7867 with labels: map[test-service-static:true]
Jul  3 00:42:16.603: INFO: Found Service test-service-9ks4l in namespace services-7867 with labels: map[test-service:patched test-service-static:true]
Jul  3 00:42:16.603: INFO: Service test-service-9ks4l patched
STEP: deleting the service
STEP: watching for the Service to be deleted
Jul  3 00:42:16.613: INFO: Observed event: ADDED
Jul  3 00:42:16.613: INFO: Observed event: MODIFIED
Jul  3 00:42:16.614: INFO: Observed event: MODIFIED
Jul  3 00:42:16.614: INFO: Observed event: MODIFIED
Jul  3 00:42:16.614: INFO: Found Service test-service-9ks4l in namespace services-7867 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Jul  3 00:42:16.614: INFO: Service test-service-9ks4l deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 00:42:16.614: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7867" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":356,"completed":204,"skipped":3787,"failed":0}
SSSS
------------------------------
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:42:16.622: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8173
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8173.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8173.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8173.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8173.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul  3 00:42:18.940: INFO: DNS probes using dns-8173/dns-test-4ed6b9e4-b560-4393-a5f6-edd986886241 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul  3 00:42:18.948: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8173" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]","total":356,"completed":205,"skipped":3791,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:42:18.959: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9592
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:42:19.101: INFO: Waiting up to 5m0s for pod "downwardapi-volume-7c956e18-e4aa-4905-8365-239b5e9414da" in namespace "downward-api-9592" to be "Succeeded or Failed"
Jul  3 00:42:19.105: INFO: Pod "downwardapi-volume-7c956e18-e4aa-4905-8365-239b5e9414da": Phase="Pending", Reason="", readiness=false. Elapsed: 3.499131ms
Jul  3 00:42:21.110: INFO: Pod "downwardapi-volume-7c956e18-e4aa-4905-8365-239b5e9414da": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008380002s
Jul  3 00:42:23.116: INFO: Pod "downwardapi-volume-7c956e18-e4aa-4905-8365-239b5e9414da": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014168671s
STEP: Saw pod success
Jul  3 00:42:23.116: INFO: Pod "downwardapi-volume-7c956e18-e4aa-4905-8365-239b5e9414da" satisfied condition "Succeeded or Failed"
Jul  3 00:42:23.120: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-7c956e18-e4aa-4905-8365-239b5e9414da container client-container: <nil>
STEP: delete the pod
Jul  3 00:42:23.183: INFO: Waiting for pod downwardapi-volume-7c956e18-e4aa-4905-8365-239b5e9414da to disappear
Jul  3 00:42:23.186: INFO: Pod downwardapi-volume-7c956e18-e4aa-4905-8365-239b5e9414da no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul  3 00:42:23.186: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9592" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":206,"skipped":3812,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:42:23.196: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-7052
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-secret-kqcm
STEP: Creating a pod to test atomic-volume-subpath
Jul  3 00:42:23.343: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-kqcm" in namespace "subpath-7052" to be "Succeeded or Failed"
Jul  3 00:42:23.349: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Pending", Reason="", readiness=false. Elapsed: 5.330599ms
Jul  3 00:42:25.354: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Running", Reason="", readiness=true. Elapsed: 2.010905403s
Jul  3 00:42:27.361: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Running", Reason="", readiness=true. Elapsed: 4.01728902s
Jul  3 00:42:29.366: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Running", Reason="", readiness=true. Elapsed: 6.023228336s
Jul  3 00:42:31.372: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Running", Reason="", readiness=true. Elapsed: 8.028255344s
Jul  3 00:42:33.377: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Running", Reason="", readiness=true. Elapsed: 10.033516334s
Jul  3 00:42:35.383: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Running", Reason="", readiness=true. Elapsed: 12.03951661s
Jul  3 00:42:37.389: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Running", Reason="", readiness=true. Elapsed: 14.045284564s
Jul  3 00:42:39.396: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Running", Reason="", readiness=true. Elapsed: 16.052765178s
Jul  3 00:42:41.402: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Running", Reason="", readiness=true. Elapsed: 18.058534197s
Jul  3 00:42:43.408: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Running", Reason="", readiness=true. Elapsed: 20.064668963s
Jul  3 00:42:45.415: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Running", Reason="", readiness=false. Elapsed: 22.07170176s
Jul  3 00:42:47.420: INFO: Pod "pod-subpath-test-secret-kqcm": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.077091622s
STEP: Saw pod success
Jul  3 00:42:47.420: INFO: Pod "pod-subpath-test-secret-kqcm" satisfied condition "Succeeded or Failed"
Jul  3 00:42:47.424: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-subpath-test-secret-kqcm container test-container-subpath-secret-kqcm: <nil>
STEP: delete the pod
Jul  3 00:42:47.443: INFO: Waiting for pod pod-subpath-test-secret-kqcm to disappear
Jul  3 00:42:47.446: INFO: Pod pod-subpath-test-secret-kqcm no longer exists
STEP: Deleting pod pod-subpath-test-secret-kqcm
Jul  3 00:42:47.446: INFO: Deleting pod "pod-subpath-test-secret-kqcm" in namespace "subpath-7052"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jul  3 00:42:47.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-7052" for this suite.
•{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]","total":356,"completed":207,"skipped":3834,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:42:47.460: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-8550
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:42:47.590: INFO: Creating ReplicaSet my-hostname-basic-a3b6c553-d0a3-40cd-b7b0-df155f3be764
Jul  3 00:42:47.601: INFO: Pod name my-hostname-basic-a3b6c553-d0a3-40cd-b7b0-df155f3be764: Found 0 pods out of 1
Jul  3 00:42:52.608: INFO: Pod name my-hostname-basic-a3b6c553-d0a3-40cd-b7b0-df155f3be764: Found 1 pods out of 1
Jul  3 00:42:52.608: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-a3b6c553-d0a3-40cd-b7b0-df155f3be764" is running
Jul  3 00:42:52.611: INFO: Pod "my-hostname-basic-a3b6c553-d0a3-40cd-b7b0-df155f3be764-9wdgd" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-03 00:42:47 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-03 00:42:48 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-03 00:42:48 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-03 00:42:47 +0000 UTC Reason: Message:}])
Jul  3 00:42:52.611: INFO: Trying to dial the pod
Jul  3 00:42:57.635: INFO: Controller my-hostname-basic-a3b6c553-d0a3-40cd-b7b0-df155f3be764: Got expected result from replica 1 [my-hostname-basic-a3b6c553-d0a3-40cd-b7b0-df155f3be764-9wdgd]: "my-hostname-basic-a3b6c553-d0a3-40cd-b7b0-df155f3be764-9wdgd", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jul  3 00:42:57.636: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-8550" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":208,"skipped":3842,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:42:57.650: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4364
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Jul  3 00:42:57.781: INFO: namespace kubectl-4364
Jul  3 00:42:57.781: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4364 create -f -'
Jul  3 00:42:58.604: INFO: stderr: ""
Jul  3 00:42:58.604: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jul  3 00:42:59.609: INFO: Selector matched 1 pods for map[app:agnhost]
Jul  3 00:42:59.609: INFO: Found 0 / 1
Jul  3 00:43:00.609: INFO: Selector matched 1 pods for map[app:agnhost]
Jul  3 00:43:00.610: INFO: Found 1 / 1
Jul  3 00:43:00.610: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jul  3 00:43:00.613: INFO: Selector matched 1 pods for map[app:agnhost]
Jul  3 00:43:00.613: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jul  3 00:43:00.613: INFO: wait on agnhost-primary startup in kubectl-4364 
Jul  3 00:43:00.613: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4364 logs agnhost-primary-4d92m agnhost-primary'
Jul  3 00:43:00.681: INFO: stderr: ""
Jul  3 00:43:00.681: INFO: stdout: "Paused\n"
STEP: exposing RC
Jul  3 00:43:00.681: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4364 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Jul  3 00:43:00.747: INFO: stderr: ""
Jul  3 00:43:00.747: INFO: stdout: "service/rm2 exposed\n"
Jul  3 00:43:00.751: INFO: Service rm2 in namespace kubectl-4364 found.
STEP: exposing service
Jul  3 00:43:02.759: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-4364 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Jul  3 00:43:02.849: INFO: stderr: ""
Jul  3 00:43:02.849: INFO: stdout: "service/rm3 exposed\n"
Jul  3 00:43:02.852: INFO: Service rm3 in namespace kubectl-4364 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 00:43:04.861: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4364" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":356,"completed":209,"skipped":3864,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:43:04.872: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5984
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-95152d14-b4cb-46f4-baf2-b384ecde7224
STEP: Creating a pod to test consume secrets
Jul  3 00:43:05.020: INFO: Waiting up to 5m0s for pod "pod-secrets-5989ad5c-6ec5-4bab-ad29-780ee3c859c8" in namespace "secrets-5984" to be "Succeeded or Failed"
Jul  3 00:43:05.024: INFO: Pod "pod-secrets-5989ad5c-6ec5-4bab-ad29-780ee3c859c8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.827634ms
Jul  3 00:43:07.029: INFO: Pod "pod-secrets-5989ad5c-6ec5-4bab-ad29-780ee3c859c8": Phase="Running", Reason="", readiness=false. Elapsed: 2.008970442s
Jul  3 00:43:09.034: INFO: Pod "pod-secrets-5989ad5c-6ec5-4bab-ad29-780ee3c859c8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01389563s
STEP: Saw pod success
Jul  3 00:43:09.034: INFO: Pod "pod-secrets-5989ad5c-6ec5-4bab-ad29-780ee3c859c8" satisfied condition "Succeeded or Failed"
Jul  3 00:43:09.038: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-secrets-5989ad5c-6ec5-4bab-ad29-780ee3c859c8 container secret-volume-test: <nil>
STEP: delete the pod
Jul  3 00:43:09.054: INFO: Waiting for pod pod-secrets-5989ad5c-6ec5-4bab-ad29-780ee3c859c8 to disappear
Jul  3 00:43:09.056: INFO: Pod pod-secrets-5989ad5c-6ec5-4bab-ad29-780ee3c859c8 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul  3 00:43:09.056: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5984" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":210,"skipped":3891,"failed":0}
S
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:43:09.076: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9373
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Jul  3 00:43:09.215: INFO: Waiting up to 5m0s for pod "pod-d1d50452-ae5c-477a-a037-7695dd403364" in namespace "emptydir-9373" to be "Succeeded or Failed"
Jul  3 00:43:09.218: INFO: Pod "pod-d1d50452-ae5c-477a-a037-7695dd403364": Phase="Pending", Reason="", readiness=false. Elapsed: 3.444216ms
Jul  3 00:43:11.222: INFO: Pod "pod-d1d50452-ae5c-477a-a037-7695dd403364": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007739398s
Jul  3 00:43:13.227: INFO: Pod "pod-d1d50452-ae5c-477a-a037-7695dd403364": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012006104s
STEP: Saw pod success
Jul  3 00:43:13.227: INFO: Pod "pod-d1d50452-ae5c-477a-a037-7695dd403364" satisfied condition "Succeeded or Failed"
Jul  3 00:43:13.230: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-d1d50452-ae5c-477a-a037-7695dd403364 container test-container: <nil>
STEP: delete the pod
Jul  3 00:43:13.247: INFO: Waiting for pod pod-d1d50452-ae5c-477a-a037-7695dd403364 to disappear
Jul  3 00:43:13.250: INFO: Pod pod-d1d50452-ae5c-477a-a037-7695dd403364 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 00:43:13.250: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9373" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":211,"skipped":3892,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:43:13.260: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-7671
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jul  3 00:48:13.411: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-7671" for this suite.

• [SLOW TEST:300.160 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":356,"completed":212,"skipped":3910,"failed":0}
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:48:13.420: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-6369
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jul  3 00:48:13.558: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jul  3 00:48:17.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-6369" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":356,"completed":213,"skipped":3913,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:48:17.413: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4628
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-4628
STEP: creating service affinity-nodeport-transition in namespace services-4628
STEP: creating replication controller affinity-nodeport-transition in namespace services-4628
I0703 00:48:17.561901    4513 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-4628, replica count: 3
I0703 00:48:20.613118    4513 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul  3 00:48:20.625: INFO: Creating new exec pod
Jul  3 00:48:23.652: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-4628 exec execpod-affinity9stgd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
Jul  3 00:48:23.957: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Jul  3 00:48:23.957: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:48:23.957: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-4628 exec execpod-affinity9stgd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.107.225.80 80'
Jul  3 00:48:24.276: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.107.225.80 80\nConnection to 100.107.225.80 80 port [tcp/http] succeeded!\n"
Jul  3 00:48:24.276: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:48:24.276: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-4628 exec execpod-affinity9stgd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.183 30963'
Jul  3 00:48:24.480: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.183 30963\nConnection to 10.250.2.183 30963 port [tcp/*] succeeded!\n"
Jul  3 00:48:24.480: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:48:24.480: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-4628 exec execpod-affinity9stgd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.84 30963'
Jul  3 00:48:24.776: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.84 30963\nConnection to 10.250.2.84 30963 port [tcp/*] succeeded!\n"
Jul  3 00:48:24.776: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 00:48:24.786: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-4628 exec execpod-affinity9stgd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.250.2.183:30963/ ; done'
Jul  3 00:48:25.176: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n"
Jul  3 00:48:25.176: INFO: stdout: "\naffinity-nodeport-transition-fm84m\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-fm84m\naffinity-nodeport-transition-fm84m\naffinity-nodeport-transition-74w76\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-fm84m\naffinity-nodeport-transition-fm84m\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-74w76\naffinity-nodeport-transition-74w76\naffinity-nodeport-transition-fm84m\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46"
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-fm84m
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-fm84m
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-fm84m
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-74w76
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-fm84m
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-fm84m
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-74w76
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-74w76
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-fm84m
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.176: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.184: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-4628 exec execpod-affinity9stgd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.250.2.183:30963/ ; done'
Jul  3 00:48:25.499: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:30963/\n"
Jul  3 00:48:25.499: INFO: stdout: "\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46\naffinity-nodeport-transition-f7g46"
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Received response from host: affinity-nodeport-transition-f7g46
Jul  3 00:48:25.499: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4628, will wait for the garbage collector to delete the pods
Jul  3 00:48:25.567: INFO: Deleting ReplicationController affinity-nodeport-transition took: 5.829368ms
Jul  3 00:48:25.667: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.358827ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 00:48:27.581: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4628" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":214,"skipped":3936,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:48:27.592: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-9268
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
Jul  3 00:48:27.743: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9268  033a52d0-360a-49e7-9059-d8f5850632af 29524 0 2022-07-03 00:48:27 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-07-03 00:48:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:48:27.743: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9268  033a52d0-360a-49e7-9059-d8f5850632af 29525 0 2022-07-03 00:48:27 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-07-03 00:48:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:48:27.743: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9268  033a52d0-360a-49e7-9059-d8f5850632af 29526 0 2022-07-03 00:48:27 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-07-03 00:48:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
Jul  3 00:48:37.775: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9268  033a52d0-360a-49e7-9059-d8f5850632af 29576 0 2022-07-03 00:48:27 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-07-03 00:48:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:48:37.776: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9268  033a52d0-360a-49e7-9059-d8f5850632af 29577 0 2022-07-03 00:48:27 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-07-03 00:48:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:48:37.776: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9268  033a52d0-360a-49e7-9059-d8f5850632af 29578 0 2022-07-03 00:48:27 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-07-03 00:48:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jul  3 00:48:37.776: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-9268" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":356,"completed":215,"skipped":3976,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:48:37.785: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2405
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:48:37.923: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jul  3 00:48:40.137: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2405 --namespace=crd-publish-openapi-2405 create -f -'
Jul  3 00:48:40.842: INFO: stderr: ""
Jul  3 00:48:40.842: INFO: stdout: "e2e-test-crd-publish-openapi-43-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jul  3 00:48:40.842: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2405 --namespace=crd-publish-openapi-2405 delete e2e-test-crd-publish-openapi-43-crds test-cr'
Jul  3 00:48:40.901: INFO: stderr: ""
Jul  3 00:48:40.901: INFO: stdout: "e2e-test-crd-publish-openapi-43-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Jul  3 00:48:40.901: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2405 --namespace=crd-publish-openapi-2405 apply -f -'
Jul  3 00:48:41.063: INFO: stderr: ""
Jul  3 00:48:41.063: INFO: stdout: "e2e-test-crd-publish-openapi-43-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jul  3 00:48:41.063: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2405 --namespace=crd-publish-openapi-2405 delete e2e-test-crd-publish-openapi-43-crds test-cr'
Jul  3 00:48:41.125: INFO: stderr: ""
Jul  3 00:48:41.125: INFO: stdout: "e2e-test-crd-publish-openapi-43-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Jul  3 00:48:41.125: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2405 explain e2e-test-crd-publish-openapi-43-crds'
Jul  3 00:48:41.267: INFO: stderr: ""
Jul  3 00:48:41.267: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-43-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:48:43.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2405" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":356,"completed":216,"skipped":3987,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:48:43.500: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8484
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8484 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8484;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8484 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8484;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8484.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8484.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8484.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8484.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8484.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8484.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8484.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8484.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8484.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8484.svc;check="$$(dig +notcp +noall +answer +search 193.236.110.100.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/100.110.236.193_udp@PTR;check="$$(dig +tcp +noall +answer +search 193.236.110.100.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/100.110.236.193_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8484 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8484;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8484 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8484;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8484.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8484.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8484.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8484.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8484.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8484.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8484.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8484.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8484.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8484.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8484.svc;check="$$(dig +notcp +noall +answer +search 193.236.110.100.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/100.110.236.193_udp@PTR;check="$$(dig +tcp +noall +answer +search 193.236.110.100.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/100.110.236.193_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul  3 00:48:45.713: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.721: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.774: INFO: Unable to read wheezy_udp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.819: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.825: INFO: Unable to read wheezy_udp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.831: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.836: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.843: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.874: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.879: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.885: INFO: Unable to read jessie_udp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.891: INFO: Unable to read jessie_tcp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.898: INFO: Unable to read jessie_udp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.905: INFO: Unable to read jessie_tcp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.911: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.917: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:45.942: INFO: Lookups using dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8484 wheezy_tcp@dns-test-service.dns-8484 wheezy_udp@dns-test-service.dns-8484.svc wheezy_tcp@dns-test-service.dns-8484.svc wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8484 jessie_tcp@dns-test-service.dns-8484 jessie_udp@dns-test-service.dns-8484.svc jessie_tcp@dns-test-service.dns-8484.svc jessie_udp@_http._tcp.dns-test-service.dns-8484.svc jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc]

Jul  3 00:48:50.950: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:50.995: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.005: INFO: Unable to read wheezy_udp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.011: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.017: INFO: Unable to read wheezy_udp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.023: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.029: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.034: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.063: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.068: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.074: INFO: Unable to read jessie_udp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.079: INFO: Unable to read jessie_tcp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.085: INFO: Unable to read jessie_udp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.090: INFO: Unable to read jessie_tcp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.097: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.102: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:51.125: INFO: Lookups using dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8484 wheezy_tcp@dns-test-service.dns-8484 wheezy_udp@dns-test-service.dns-8484.svc wheezy_tcp@dns-test-service.dns-8484.svc wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8484 jessie_tcp@dns-test-service.dns-8484 jessie_udp@dns-test-service.dns-8484.svc jessie_tcp@dns-test-service.dns-8484.svc jessie_udp@_http._tcp.dns-test-service.dns-8484.svc jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc]

Jul  3 00:48:55.953: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:55.960: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.004: INFO: Unable to read wheezy_udp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.011: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.021: INFO: Unable to read wheezy_udp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.031: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.037: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.043: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.077: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.083: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.089: INFO: Unable to read jessie_udp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.094: INFO: Unable to read jessie_tcp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.100: INFO: Unable to read jessie_udp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.105: INFO: Unable to read jessie_tcp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.111: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.116: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:48:56.138: INFO: Lookups using dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8484 wheezy_tcp@dns-test-service.dns-8484 wheezy_udp@dns-test-service.dns-8484.svc wheezy_tcp@dns-test-service.dns-8484.svc wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8484 jessie_tcp@dns-test-service.dns-8484 jessie_udp@dns-test-service.dns-8484.svc jessie_tcp@dns-test-service.dns-8484.svc jessie_udp@_http._tcp.dns-test-service.dns-8484.svc jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc]

Jul  3 00:49:00.951: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:00.957: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:00.963: INFO: Unable to read wheezy_udp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.011: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.016: INFO: Unable to read wheezy_udp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.022: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.028: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.034: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.063: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.069: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.075: INFO: Unable to read jessie_udp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.081: INFO: Unable to read jessie_tcp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.086: INFO: Unable to read jessie_udp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.092: INFO: Unable to read jessie_tcp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.098: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.103: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:01.127: INFO: Lookups using dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8484 wheezy_tcp@dns-test-service.dns-8484 wheezy_udp@dns-test-service.dns-8484.svc wheezy_tcp@dns-test-service.dns-8484.svc wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8484 jessie_tcp@dns-test-service.dns-8484 jessie_udp@dns-test-service.dns-8484.svc jessie_tcp@dns-test-service.dns-8484.svc jessie_udp@_http._tcp.dns-test-service.dns-8484.svc jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc]

Jul  3 00:49:05.951: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:05.957: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:05.962: INFO: Unable to read wheezy_udp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:05.973: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.019: INFO: Unable to read wheezy_udp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.025: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.030: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.036: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.066: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.075: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.081: INFO: Unable to read jessie_udp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.087: INFO: Unable to read jessie_tcp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.097: INFO: Unable to read jessie_udp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.104: INFO: Unable to read jessie_tcp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.109: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.115: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:06.141: INFO: Lookups using dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8484 wheezy_tcp@dns-test-service.dns-8484 wheezy_udp@dns-test-service.dns-8484.svc wheezy_tcp@dns-test-service.dns-8484.svc wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8484 jessie_tcp@dns-test-service.dns-8484 jessie_udp@dns-test-service.dns-8484.svc jessie_tcp@dns-test-service.dns-8484.svc jessie_udp@_http._tcp.dns-test-service.dns-8484.svc jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc]

Jul  3 00:49:10.950: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:10.955: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.000: INFO: Unable to read wheezy_udp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.005: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.010: INFO: Unable to read wheezy_udp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.016: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.022: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.028: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.138: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.168: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.212: INFO: Unable to read jessie_udp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.219: INFO: Unable to read jessie_tcp@dns-test-service.dns-8484 from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.226: INFO: Unable to read jessie_udp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.232: INFO: Unable to read jessie_tcp@dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.241: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.248: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc from pod dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560: the server could not find the requested resource (get pods dns-test-d9628400-9401-4bc3-900c-68dc20c45560)
Jul  3 00:49:11.269: INFO: Lookups using dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8484 wheezy_tcp@dns-test-service.dns-8484 wheezy_udp@dns-test-service.dns-8484.svc wheezy_tcp@dns-test-service.dns-8484.svc wheezy_udp@_http._tcp.dns-test-service.dns-8484.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8484.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8484 jessie_tcp@dns-test-service.dns-8484 jessie_udp@dns-test-service.dns-8484.svc jessie_tcp@dns-test-service.dns-8484.svc jessie_udp@_http._tcp.dns-test-service.dns-8484.svc jessie_tcp@_http._tcp.dns-test-service.dns-8484.svc]

Jul  3 00:49:16.113: INFO: DNS probes using dns-8484/dns-test-d9628400-9401-4bc3-900c-68dc20c45560 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul  3 00:49:16.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8484" for this suite.
•{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":356,"completed":217,"skipped":4012,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:49:16.145: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6945
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6945.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-6945.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6945.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-6945.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6945.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-6945.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6945.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-6945.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul  3 00:49:18.306: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:18.313: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:18.364: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:18.370: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:18.375: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:18.380: INFO: Unable to read jessie_udp@dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:18.386: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:18.386: INFO: Lookups using dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6945.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local jessie_udp@dns-test-service-2.dns-6945.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6945.svc.cluster.local]

Jul  3 00:49:23.396: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:23.447: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:23.464: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:23.470: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:23.481: INFO: Lookups using dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local]

Jul  3 00:49:28.395: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:28.440: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:28.473: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:28.478: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:28.491: INFO: Lookups using dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local]

Jul  3 00:49:33.406: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:33.447: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:33.468: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:33.475: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:33.486: INFO: Lookups using dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local]

Jul  3 00:49:38.395: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:38.442: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:38.464: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:38.470: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:38.488: INFO: Lookups using dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local]

Jul  3 00:49:43.396: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:43.401: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:43.455: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:43.463: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local from pod dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca: the server could not find the requested resource (get pods dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca)
Jul  3 00:49:43.473: INFO: Lookups using dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6945.svc.cluster.local]

Jul  3 00:49:48.479: INFO: DNS probes using dns-6945/dns-test-6b7f2b86-7061-45d7-ad63-e0ec3f1c29ca succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul  3 00:49:48.493: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6945" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":356,"completed":218,"skipped":4026,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:49:48.501: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1357
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:49:49.031: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:49:52.050: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:49:52.174: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1357" for this suite.
STEP: Destroying namespace "webhook-1357-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":356,"completed":219,"skipped":4050,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:49:52.204: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4944
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating secret secrets-4944/secret-test-cad9de9c-8336-44bd-911c-07e8a488eddf
STEP: Creating a pod to test consume secrets
Jul  3 00:49:52.336: INFO: Waiting up to 5m0s for pod "pod-configmaps-e27a9b20-f60c-413d-9169-d0034f74a68d" in namespace "secrets-4944" to be "Succeeded or Failed"
Jul  3 00:49:52.338: INFO: Pod "pod-configmaps-e27a9b20-f60c-413d-9169-d0034f74a68d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.362238ms
Jul  3 00:49:54.343: INFO: Pod "pod-configmaps-e27a9b20-f60c-413d-9169-d0034f74a68d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007286422s
Jul  3 00:49:56.349: INFO: Pod "pod-configmaps-e27a9b20-f60c-413d-9169-d0034f74a68d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012512426s
STEP: Saw pod success
Jul  3 00:49:56.349: INFO: Pod "pod-configmaps-e27a9b20-f60c-413d-9169-d0034f74a68d" satisfied condition "Succeeded or Failed"
Jul  3 00:49:56.351: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-configmaps-e27a9b20-f60c-413d-9169-d0034f74a68d container env-test: <nil>
STEP: delete the pod
Jul  3 00:49:56.370: INFO: Waiting for pod pod-configmaps-e27a9b20-f60c-413d-9169-d0034f74a68d to disappear
Jul  3 00:49:56.372: INFO: Pod pod-configmaps-e27a9b20-f60c-413d-9169-d0034f74a68d no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jul  3 00:49:56.372: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4944" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":220,"skipped":4073,"failed":0}
SSSS
------------------------------
[sig-network] Services 
  should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:49:56.380: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-2457
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 00:49:56.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2457" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":356,"completed":221,"skipped":4077,"failed":0}
SSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:49:56.513: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7481
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-8a1cb722-cd4b-4b51-88f0-81e26284d1aa
STEP: Creating a pod to test consume configMaps
Jul  3 00:49:56.650: INFO: Waiting up to 5m0s for pod "pod-configmaps-ad1e516c-de95-4abd-98d2-ac1b30ffadb5" in namespace "configmap-7481" to be "Succeeded or Failed"
Jul  3 00:49:56.654: INFO: Pod "pod-configmaps-ad1e516c-de95-4abd-98d2-ac1b30ffadb5": Phase="Pending", Reason="", readiness=false. Elapsed: 3.581519ms
Jul  3 00:49:58.657: INFO: Pod "pod-configmaps-ad1e516c-de95-4abd-98d2-ac1b30ffadb5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007275626s
Jul  3 00:50:00.662: INFO: Pod "pod-configmaps-ad1e516c-de95-4abd-98d2-ac1b30ffadb5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012301617s
STEP: Saw pod success
Jul  3 00:50:00.663: INFO: Pod "pod-configmaps-ad1e516c-de95-4abd-98d2-ac1b30ffadb5" satisfied condition "Succeeded or Failed"
Jul  3 00:50:00.665: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-configmaps-ad1e516c-de95-4abd-98d2-ac1b30ffadb5 container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:50:00.678: INFO: Waiting for pod pod-configmaps-ad1e516c-de95-4abd-98d2-ac1b30ffadb5 to disappear
Jul  3 00:50:00.680: INFO: Pod pod-configmaps-ad1e516c-de95-4abd-98d2-ac1b30ffadb5 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 00:50:00.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7481" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":222,"skipped":4083,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:50:00.688: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-4802
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul  3 00:50:11.850: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-4802" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":356,"completed":223,"skipped":4120,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:50:11.858: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2977
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul  3 00:50:23.020: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2977" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":356,"completed":224,"skipped":4135,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:50:23.028: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-3721
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in volume subpath
Jul  3 00:50:23.164: INFO: Waiting up to 5m0s for pod "var-expansion-71f82408-c472-4fa0-b2e1-4cf180ce2e9a" in namespace "var-expansion-3721" to be "Succeeded or Failed"
Jul  3 00:50:23.169: INFO: Pod "var-expansion-71f82408-c472-4fa0-b2e1-4cf180ce2e9a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.082885ms
Jul  3 00:50:25.174: INFO: Pod "var-expansion-71f82408-c472-4fa0-b2e1-4cf180ce2e9a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009254413s
Jul  3 00:50:27.178: INFO: Pod "var-expansion-71f82408-c472-4fa0-b2e1-4cf180ce2e9a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013878485s
STEP: Saw pod success
Jul  3 00:50:27.178: INFO: Pod "var-expansion-71f82408-c472-4fa0-b2e1-4cf180ce2e9a" satisfied condition "Succeeded or Failed"
Jul  3 00:50:27.181: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod var-expansion-71f82408-c472-4fa0-b2e1-4cf180ce2e9a container dapi-container: <nil>
STEP: delete the pod
Jul  3 00:50:27.196: INFO: Waiting for pod var-expansion-71f82408-c472-4fa0-b2e1-4cf180ce2e9a to disappear
Jul  3 00:50:27.198: INFO: Pod var-expansion-71f82408-c472-4fa0-b2e1-4cf180ce2e9a no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul  3 00:50:27.198: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3721" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":356,"completed":225,"skipped":4166,"failed":0}
SS
------------------------------
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:50:27.206: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-9911
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
Jul  3 00:50:29.352: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9911 PodName:var-expansion-9610aa4e-5088-44b8-8c1b-91ad5d8b9360 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:50:29.352: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:50:29.352: INFO: ExecWithOptions: Clientset creation
Jul  3 00:50:29.352: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/var-expansion-9911/pods/var-expansion-9610aa4e-5088-44b8-8c1b-91ad5d8b9360/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path
Jul  3 00:50:29.578: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9911 PodName:var-expansion-9610aa4e-5088-44b8-8c1b-91ad5d8b9360 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 00:50:29.578: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 00:50:29.579: INFO: ExecWithOptions: Clientset creation
Jul  3 00:50:29.579: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/var-expansion-9911/pods/var-expansion-9610aa4e-5088-44b8-8c1b-91ad5d8b9360/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value
Jul  3 00:50:30.357: INFO: Successfully updated pod "var-expansion-9610aa4e-5088-44b8-8c1b-91ad5d8b9360"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
Jul  3 00:50:30.360: INFO: Deleting pod "var-expansion-9610aa4e-5088-44b8-8c1b-91ad5d8b9360" in namespace "var-expansion-9911"
Jul  3 00:50:30.364: INFO: Wait up to 5m0s for pod "var-expansion-9610aa4e-5088-44b8-8c1b-91ad5d8b9360" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul  3 00:51:04.371: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-9911" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":356,"completed":226,"skipped":4168,"failed":0}
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:51:04.380: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2254
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating api versions
Jul  3 00:51:04.504: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2254 api-versions'
Jul  3 00:51:04.574: INFO: stderr: ""
Jul  3 00:51:04.574: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling.k8s.io/v1\nautoscaling.k8s.io/v1beta2\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\ncert.gardener.cloud/v1alpha1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\ndns.gardener.cloud/v1alpha1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 00:51:04.574: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2254" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":356,"completed":227,"skipped":4170,"failed":0}
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:51:04.583: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4306
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:51:05.167: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:51:08.184: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a validating webhook configuration
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:51:08.374: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4306" for this suite.
STEP: Destroying namespace "webhook-4306-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":356,"completed":228,"skipped":4171,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:51:08.408: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5074
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap that has name configmap-test-emptyKey-bc5fcb8c-1614-4197-8fd1-584f94bb1f17
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 00:51:08.536: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5074" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":356,"completed":229,"skipped":4182,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:51:08.544: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-6799
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jul  3 00:51:08.681: INFO: Waiting up to 1m0s for all nodes to be ready
Jul  3 00:52:08.720: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:52:08.723: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-6896
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:690
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:52:08.869: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
Jul  3 00:52:08.872: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/framework.go:188
Jul  3 00:52:08.889: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-6896" for this suite.
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:706
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:52:08.904: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-6799" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80
•{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":356,"completed":230,"skipped":4206,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:52:08.944: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4362
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-9ba83937-c738-49c5-bd73-9f15d985a1d0
STEP: Creating secret with name s-test-opt-upd-07ef5a4c-136e-420f-8590-d805a2330821
STEP: Creating the pod
Jul  3 00:52:09.105: INFO: The status of Pod pod-secrets-197ec3b1-a2b7-4a06-9c3d-65488010f58f is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:52:11.110: INFO: The status of Pod pod-secrets-197ec3b1-a2b7-4a06-9c3d-65488010f58f is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-9ba83937-c738-49c5-bd73-9f15d985a1d0
STEP: Updating secret s-test-opt-upd-07ef5a4c-136e-420f-8590-d805a2330821
STEP: Creating secret with name s-test-opt-create-ae9ddbff-0e98-4dfb-bc92-d98a6fba86f5
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul  3 00:52:15.325: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4362" for this suite.
•{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":231,"skipped":4217,"failed":0}
S
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:52:15.335: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1373
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-bd1e4f57-14d7-4c34-adac-0d3ac222363d
STEP: Creating secret with name s-test-opt-upd-b957b145-3a58-4839-8cb4-a9790b60ab8f
STEP: Creating the pod
Jul  3 00:52:15.491: INFO: The status of Pod pod-projected-secrets-26b01fc1-10b6-4939-b868-0073791992bd is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:52:17.496: INFO: The status of Pod pod-projected-secrets-26b01fc1-10b6-4939-b868-0073791992bd is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-bd1e4f57-14d7-4c34-adac-0d3ac222363d
STEP: Updating secret s-test-opt-upd-b957b145-3a58-4839-8cb4-a9790b60ab8f
STEP: Creating secret with name s-test-opt-create-957685f8-8448-4b0f-a65f-df3597c2c820
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul  3 00:52:19.686: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1373" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":232,"skipped":4218,"failed":0}
SSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:52:19.697: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-6362
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:52:19.830: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Jul  3 00:52:24.834: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jul  3 00:52:24.834: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul  3 00:52:26.860: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-6362  7dacb3b7-1eb3-4cef-8242-57f6adfc1147 31138 1 2022-07-03 00:52:24 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-07-03 00:52:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:52:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002e824e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-07-03 00:52:24 +0000 UTC,LastTransitionTime:2022-07-03 00:52:24 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-cleanup-deployment-6755c7b765" has successfully progressed.,LastUpdateTime:2022-07-03 00:52:25 +0000 UTC,LastTransitionTime:2022-07-03 00:52:24 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jul  3 00:52:26.863: INFO: New ReplicaSet "test-cleanup-deployment-6755c7b765" of Deployment "test-cleanup-deployment":
&ReplicaSet{ObjectMeta:{test-cleanup-deployment-6755c7b765  deployment-6362  284d7495-13b9-419d-a885-a9a9e9f2135c 31130 1 2022-07-03 00:52:24 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment 7dacb3b7-1eb3-4cef-8242-57f6adfc1147 0xc002e82897 0xc002e82898}] []  [{kube-controller-manager Update apps/v1 2022-07-03 00:52:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7dacb3b7-1eb3-4cef-8242-57f6adfc1147\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 00:52:25 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 6755c7b765,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002e82948 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jul  3 00:52:26.866: INFO: Pod "test-cleanup-deployment-6755c7b765-cvnkv" is available:
&Pod{ObjectMeta:{test-cleanup-deployment-6755c7b765-cvnkv test-cleanup-deployment-6755c7b765- deployment-6362  d4cea95a-df03-4520-b6b9-34c586631646 31129 0 2022-07-03 00:52:24 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[cni.projectcalico.org/containerID:6db91b69d49a390980ade33dcb2e21be231574b9a6fb77eb3d6d916b96cb8e76 cni.projectcalico.org/podIP:100.64.1.161/32 cni.projectcalico.org/podIPs:100.64.1.161/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-cleanup-deployment-6755c7b765 284d7495-13b9-419d-a885-a9a9e9f2135c 0xc002e82da7 0xc002e82da8}] []  [{kube-controller-manager Update v1 2022-07-03 00:52:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"284d7495-13b9-419d-a885-a9a9e9f2135c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 00:52:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 00:52:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.1.161\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nd9vs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nd9vs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:52:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:52:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:52:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 00:52:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:100.64.1.161,StartTime:2022-07-03 00:52:24 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 00:52:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://a41687120aaacd011d7c0fa59b2f8da1f3da0a9bb000060859099784d9e08716,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.1.161,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul  3 00:52:26.866: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-6362" for this suite.
•{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":356,"completed":233,"skipped":4222,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:52:26.875: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1800
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:52:27.010: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6e6e1d34-de22-4996-9090-025906db0fb9" in namespace "projected-1800" to be "Succeeded or Failed"
Jul  3 00:52:27.013: INFO: Pod "downwardapi-volume-6e6e1d34-de22-4996-9090-025906db0fb9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.169952ms
Jul  3 00:52:29.018: INFO: Pod "downwardapi-volume-6e6e1d34-de22-4996-9090-025906db0fb9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007374838s
Jul  3 00:52:31.023: INFO: Pod "downwardapi-volume-6e6e1d34-de22-4996-9090-025906db0fb9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012625553s
STEP: Saw pod success
Jul  3 00:52:31.023: INFO: Pod "downwardapi-volume-6e6e1d34-de22-4996-9090-025906db0fb9" satisfied condition "Succeeded or Failed"
Jul  3 00:52:31.026: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-6e6e1d34-de22-4996-9090-025906db0fb9 container client-container: <nil>
STEP: delete the pod
Jul  3 00:52:31.041: INFO: Waiting for pod downwardapi-volume-6e6e1d34-de22-4996-9090-025906db0fb9 to disappear
Jul  3 00:52:31.044: INFO: Pod downwardapi-volume-6e6e1d34-de22-4996-9090-025906db0fb9 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul  3 00:52:31.044: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1800" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":234,"skipped":4236,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:52:31.053: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9642
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-5f61f50f-f7c4-4d32-bc27-76eb923cddb7
STEP: Creating a pod to test consume configMaps
Jul  3 00:52:31.191: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-1f98536e-0172-4569-854b-fd72368939bb" in namespace "projected-9642" to be "Succeeded or Failed"
Jul  3 00:52:31.195: INFO: Pod "pod-projected-configmaps-1f98536e-0172-4569-854b-fd72368939bb": Phase="Pending", Reason="", readiness=false. Elapsed: 3.160482ms
Jul  3 00:52:33.199: INFO: Pod "pod-projected-configmaps-1f98536e-0172-4569-854b-fd72368939bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00754376s
Jul  3 00:52:35.203: INFO: Pod "pod-projected-configmaps-1f98536e-0172-4569-854b-fd72368939bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011546459s
STEP: Saw pod success
Jul  3 00:52:35.203: INFO: Pod "pod-projected-configmaps-1f98536e-0172-4569-854b-fd72368939bb" satisfied condition "Succeeded or Failed"
Jul  3 00:52:35.206: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-configmaps-1f98536e-0172-4569-854b-fd72368939bb container agnhost-container: <nil>
STEP: delete the pod
Jul  3 00:52:35.232: INFO: Waiting for pod pod-projected-configmaps-1f98536e-0172-4569-854b-fd72368939bb to disappear
Jul  3 00:52:35.235: INFO: Pod pod-projected-configmaps-1f98536e-0172-4569-854b-fd72368939bb no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul  3 00:52:35.235: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9642" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":235,"skipped":4243,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:52:35.245: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-4519
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:52:35.386: INFO: created pod
Jul  3 00:52:35.386: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-4519" to be "Succeeded or Failed"
Jul  3 00:52:35.389: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.973241ms
Jul  3 00:52:37.394: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008021335s
Jul  3 00:52:39.399: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013105802s
STEP: Saw pod success
Jul  3 00:52:39.399: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Jul  3 00:53:09.400: INFO: polling logs
Jul  3 00:53:09.410: INFO: Pod logs: 
I0703 00:52:36.057483       1 log.go:195] OK: Got token
I0703 00:52:36.057513       1 log.go:195] validating with in-cluster discovery
I0703 00:52:36.058153       1 log.go:195] OK: got issuer https://api.tmffe-jrp.it.internal.staging.k8s.ondemand.com
I0703 00:52:36.058178       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://api.tmffe-jrp.it.internal.staging.k8s.ondemand.com", Subject:"system:serviceaccount:svcaccounts-4519:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1656810155, NotBefore:1656809555, IssuedAt:1656809555, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4519", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"61f03e32-9545-4701-b5c3-d6f007971e11"}}}
I0703 00:52:36.082645       1 log.go:195] OK: Constructed OIDC provider for issuer https://api.tmffe-jrp.it.internal.staging.k8s.ondemand.com
I0703 00:52:36.085558       1 log.go:195] OK: Validated signature on JWT
I0703 00:52:36.085817       1 log.go:195] OK: Got valid claims from token!
I0703 00:52:36.085929       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://api.tmffe-jrp.it.internal.staging.k8s.ondemand.com", Subject:"system:serviceaccount:svcaccounts-4519:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1656810155, NotBefore:1656809555, IssuedAt:1656809555, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4519", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"61f03e32-9545-4701-b5c3-d6f007971e11"}}}

Jul  3 00:53:09.411: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jul  3 00:53:09.416: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-4519" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":356,"completed":236,"skipped":4273,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:53:09.428: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-674
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jul  3 00:53:09.558: INFO: PodSpec: initContainers in spec.initContainers
Jul  3 00:53:51.172: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-79c2bf0e-3b50-45da-9772-a750c584d6f3", GenerateName:"", Namespace:"init-container-674", SelfLink:"", UID:"20fc0790-a2e3-48b2-8ec5-a26d9615dd5a", ResourceVersion:"31616", Generation:0, CreationTimestamp:time.Date(2022, time.July, 3, 0, 53, 9, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"558303570"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"fd75dd0cbe069ad739f3edafe35ffdd5b1af4c018ec0b446ae013b66bdf2826d", "cni.projectcalico.org/podIP":"100.64.1.165/32", "cni.projectcalico.org/podIPs":"100.64.1.165/32", "kubernetes.io/psp":"e2e-test-privileged-psp"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.July, 3, 0, 53, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002006e28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.July, 3, 0, 53, 10, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002006e58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.July, 3, 0, 53, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002006e88), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-knwqg", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0058eee80), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"KUBERNETES_SERVICE_HOST", Value:"api.tmffe-jrp.it.internal.staging.k8s.ondemand.com", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-knwqg", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"KUBERNETES_SERVICE_HOST", Value:"api.tmffe-jrp.it.internal.staging.k8s.ondemand.com", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-knwqg", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.7", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar{v1.EnvVar{Name:"KUBERNETES_SERVICE_HOST", Value:"api.tmffe-jrp.it.internal.staging.k8s.ondemand.com", ValueFrom:(*v1.EnvVarSource)(nil)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-knwqg", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003dcff40), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0009385b0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003dcffc0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003dcffe0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003dcffe8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003dcffec), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0047c41c0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.July, 3, 0, 53, 9, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.July, 3, 0, 53, 9, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.July, 3, 0, 53, 9, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.July, 3, 0, 53, 9, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.250.2.183", PodIP:"100.64.1.165", PodIPs:[]v1.PodIP{v1.PodIP{IP:"100.64.1.165"}}, StartTime:time.Date(2022, time.July, 3, 0, 53, 9, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000938690)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000938700)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"containerd://e21c2cca0dc203dc06652a35c833078246d46c10cc373af72ec067aaa4e31640", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0058eef80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0058eef40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.7", ImageID:"", ContainerID:"", Started:(*bool)(0xc00367c06f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jul  3 00:53:51.173: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-674" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":356,"completed":237,"skipped":4289,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:53:51.183: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-6477
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:53:53.329: INFO: Deleting pod "var-expansion-f7dc3da3-a4e2-40b2-aacf-1a292b2494de" in namespace "var-expansion-6477"
Jul  3 00:53:53.333: INFO: Wait up to 5m0s for pod "var-expansion-f7dc3da3-a4e2-40b2-aacf-1a292b2494de" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul  3 00:53:55.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6477" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":356,"completed":238,"skipped":4297,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:53:55.352: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-6890
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:53:57.513: INFO: Deleting pod "var-expansion-c7f84964-a0e2-45b1-a025-51d45f05fc61" in namespace "var-expansion-6890"
Jul  3 00:53:57.518: INFO: Wait up to 5m0s for pod "var-expansion-c7f84964-a0e2-45b1-a025-51d45f05fc61" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul  3 00:53:59.526: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6890" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":356,"completed":239,"skipped":4328,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:53:59.557: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-3738
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:54:00.523: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:54:03.546: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:54:03.551: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:54:06.823: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-3738" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
•{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":356,"completed":240,"skipped":4339,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:54:06.865: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-141
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with configMap that has name projected-configmap-test-upd-dc011589-0091-446a-bb37-14e2d691dfa3
STEP: Creating the pod
Jul  3 00:54:07.018: INFO: The status of Pod pod-projected-configmaps-6efe0ab4-3d30-4fe0-abb5-2157f10352f7 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 00:54:09.032: INFO: The status of Pod pod-projected-configmaps-6efe0ab4-3d30-4fe0-abb5-2157f10352f7 is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-dc011589-0091-446a-bb37-14e2d691dfa3
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul  3 00:54:11.099: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-141" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":241,"skipped":4370,"failed":0}
SSS
------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:54:11.110: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-7130
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jul  3 00:54:13.969: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-7130" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":356,"completed":242,"skipped":4373,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:54:14.066: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7398
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Jul  3 00:54:14.206: INFO: Waiting up to 5m0s for pod "pod-f874d086-ba7b-4e14-8eab-7845b8f23c54" in namespace "emptydir-7398" to be "Succeeded or Failed"
Jul  3 00:54:14.210: INFO: Pod "pod-f874d086-ba7b-4e14-8eab-7845b8f23c54": Phase="Pending", Reason="", readiness=false. Elapsed: 4.351687ms
Jul  3 00:54:16.214: INFO: Pod "pod-f874d086-ba7b-4e14-8eab-7845b8f23c54": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008689528s
Jul  3 00:54:18.219: INFO: Pod "pod-f874d086-ba7b-4e14-8eab-7845b8f23c54": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013507562s
STEP: Saw pod success
Jul  3 00:54:18.219: INFO: Pod "pod-f874d086-ba7b-4e14-8eab-7845b8f23c54" satisfied condition "Succeeded or Failed"
Jul  3 00:54:18.223: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-f874d086-ba7b-4e14-8eab-7845b8f23c54 container test-container: <nil>
STEP: delete the pod
Jul  3 00:54:18.240: INFO: Waiting for pod pod-f874d086-ba7b-4e14-8eab-7845b8f23c54 to disappear
Jul  3 00:54:18.243: INFO: Pod pod-f874d086-ba7b-4e14-8eab-7845b8f23c54 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 00:54:18.244: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7398" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":243,"skipped":4394,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:54:18.253: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-5896
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
Jul  3 00:54:18.400: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Jul  3 00:54:18.413: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-5896" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":356,"completed":244,"skipped":4405,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:54:18.424: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-9657
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9657.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-9657.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9657.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9657.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul  3 00:54:20.752: INFO: DNS probes using dns-9657/dns-test-8e5383fa-12bc-496d-a51e-5b4003dc0de8 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul  3 00:54:20.767: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-9657" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [Conformance]","total":356,"completed":245,"skipped":4419,"failed":0}
SSSS
------------------------------
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:54:20.777: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-5866
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Jul  3 00:54:20.958: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-5866" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":246,"skipped":4423,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:54:20.967: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-6172
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:54:21.098: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:54:24.215: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-6172" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":356,"completed":247,"skipped":4457,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:54:24.226: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-5669
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jul  3 00:54:24.374: INFO: Waiting up to 1m0s for all nodes to be ready
Jul  3 00:55:24.417: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Jul  3 00:55:24.443: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jul  3 00:55:24.455: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jul  3 00:55:24.499: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jul  3 00:55:24.512: INFO: Created pod: pod1-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:55:38.604: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-5669" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80
•{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":356,"completed":248,"skipped":4501,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:55:38.646: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-4442
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4442.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4442.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4442.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4442.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4442.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4442.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4442.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4442.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4442.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 61.128.111.100.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/100.111.128.61_udp@PTR;check="$$(dig +tcp +noall +answer +search 61.128.111.100.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/100.111.128.61_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4442.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4442.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4442.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4442.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4442.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4442.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4442.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4442.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4442.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4442.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 61.128.111.100.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/100.111.128.61_udp@PTR;check="$$(dig +tcp +noall +answer +search 61.128.111.100.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/100.111.128.61_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul  3 00:55:40.875: INFO: Unable to read wheezy_udp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:40.883: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:40.928: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:40.936: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:40.967: INFO: Unable to read jessie_udp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:40.973: INFO: Unable to read jessie_tcp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:40.979: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:40.986: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:41.012: INFO: Lookups using dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1 failed for: [wheezy_udp@dns-test-service.dns-4442.svc.cluster.local wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local jessie_udp@dns-test-service.dns-4442.svc.cluster.local jessie_tcp@dns-test-service.dns-4442.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local]

Jul  3 00:55:46.022: INFO: Unable to read wheezy_udp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:46.029: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:46.078: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:46.085: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:46.156: INFO: Unable to read jessie_udp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:46.163: INFO: Unable to read jessie_tcp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:46.169: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:46.176: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:46.201: INFO: Lookups using dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1 failed for: [wheezy_udp@dns-test-service.dns-4442.svc.cluster.local wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local jessie_udp@dns-test-service.dns-4442.svc.cluster.local jessie_tcp@dns-test-service.dns-4442.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local]

Jul  3 00:55:51.021: INFO: Unable to read wheezy_udp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:51.028: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:51.034: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:51.079: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:51.117: INFO: Unable to read jessie_udp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:51.124: INFO: Unable to read jessie_tcp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:51.131: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:51.138: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:51.165: INFO: Lookups using dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1 failed for: [wheezy_udp@dns-test-service.dns-4442.svc.cluster.local wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local jessie_udp@dns-test-service.dns-4442.svc.cluster.local jessie_tcp@dns-test-service.dns-4442.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local]

Jul  3 00:55:56.020: INFO: Unable to read wheezy_udp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:56.027: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:56.071: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:56.077: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:56.107: INFO: Unable to read jessie_udp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:56.113: INFO: Unable to read jessie_tcp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:56.119: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:56.125: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:55:56.150: INFO: Lookups using dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1 failed for: [wheezy_udp@dns-test-service.dns-4442.svc.cluster.local wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local jessie_udp@dns-test-service.dns-4442.svc.cluster.local jessie_tcp@dns-test-service.dns-4442.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local]

Jul  3 00:56:01.022: INFO: Unable to read wheezy_udp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:01.028: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:01.071: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:01.078: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:01.111: INFO: Unable to read jessie_udp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:01.117: INFO: Unable to read jessie_tcp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:01.123: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:01.129: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:01.153: INFO: Lookups using dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1 failed for: [wheezy_udp@dns-test-service.dns-4442.svc.cluster.local wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local jessie_udp@dns-test-service.dns-4442.svc.cluster.local jessie_tcp@dns-test-service.dns-4442.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local]

Jul  3 00:56:06.022: INFO: Unable to read wheezy_udp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:06.028: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:06.035: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:06.079: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:06.111: INFO: Unable to read jessie_udp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:06.117: INFO: Unable to read jessie_tcp@dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:06.123: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:06.129: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local from pod dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1: the server could not find the requested resource (get pods dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1)
Jul  3 00:56:06.153: INFO: Lookups using dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1 failed for: [wheezy_udp@dns-test-service.dns-4442.svc.cluster.local wheezy_tcp@dns-test-service.dns-4442.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local jessie_udp@dns-test-service.dns-4442.svc.cluster.local jessie_tcp@dns-test-service.dns-4442.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4442.svc.cluster.local]

Jul  3 00:56:11.193: INFO: DNS probes using dns-4442/dns-test-3589e471-53fe-442f-bbab-9b8e80620ad1 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul  3 00:56:11.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-4442" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":356,"completed":249,"skipped":4557,"failed":0}

------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:56:11.243: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-6363
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-6363
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-6363
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6363
Jul  3 00:56:11.391: INFO: Found 0 stateful pods, waiting for 1
Jul  3 00:56:21.397: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
Jul  3 00:56:21.401: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-6363 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul  3 00:56:21.656: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul  3 00:56:21.656: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul  3 00:56:21.656: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul  3 00:56:21.660: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jul  3 00:56:31.665: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jul  3 00:56:31.665: INFO: Waiting for statefulset status.replicas updated to 0
Jul  3 00:56:31.683: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999787s
Jul  3 00:56:32.688: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.99605121s
Jul  3 00:56:33.695: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.990087469s
Jul  3 00:56:34.700: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.983843943s
Jul  3 00:56:35.705: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.978825401s
Jul  3 00:56:36.711: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.973528226s
Jul  3 00:56:37.716: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.968330434s
Jul  3 00:56:38.722: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.962657617s
Jul  3 00:56:39.730: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.957333597s
Jul  3 00:56:40.735: INFO: Verifying statefulset ss doesn't scale past 1 for another 949.022609ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6363
Jul  3 00:56:41.741: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-6363 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul  3 00:56:42.048: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul  3 00:56:42.048: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul  3 00:56:42.048: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul  3 00:56:42.054: INFO: Found 1 stateful pods, waiting for 3
Jul  3 00:56:52.060: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jul  3 00:56:52.060: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jul  3 00:56:52.060: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
Jul  3 00:56:52.069: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-6363 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul  3 00:56:52.368: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul  3 00:56:52.368: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul  3 00:56:52.368: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul  3 00:56:52.368: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-6363 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul  3 00:56:52.591: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul  3 00:56:52.591: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul  3 00:56:52.591: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul  3 00:56:52.591: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-6363 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul  3 00:56:52.825: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul  3 00:56:52.825: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul  3 00:56:52.825: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul  3 00:56:52.825: INFO: Waiting for statefulset status.replicas updated to 0
Jul  3 00:56:52.829: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
Jul  3 00:57:02.843: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jul  3 00:57:02.843: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jul  3 00:57:02.843: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jul  3 00:57:02.856: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999778s
Jul  3 00:57:03.862: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994842912s
Jul  3 00:57:04.867: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.989339949s
Jul  3 00:57:05.873: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984018346s
Jul  3 00:57:06.878: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.977808159s
Jul  3 00:57:07.884: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.973117309s
Jul  3 00:57:08.890: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.966492523s
Jul  3 00:57:09.896: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.961307998s
Jul  3 00:57:10.901: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.955300832s
Jul  3 00:57:11.907: INFO: Verifying statefulset ss doesn't scale past 3 for another 949.795264ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6363
Jul  3 00:57:12.912: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-6363 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul  3 00:57:13.148: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul  3 00:57:13.148: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul  3 00:57:13.148: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul  3 00:57:13.149: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-6363 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul  3 00:57:13.448: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul  3 00:57:13.448: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul  3 00:57:13.448: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul  3 00:57:13.448: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-6363 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul  3 00:57:13.680: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul  3 00:57:13.680: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul  3 00:57:13.680: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul  3 00:57:13.680: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul  3 00:57:23.699: INFO: Deleting all statefulset in ns statefulset-6363
Jul  3 00:57:23.703: INFO: Scaling statefulset ss to 0
Jul  3 00:57:23.714: INFO: Waiting for statefulset status.replicas updated to 0
Jul  3 00:57:23.717: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul  3 00:57:23.728: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-6363" for this suite.
•{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":356,"completed":250,"skipped":4557,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:57:23.739: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename prestop
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in prestop-4194
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating server pod server in namespace prestop-4194
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-4194
STEP: Deleting pre-stop pod
Jul  3 00:57:32.974: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  test/e2e/framework/framework.go:188
Jul  3 00:57:32.982: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-4194" for this suite.
•{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":356,"completed":251,"skipped":4609,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:57:32.993: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-351
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1334
STEP: creating the pod
Jul  3 00:57:33.124: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-351 create -f -'
Jul  3 00:57:34.058: INFO: stderr: ""
Jul  3 00:57:34.058: INFO: stdout: "pod/pause created\n"
Jul  3 00:57:34.058: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Jul  3 00:57:34.058: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-351" to be "running and ready"
Jul  3 00:57:34.062: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 3.451915ms
Jul  3 00:57:36.067: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.008258338s
Jul  3 00:57:36.067: INFO: Pod "pause" satisfied condition "running and ready"
Jul  3 00:57:36.067: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
STEP: adding the label testing-label with value testing-label-value to a pod
Jul  3 00:57:36.067: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-351 label pods pause testing-label=testing-label-value'
Jul  3 00:57:36.129: INFO: stderr: ""
Jul  3 00:57:36.129: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
Jul  3 00:57:36.129: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-351 get pod pause -L testing-label'
Jul  3 00:57:36.185: INFO: stderr: ""
Jul  3 00:57:36.185: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod
Jul  3 00:57:36.185: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-351 label pods pause testing-label-'
Jul  3 00:57:36.251: INFO: stderr: ""
Jul  3 00:57:36.252: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
Jul  3 00:57:36.252: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-351 get pod pause -L testing-label'
Jul  3 00:57:36.312: INFO: stderr: ""
Jul  3 00:57:36.312: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1340
STEP: using delete to clean up resources
Jul  3 00:57:36.312: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-351 delete --grace-period=0 --force -f -'
Jul  3 00:57:36.373: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul  3 00:57:36.373: INFO: stdout: "pod \"pause\" force deleted\n"
Jul  3 00:57:36.373: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-351 get rc,svc -l name=pause --no-headers'
Jul  3 00:57:36.433: INFO: stderr: "No resources found in kubectl-351 namespace.\n"
Jul  3 00:57:36.433: INFO: stdout: ""
Jul  3 00:57:36.434: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-351 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jul  3 00:57:36.491: INFO: stderr: ""
Jul  3 00:57:36.491: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 00:57:36.491: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-351" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":356,"completed":252,"skipped":4653,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:57:36.503: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2229
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name secret-emptykey-test-dd8e29f2-ee11-4a77-b941-d1a39e4b8ad4
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jul  3 00:57:36.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2229" for this suite.
•{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":356,"completed":253,"skipped":4669,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:57:36.647: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5825
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul  3 00:57:43.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5825" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":356,"completed":254,"skipped":4683,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:57:43.802: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-1185
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:57:43.932: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
Jul  3 00:57:44.961: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jul  3 00:57:45.969: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-1185" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":356,"completed":255,"skipped":4704,"failed":0}
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:57:45.981: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-5032
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jul  3 00:57:46.110: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jul  3 00:57:46.119: INFO: Waiting for terminating namespaces to be deleted...
Jul  3 00:57:46.124: INFO: 
Logging pods the apiserver thinks is on node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm before test
Jul  3 00:57:46.133: INFO: addons-nginx-ingress-controller-7c48bb6fc9-th97l from kube-system started at 2022-07-03 00:30:48 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container nginx-ingress-controller ready: true, restart count 0
Jul  3 00:57:46.133: INFO: apiserver-proxy-kjgqw from kube-system started at 2022-07-02 23:50:00 +0000 UTC (2 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container proxy ready: true, restart count 0
Jul  3 00:57:46.133: INFO: 	Container sidecar ready: true, restart count 0
Jul  3 00:57:46.133: INFO: blackbox-exporter-559b7f4b59-wjtp7 from kube-system started at 2022-07-03 00:28:06 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container blackbox-exporter ready: true, restart count 0
Jul  3 00:57:46.133: INFO: calico-kube-controllers-6959b48bb7-h9nqq from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Jul  3 00:57:46.133: INFO: calico-node-lrbdv from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container calico-node ready: true, restart count 0
Jul  3 00:57:46.133: INFO: csi-driver-node-d66gz from kube-system started at 2022-07-02 23:50:00 +0000 UTC (3 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container csi-driver ready: true, restart count 0
Jul  3 00:57:46.133: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Jul  3 00:57:46.133: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Jul  3 00:57:46.133: INFO: egress-filter-applier-hh2tw from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container egress-filter-applier ready: true, restart count 0
Jul  3 00:57:46.133: INFO: kube-proxy-worker-1-v1.24.2-2xlkb from kube-system started at 2022-07-03 00:07:07 +0000 UTC (2 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container conntrack-fix ready: true, restart count 0
Jul  3 00:57:46.133: INFO: 	Container kube-proxy ready: true, restart count 0
Jul  3 00:57:46.133: INFO: node-exporter-sxs7w from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container node-exporter ready: true, restart count 0
Jul  3 00:57:46.133: INFO: node-problem-detector-jrk7n from kube-system started at 2022-07-03 00:17:07 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container node-problem-detector ready: true, restart count 0
Jul  3 00:57:46.133: INFO: tester from prestop-4194 started at 2022-07-03 00:57:25 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container tester ready: true, restart count 0
Jul  3 00:57:46.133: INFO: condition-test-9stlk from replication-controller-1185 started at 2022-07-03 00:57:44 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container httpd ready: true, restart count 0
Jul  3 00:57:46.133: INFO: condition-test-hpjnw from replication-controller-1185 started at 2022-07-03 00:57:44 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.133: INFO: 	Container httpd ready: true, restart count 0
Jul  3 00:57:46.133: INFO: 
Logging pods the apiserver thinks is on node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b before test
Jul  3 00:57:46.145: INFO: addons-nginx-ingress-nginx-ingress-k8s-backend-b6c66fdff-dl2h7 from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container nginx-ingress-nginx-ingress-k8s-backend ready: true, restart count 0
Jul  3 00:57:46.145: INFO: apiserver-proxy-mgzwv from kube-system started at 2022-07-02 23:49:52 +0000 UTC (2 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container proxy ready: true, restart count 0
Jul  3 00:57:46.145: INFO: 	Container sidecar ready: true, restart count 0
Jul  3 00:57:46.145: INFO: blackbox-exporter-559b7f4b59-gbx7j from kube-system started at 2022-07-03 00:29:06 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container blackbox-exporter ready: true, restart count 0
Jul  3 00:57:46.145: INFO: calico-node-dvrpl from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container calico-node ready: true, restart count 0
Jul  3 00:57:46.145: INFO: calico-node-vertical-autoscaler-5b74b8f994-4v6kp from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container autoscaler ready: true, restart count 0
Jul  3 00:57:46.145: INFO: calico-typha-deploy-7f646d87dc-5lzhs from kube-system started at 2022-07-02 23:51:00 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container calico-typha ready: true, restart count 0
Jul  3 00:57:46.145: INFO: calico-typha-horizontal-autoscaler-55ff99f5cf-tnn7q from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container autoscaler ready: true, restart count 0
Jul  3 00:57:46.145: INFO: calico-typha-vertical-autoscaler-78b946fc85-9vzmk from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container autoscaler ready: true, restart count 0
Jul  3 00:57:46.145: INFO: coredns-7f6bdd8558-68vlm from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container coredns ready: true, restart count 0
Jul  3 00:57:46.145: INFO: coredns-7f6bdd8558-p4gr6 from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container coredns ready: true, restart count 0
Jul  3 00:57:46.145: INFO: csi-driver-node-w722v from kube-system started at 2022-07-02 23:49:52 +0000 UTC (3 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container csi-driver ready: true, restart count 0
Jul  3 00:57:46.145: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Jul  3 00:57:46.145: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Jul  3 00:57:46.145: INFO: egress-filter-applier-6m5b7 from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container egress-filter-applier ready: true, restart count 0
Jul  3 00:57:46.145: INFO: kube-proxy-worker-1-v1.24.2-msvh8 from kube-system started at 2022-07-03 00:07:07 +0000 UTC (2 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container conntrack-fix ready: true, restart count 0
Jul  3 00:57:46.145: INFO: 	Container kube-proxy ready: true, restart count 0
Jul  3 00:57:46.145: INFO: metrics-server-6654459fc6-4f92g from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container metrics-server ready: true, restart count 0
Jul  3 00:57:46.145: INFO: node-exporter-f95js from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container node-exporter ready: true, restart count 0
Jul  3 00:57:46.145: INFO: node-problem-detector-kbbjx from kube-system started at 2022-07-03 00:17:07 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container node-problem-detector ready: true, restart count 0
Jul  3 00:57:46.145: INFO: vpn-shoot-7788586576-q5cf7 from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container vpn-shoot ready: true, restart count 0
Jul  3 00:57:46.145: INFO: dashboard-metrics-scraper-9c4f98cd5-cwln9 from kubernetes-dashboard started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Jul  3 00:57:46.145: INFO: kubernetes-dashboard-789c777b5c-8wjzk from kubernetes-dashboard started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 00:57:46.145: INFO: 	Container kubernetes-dashboard ready: true, restart count 4
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-0af806fc-e904-4fb8-9604-c2c853a6df83 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-0af806fc-e904-4fb8-9604-c2c853a6df83 off the node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
STEP: verifying the node doesn't have the label kubernetes.io/e2e-0af806fc-e904-4fb8-9604-c2c853a6df83
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:57:50.238: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-5032" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":356,"completed":256,"skipped":4709,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:57:50.248: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-7802
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:57:50.401: INFO: Create a RollingUpdate DaemonSet
Jul  3 00:57:50.406: INFO: Check that daemon pods launch on every node of the cluster
Jul  3 00:57:50.413: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 00:57:50.413: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm is running 0 daemon pod, expected 1
Jul  3 00:57:51.426: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 00:57:51.426: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm is running 0 daemon pod, expected 1
Jul  3 00:57:52.424: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul  3 00:57:52.424: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
Jul  3 00:57:52.424: INFO: Update the DaemonSet to trigger a rollout
Jul  3 00:57:52.433: INFO: Updating DaemonSet daemon-set
Jul  3 00:57:55.456: INFO: Roll back the DaemonSet before rollout is complete
Jul  3 00:57:55.465: INFO: Updating DaemonSet daemon-set
Jul  3 00:57:55.465: INFO: Make sure DaemonSet rollback is complete
Jul  3 00:57:55.468: INFO: Wrong image for pod: daemon-set-4rngs. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
Jul  3 00:57:55.468: INFO: Pod daemon-set-4rngs is not available
Jul  3 00:57:58.479: INFO: Pod daemon-set-t55hc is not available
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7802, will wait for the garbage collector to delete the pods
Jul  3 00:57:58.557: INFO: Deleting DaemonSet.extensions daemon-set took: 11.923346ms
Jul  3 00:57:58.658: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.873354ms
Jul  3 00:58:00.761: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 00:58:00.761: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jul  3 00:58:00.765: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33563"},"items":null}

Jul  3 00:58:00.768: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33563"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul  3 00:58:00.784: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-7802" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":356,"completed":257,"skipped":4762,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:58:00.793: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7182
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul  3 00:58:28.968: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7182" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":356,"completed":258,"skipped":4821,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:58:28.979: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-3106
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Jul  3 00:58:29.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-3106" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":259,"skipped":4865,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:58:29.149: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6428
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 00:58:29.658: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 00:58:32.679: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:58:33.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6428" for this suite.
STEP: Destroying namespace "webhook-6428-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":356,"completed":260,"skipped":4871,"failed":0}

------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:58:33.118: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-2791
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 00:58:33.252: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 00:58:33.790: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-2791" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":356,"completed":261,"skipped":4871,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:58:33.800: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-8096
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jul  3 00:58:33.956: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-8096" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]","total":356,"completed":262,"skipped":4884,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:58:33.965: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4726
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:58:34.105: INFO: Waiting up to 5m0s for pod "downwardapi-volume-03df2177-c1ad-4c90-879b-239c3c2af95a" in namespace "projected-4726" to be "Succeeded or Failed"
Jul  3 00:58:34.109: INFO: Pod "downwardapi-volume-03df2177-c1ad-4c90-879b-239c3c2af95a": Phase="Pending", Reason="", readiness=false. Elapsed: 3.418716ms
Jul  3 00:58:36.115: INFO: Pod "downwardapi-volume-03df2177-c1ad-4c90-879b-239c3c2af95a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009820405s
Jul  3 00:58:38.120: INFO: Pod "downwardapi-volume-03df2177-c1ad-4c90-879b-239c3c2af95a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014250735s
STEP: Saw pod success
Jul  3 00:58:38.120: INFO: Pod "downwardapi-volume-03df2177-c1ad-4c90-879b-239c3c2af95a" satisfied condition "Succeeded or Failed"
Jul  3 00:58:38.123: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-03df2177-c1ad-4c90-879b-239c3c2af95a container client-container: <nil>
STEP: delete the pod
Jul  3 00:58:38.184: INFO: Waiting for pod downwardapi-volume-03df2177-c1ad-4c90-879b-239c3c2af95a to disappear
Jul  3 00:58:38.187: INFO: Pod downwardapi-volume-03df2177-c1ad-4c90-879b-239c3c2af95a no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul  3 00:58:38.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4726" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":263,"skipped":4899,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:58:38.198: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2513
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 00:58:38.341: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c7b37a23-2683-4ff7-b84b-d2a2c02c1d53" in namespace "projected-2513" to be "Succeeded or Failed"
Jul  3 00:58:38.345: INFO: Pod "downwardapi-volume-c7b37a23-2683-4ff7-b84b-d2a2c02c1d53": Phase="Pending", Reason="", readiness=false. Elapsed: 4.455094ms
Jul  3 00:58:40.350: INFO: Pod "downwardapi-volume-c7b37a23-2683-4ff7-b84b-d2a2c02c1d53": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009562578s
Jul  3 00:58:42.356: INFO: Pod "downwardapi-volume-c7b37a23-2683-4ff7-b84b-d2a2c02c1d53": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015237796s
STEP: Saw pod success
Jul  3 00:58:42.356: INFO: Pod "downwardapi-volume-c7b37a23-2683-4ff7-b84b-d2a2c02c1d53" satisfied condition "Succeeded or Failed"
Jul  3 00:58:42.361: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-c7b37a23-2683-4ff7-b84b-d2a2c02c1d53 container client-container: <nil>
STEP: delete the pod
Jul  3 00:58:42.377: INFO: Waiting for pod downwardapi-volume-c7b37a23-2683-4ff7-b84b-d2a2c02c1d53 to disappear
Jul  3 00:58:42.380: INFO: Pod downwardapi-volume-c7b37a23-2683-4ff7-b84b-d2a2c02c1d53 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul  3 00:58:42.380: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2513" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":264,"skipped":4933,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:58:42.392: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-1843
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
Jul  3 00:58:42.561: INFO: observed Pod pod-test in namespace pods-1843 in phase Pending with labels: map[test-pod-static:true] & conditions []
Jul  3 00:58:42.561: INFO: observed Pod pod-test in namespace pods-1843 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:42 +0000 UTC  }]
Jul  3 00:58:42.574: INFO: observed Pod pod-test in namespace pods-1843 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:42 +0000 UTC  }]
Jul  3 00:58:42.990: INFO: observed Pod pod-test in namespace pods-1843 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:42 +0000 UTC  }]
Jul  3 00:58:43.904: INFO: Found Pod pod-test in namespace pods-1843 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:42 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:43 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:43 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 00:58:42 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
Jul  3 00:58:43.939: INFO: observed event type MODIFIED
Jul  3 00:58:45.912: INFO: observed event type MODIFIED
Jul  3 00:58:46.093: INFO: observed event type MODIFIED
Jul  3 00:58:46.913: INFO: observed event type MODIFIED
Jul  3 00:58:46.920: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul  3 00:58:46.924: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-1843" for this suite.
•{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":356,"completed":265,"skipped":4943,"failed":0}
SS
------------------------------
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:58:46.934: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-6075
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
Jul  3 00:59:07.163: INFO: EndpointSlice for Service endpointslice-6075/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jul  3 00:59:17.177: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-6075" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":356,"completed":266,"skipped":4945,"failed":0}
SSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:59:17.189: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-3307
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:188
Jul  3 00:59:17.336: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-3307" for this suite.
•{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":356,"completed":267,"skipped":4950,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:59:17.347: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-4157
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
Jul  3 00:59:17.490: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4157  d4aee29e-5007-46ee-a1d4-88b19fbc7500 34204 0 2022-07-03 00:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-03 00:59:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:59:17.490: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4157  d4aee29e-5007-46ee-a1d4-88b19fbc7500 34204 0 2022-07-03 00:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-03 00:59:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
Jul  3 00:59:17.497: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4157  d4aee29e-5007-46ee-a1d4-88b19fbc7500 34205 0 2022-07-03 00:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-03 00:59:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:59:17.497: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4157  d4aee29e-5007-46ee-a1d4-88b19fbc7500 34205 0 2022-07-03 00:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-03 00:59:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
Jul  3 00:59:17.506: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4157  d4aee29e-5007-46ee-a1d4-88b19fbc7500 34206 0 2022-07-03 00:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-03 00:59:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:59:17.506: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4157  d4aee29e-5007-46ee-a1d4-88b19fbc7500 34206 0 2022-07-03 00:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-03 00:59:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
Jul  3 00:59:17.511: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4157  d4aee29e-5007-46ee-a1d4-88b19fbc7500 34207 0 2022-07-03 00:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-03 00:59:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:59:17.511: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4157  d4aee29e-5007-46ee-a1d4-88b19fbc7500 34207 0 2022-07-03 00:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-03 00:59:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
Jul  3 00:59:17.515: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4157  d6526279-29c9-47ff-8d7f-92fc5ae2d170 34208 0 2022-07-03 00:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-07-03 00:59:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:59:17.515: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4157  d6526279-29c9-47ff-8d7f-92fc5ae2d170 34208 0 2022-07-03 00:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-07-03 00:59:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
Jul  3 00:59:27.520: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4157  d6526279-29c9-47ff-8d7f-92fc5ae2d170 34283 0 2022-07-03 00:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-07-03 00:59:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jul  3 00:59:27.520: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4157  d6526279-29c9-47ff-8d7f-92fc5ae2d170 34283 0 2022-07-03 00:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-07-03 00:59:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jul  3 00:59:37.524: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-4157" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":356,"completed":268,"skipped":4956,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:59:37.537: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-4420
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4420
[It] should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-4420
Jul  3 00:59:37.685: INFO: Found 0 stateful pods, waiting for 1
Jul  3 00:59:47.695: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul  3 00:59:47.723: INFO: Deleting all statefulset in ns statefulset-4420
Jul  3 00:59:47.727: INFO: Scaling statefulset ss to 0
Jul  3 00:59:57.745: INFO: Waiting for statefulset status.replicas updated to 0
Jul  3 00:59:57.749: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul  3 00:59:57.760: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4420" for this suite.
•{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":356,"completed":269,"skipped":5014,"failed":0}
SSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 00:59:57.770: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-5990
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test service account token: 
Jul  3 00:59:57.912: INFO: Waiting up to 5m0s for pod "test-pod-0b419c6c-4634-4579-ad06-8ddf668852ff" in namespace "svcaccounts-5990" to be "Succeeded or Failed"
Jul  3 00:59:57.916: INFO: Pod "test-pod-0b419c6c-4634-4579-ad06-8ddf668852ff": Phase="Pending", Reason="", readiness=false. Elapsed: 3.717815ms
Jul  3 00:59:59.921: INFO: Pod "test-pod-0b419c6c-4634-4579-ad06-8ddf668852ff": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008733984s
Jul  3 01:00:01.926: INFO: Pod "test-pod-0b419c6c-4634-4579-ad06-8ddf668852ff": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013984411s
STEP: Saw pod success
Jul  3 01:00:01.927: INFO: Pod "test-pod-0b419c6c-4634-4579-ad06-8ddf668852ff" satisfied condition "Succeeded or Failed"
Jul  3 01:00:01.931: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod test-pod-0b419c6c-4634-4579-ad06-8ddf668852ff container agnhost-container: <nil>
STEP: delete the pod
Jul  3 01:00:01.953: INFO: Waiting for pod test-pod-0b419c6c-4634-4579-ad06-8ddf668852ff to disappear
Jul  3 01:00:01.956: INFO: Pod test-pod-0b419c6c-4634-4579-ad06-8ddf668852ff no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jul  3 01:00:01.956: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-5990" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":356,"completed":270,"skipped":5019,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:00:01.968: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5243
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5243
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-5243
STEP: creating replication controller externalsvc in namespace services-5243
I0703 01:00:02.135046    4513 runners.go:193] Created replication controller with name: externalsvc, namespace: services-5243, replica count: 2
I0703 01:00:05.187009    4513 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
Jul  3 01:00:05.206: INFO: Creating new exec pod
Jul  3 01:00:07.400: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-5243 exec execpod9mwl4 -- /bin/sh -x -c nslookup clusterip-service.services-5243.svc.cluster.local'
Jul  3 01:00:07.702: INFO: stderr: "+ nslookup clusterip-service.services-5243.svc.cluster.local\n"
Jul  3 01:00:07.702: INFO: stdout: "Server:\t\t100.104.0.10\nAddress:\t100.104.0.10#53\n\nclusterip-service.services-5243.svc.cluster.local\tcanonical name = externalsvc.services-5243.svc.cluster.local.\nName:\texternalsvc.services-5243.svc.cluster.local\nAddress: 100.107.77.77\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-5243, will wait for the garbage collector to delete the pods
Jul  3 01:00:07.764: INFO: Deleting ReplicationController externalsvc took: 7.537075ms
Jul  3 01:00:07.865: INFO: Terminating ReplicationController externalsvc pods took: 100.744987ms
Jul  3 01:00:09.499: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 01:00:09.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5243" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":356,"completed":271,"skipped":5057,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:00:09.518: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9889
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-9889/configmap-test-b2bd1095-d9f1-4850-8879-c3d13d75f717
STEP: Creating a pod to test consume configMaps
Jul  3 01:00:09.663: INFO: Waiting up to 5m0s for pod "pod-configmaps-ee2dc3e7-7a91-4cb7-87fc-f072e2f5b8f5" in namespace "configmap-9889" to be "Succeeded or Failed"
Jul  3 01:00:09.670: INFO: Pod "pod-configmaps-ee2dc3e7-7a91-4cb7-87fc-f072e2f5b8f5": Phase="Pending", Reason="", readiness=false. Elapsed: 7.037766ms
Jul  3 01:00:11.674: INFO: Pod "pod-configmaps-ee2dc3e7-7a91-4cb7-87fc-f072e2f5b8f5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011273633s
Jul  3 01:00:13.680: INFO: Pod "pod-configmaps-ee2dc3e7-7a91-4cb7-87fc-f072e2f5b8f5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016860984s
STEP: Saw pod success
Jul  3 01:00:13.680: INFO: Pod "pod-configmaps-ee2dc3e7-7a91-4cb7-87fc-f072e2f5b8f5" satisfied condition "Succeeded or Failed"
Jul  3 01:00:13.684: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-configmaps-ee2dc3e7-7a91-4cb7-87fc-f072e2f5b8f5 container env-test: <nil>
STEP: delete the pod
Jul  3 01:00:13.702: INFO: Waiting for pod pod-configmaps-ee2dc3e7-7a91-4cb7-87fc-f072e2f5b8f5 to disappear
Jul  3 01:00:13.705: INFO: Pod pod-configmaps-ee2dc3e7-7a91-4cb7-87fc-f072e2f5b8f5 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 01:00:13.705: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9889" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":272,"skipped":5090,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:00:13.716: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-9156
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul  3 01:01:13.872: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-9156" for this suite.
•{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":356,"completed":273,"skipped":5132,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:01:13.884: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2670
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating cluster-info
Jul  3 01:01:14.018: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2670 cluster-info'
Jul  3 01:01:14.079: INFO: stderr: ""
Jul  3 01:01:14.079: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 01:01:14.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2670" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":356,"completed":274,"skipped":5180,"failed":0}
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:01:14.092: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1020
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Jul  3 01:01:14.236: INFO: Waiting up to 5m0s for pod "pod-a619cc5c-25c9-4d25-948a-7a8d6b3c1dd4" in namespace "emptydir-1020" to be "Succeeded or Failed"
Jul  3 01:01:14.241: INFO: Pod "pod-a619cc5c-25c9-4d25-948a-7a8d6b3c1dd4": Phase="Pending", Reason="", readiness=false. Elapsed: 5.533815ms
Jul  3 01:01:16.247: INFO: Pod "pod-a619cc5c-25c9-4d25-948a-7a8d6b3c1dd4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01124028s
Jul  3 01:01:18.253: INFO: Pod "pod-a619cc5c-25c9-4d25-948a-7a8d6b3c1dd4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016842292s
STEP: Saw pod success
Jul  3 01:01:18.253: INFO: Pod "pod-a619cc5c-25c9-4d25-948a-7a8d6b3c1dd4" satisfied condition "Succeeded or Failed"
Jul  3 01:01:18.258: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-a619cc5c-25c9-4d25-948a-7a8d6b3c1dd4 container test-container: <nil>
STEP: delete the pod
Jul  3 01:01:18.276: INFO: Waiting for pod pod-a619cc5c-25c9-4d25-948a-7a8d6b3c1dd4 to disappear
Jul  3 01:01:18.280: INFO: Pod pod-a619cc5c-25c9-4d25-948a-7a8d6b3c1dd4 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 01:01:18.280: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1020" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":275,"skipped":5187,"failed":0}
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:01:18.291: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-1263
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jul  3 01:01:21.459: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jul  3 01:01:21.469: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-1263" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":276,"skipped":5192,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:01:21.481: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename aggregator
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in aggregator-8827
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:79
Jul  3 01:01:21.612: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the sample API server.
Jul  3 01:01:21.947: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
Jul  3 01:01:23.988: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul  3 01:01:25.992: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul  3 01:01:27.993: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul  3 01:01:29.994: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 3, 1, 1, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul  3 01:01:32.218: INFO: Waited 218.770522ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
Jul  3 01:01:32.418: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:69
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:188
Jul  3 01:01:32.923: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-8827" for this suite.
•{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":356,"completed":277,"skipped":5198,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:01:33.026: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2167
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:01:33.170: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2167 create -f -'
Jul  3 01:01:33.986: INFO: stderr: ""
Jul  3 01:01:33.986: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Jul  3 01:01:33.986: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2167 create -f -'
Jul  3 01:01:34.138: INFO: stderr: ""
Jul  3 01:01:34.138: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jul  3 01:01:35.143: INFO: Selector matched 1 pods for map[app:agnhost]
Jul  3 01:01:35.143: INFO: Found 0 / 1
Jul  3 01:01:36.143: INFO: Selector matched 1 pods for map[app:agnhost]
Jul  3 01:01:36.143: INFO: Found 1 / 1
Jul  3 01:01:36.144: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jul  3 01:01:36.148: INFO: Selector matched 1 pods for map[app:agnhost]
Jul  3 01:01:36.148: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jul  3 01:01:36.148: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2167 describe pod agnhost-primary-xz4v7'
Jul  3 01:01:36.211: INFO: stderr: ""
Jul  3 01:01:36.211: INFO: stdout: "Name:         agnhost-primary-xz4v7\nNamespace:    kubectl-2167\nPriority:     0\nNode:         shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm/10.250.2.183\nStart Time:   Sun, 03 Jul 2022 01:01:34 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  cni.projectcalico.org/containerID: 70bcfd1026dc86d6872c7514cfa965e61fa60d000c98facfbd54f031f4fe744c\n              cni.projectcalico.org/podIP: 100.64.1.203/32\n              cni.projectcalico.org/podIPs: 100.64.1.203/32\n              kubernetes.io/psp: e2e-test-privileged-psp\nStatus:       Running\nIP:           100.64.1.203\nIPs:\n  IP:           100.64.1.203\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://7e446c92499247f2dd265572db544e9b16da89975d09c1742f0b45e86a2ce05c\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sun, 03 Jul 2022 01:01:34 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:\n      KUBERNETES_SERVICE_HOST:  api.tmffe-jrp.it.internal.staging.k8s.ondemand.com\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-8wqv2 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-8wqv2:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-2167/agnhost-primary-xz4v7 to shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm\n  Normal  Pulled     2s    kubelet            Container image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
Jul  3 01:01:36.211: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2167 describe rc agnhost-primary'
Jul  3 01:01:36.276: INFO: stderr: ""
Jul  3 01:01:36.276: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2167\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-xz4v7\n"
Jul  3 01:01:36.276: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2167 describe service agnhost-primary'
Jul  3 01:01:36.341: INFO: stderr: ""
Jul  3 01:01:36.341: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-2167\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                100.107.87.205\nIPs:               100.107.87.205\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         100.64.1.203:6379\nSession Affinity:  None\nEvents:            <none>\n"
Jul  3 01:01:36.347: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2167 describe node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm'
Jul  3 01:01:36.436: INFO: stderr: ""
Jul  3 01:01:36.436: INFO: stdout: "Name:               shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=g_c2_m4\n                    beta.kubernetes.io/os=linux\n                    failure-domain.beta.kubernetes.io/region=eu-nl-1\n                    failure-domain.beta.kubernetes.io/zone=eu-nl-1a\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm\n                    kubernetes.io/os=linux\n                    networking.gardener.cloud/node-local-dns-enabled=false\n                    node.kubernetes.io/instance-type=g_c2_m4\n                    node.kubernetes.io/role=node\n                    topology.cinder.csi.openstack.org/zone=eu-nl-1a\n                    topology.kubernetes.io/region=eu-nl-1\n                    topology.kubernetes.io/zone=eu-nl-1a\n                    worker.garden.sapcloud.io/group=worker-1\n                    worker.gardener.cloud/cri-name=containerd\n                    worker.gardener.cloud/kubernetes-version=1.24.2\n                    worker.gardener.cloud/pool=worker-1\n                    worker.gardener.cloud/system-components=true\nAnnotations:        checksum/cloud-config-data: c62b0bcf175135788ecb94f8822f36cc2f7b0694cbb1383158ac504a0f7aba3b\n                    csi.volume.kubernetes.io/nodeid: {\"cinder.csi.openstack.org\":\"1e7f60e7-52c3-4e82-9ab0-32890be6558e\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    node.machine.sapcloud.io/last-applied-anno-labels-taints:\n                      {\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"networking.gardener.cloud/node-local-dns-enabled\":\"false\",\"node.kubernetes.io/role\":\"node...\n                    projectcalico.org/IPv4Address: 10.250.2.183/19\n                    projectcalico.org/IPv4IPIPTunnelAddr: 100.64.1.1\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 02 Jul 2022 23:49:52 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm\n  AcquireTime:     <unset>\n  RenewTime:       Sun, 03 Jul 2022 01:01:29 +0000\nConditions:\n  Type                          Status  LastHeartbeatTime                 LastTransitionTime                Reason                          Message\n  ----                          ------  -----------------                 ------------------                ------                          -------\n  ReadonlyFilesystem            False   Sun, 03 Jul 2022 00:57:13 +0000   Sun, 03 Jul 2022 00:17:08 +0000   FilesystemIsNotReadOnly         Filesystem is not read-only\n  CorruptDockerOverlay2         False   Sun, 03 Jul 2022 00:57:13 +0000   Sun, 03 Jul 2022 00:17:08 +0000   NoCorruptDockerOverlay2         docker overlay2 is functioning properly\n  FrequentUnregisterNetDevice   False   Sun, 03 Jul 2022 00:57:13 +0000   Sun, 03 Jul 2022 00:17:08 +0000   NoFrequentUnregisterNetDevice   node is functioning properly\n  FrequentKubeletRestart        False   Sun, 03 Jul 2022 00:57:13 +0000   Sun, 03 Jul 2022 00:17:08 +0000   NoFrequentKubeletRestart        kubelet is functioning properly\n  FrequentDockerRestart         False   Sun, 03 Jul 2022 00:57:13 +0000   Sun, 03 Jul 2022 00:17:08 +0000   NoFrequentDockerRestart         docker is functioning properly\n  FrequentContainerdRestart     False   Sun, 03 Jul 2022 00:57:13 +0000   Sun, 03 Jul 2022 00:17:08 +0000   NoFrequentContainerdRestart     containerd is functioning properly\n  KernelDeadlock                False   Sun, 03 Jul 2022 00:57:13 +0000   Sun, 03 Jul 2022 00:17:08 +0000   KernelHasNoDeadlock             kernel has no deadlock\n  NetworkUnavailable            False   Sat, 02 Jul 2022 23:50:43 +0000   Sat, 02 Jul 2022 23:50:43 +0000   CalicoIsUp                      Calico is running on this node\n  MemoryPressure                False   Sun, 03 Jul 2022 01:01:35 +0000   Sat, 02 Jul 2022 23:49:52 +0000   KubeletHasSufficientMemory      kubelet has sufficient memory available\n  DiskPressure                  False   Sun, 03 Jul 2022 01:01:35 +0000   Sat, 02 Jul 2022 23:49:52 +0000   KubeletHasNoDiskPressure        kubelet has no disk pressure\n  PIDPressure                   False   Sun, 03 Jul 2022 01:01:35 +0000   Sat, 02 Jul 2022 23:49:52 +0000   KubeletHasSufficientPID         kubelet has sufficient PID available\n  Ready                         True    Sun, 03 Jul 2022 01:01:35 +0000   Sat, 02 Jul 2022 23:50:33 +0000   KubeletReady                    kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.250.2.183\n  Hostname:    shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      64873756Ki\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 4011448Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    1920m\n  ephemeral-storage:      63109189788\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 2860472Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 cdfa62da745f47bf870398c757e89896\n  System UUID:                7a730142-2d50-7af7-2b3b-d9e0273a6f8b\n  Boot ID:                    549fd166-e8b3-41a2-9418-00bf650114a2\n  Kernel Version:             5.10.123-garden-cloud-amd64\n  OS Image:                   Garden Linux 576.10\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.5.11\n  Kubelet Version:            v1.24.2\n  Kube-Proxy Version:         v1.24.2\nPodCIDR:                      100.64.1.0/24\nPodCIDRs:                     100.64.1.0/24\nProviderID:                   openstack:///1e7f60e7-52c3-4e82-9ab0-32890be6558e\nNon-terminated Pods:          (11 in total)\n  Namespace                   Name                                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                ------------  ----------  ---------------  -------------  ---\n  kube-system                 addons-nginx-ingress-controller-7c48bb6fc9-th97l    100m (5%)     0 (0%)      128Mi (4%)       4Gi (146%)     30m\n  kube-system                 apiserver-proxy-kjgqw                               40m (2%)      0 (0%)      40Mi (1%)        1114Mi (39%)   71m\n  kube-system                 blackbox-exporter-559b7f4b59-wjtp7                  11m (0%)      0 (0%)      23574998 (0%)    150Mi (5%)     33m\n  kube-system                 calico-kube-controllers-6959b48bb7-h9nqq            10m (0%)      0 (0%)      50Mi (1%)        2Gi (73%)      73m\n  kube-system                 calico-node-lrbdv                                   250m (13%)    0 (0%)      100Mi (3%)       2800Mi (100%)  71m\n  kube-system                 csi-driver-node-d66gz                               37m (1%)      0 (0%)      106Mi (3%)       3272Mi (117%)  71m\n  kube-system                 egress-filter-applier-hh2tw                         50m (2%)      100m (5%)   64Mi (2%)        256Mi (9%)     71m\n  kube-system                 kube-proxy-worker-1-v1.24.2-2xlkb                   34m (1%)      0 (0%)      47753748 (1%)    2Gi (73%)      54m\n  kube-system                 node-exporter-sxs7w                                 50m (2%)      0 (0%)      50Mi (1%)        250Mi (8%)     71m\n  kube-system                 node-problem-detector-jrk7n                         11m (0%)      0 (0%)      23574998 (0%)    120Mi (4%)     44m\n  kubectl-2167                agnhost-primary-xz4v7                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         3s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests         Limits\n  --------               --------         ------\n  cpu                    593m (30%)       100m (5%)\n  memory                 659037632 (22%)  16154Mi (578%)\n  ephemeral-storage      0 (0%)           0 (0%)\n  hugepages-1Gi          0 (0%)           0 (0%)\n  hugepages-2Mi          0 (0%)           0 (0%)\n  example.com/fakecpu    0                0\n  scheduling.k8s.io/foo  0                0\nEvents:\n  Type    Reason    Age   From        Message\n  ----    ------    ----  ----        -------\n  Normal  Starting  54m   kube-proxy  \n"
Jul  3 01:01:36.436: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2167 describe namespace kubectl-2167'
Jul  3 01:01:36.499: INFO: stderr: ""
Jul  3 01:01:36.499: INFO: stdout: "Name:         kubectl-2167\nLabels:       e2e-framework=kubectl\n              e2e-run=3af540cc-070f-4ac2-8528-8ca4aea9e117\n              kubernetes.io/metadata.name=kubectl-2167\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 01:01:36.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2167" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":356,"completed":278,"skipped":5230,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:01:36.509: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-2704
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service endpoint-test2 in namespace services-2704
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2704 to expose endpoints map[]
Jul  3 01:01:36.658: INFO: successfully validated that service endpoint-test2 in namespace services-2704 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-2704
Jul  3 01:01:36.674: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:01:38.680: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2704 to expose endpoints map[pod1:[80]]
Jul  3 01:01:38.697: INFO: successfully validated that service endpoint-test2 in namespace services-2704 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
Jul  3 01:01:38.697: INFO: Creating new exec pod
Jul  3 01:01:41.720: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-2704 exec execpodfhbf4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jul  3 01:01:42.039: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jul  3 01:01:42.039: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 01:01:42.039: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-2704 exec execpodfhbf4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.109.123.122 80'
Jul  3 01:01:42.285: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.109.123.122 80\nConnection to 100.109.123.122 80 port [tcp/http] succeeded!\n"
Jul  3 01:01:42.285: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-2704
Jul  3 01:01:42.299: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:01:44.305: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2704 to expose endpoints map[pod1:[80] pod2:[80]]
Jul  3 01:01:44.325: INFO: successfully validated that service endpoint-test2 in namespace services-2704 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
Jul  3 01:01:45.325: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-2704 exec execpodfhbf4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jul  3 01:01:45.568: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jul  3 01:01:45.568: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 01:01:45.568: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-2704 exec execpodfhbf4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.109.123.122 80'
Jul  3 01:01:45.845: INFO: stderr: "+ nc -v -t -w 2 100.109.123.122 80\nConnection to 100.109.123.122 80 port [tcp/http] succeeded!\n+ echo hostName\n"
Jul  3 01:01:45.845: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-2704
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2704 to expose endpoints map[pod2:[80]]
Jul  3 01:01:45.875: INFO: successfully validated that service endpoint-test2 in namespace services-2704 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
Jul  3 01:01:46.875: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-2704 exec execpodfhbf4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jul  3 01:01:47.086: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jul  3 01:01:47.086: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 01:01:47.086: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-2704 exec execpodfhbf4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.109.123.122 80'
Jul  3 01:01:47.317: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.109.123.122 80\nConnection to 100.109.123.122 80 port [tcp/http] succeeded!\n"
Jul  3 01:01:47.317: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-2704
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2704 to expose endpoints map[]
Jul  3 01:01:47.335: INFO: successfully validated that service endpoint-test2 in namespace services-2704 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 01:01:47.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2704" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":356,"completed":279,"skipped":5278,"failed":0}
SS
------------------------------
[sig-apps] Job 
  should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:01:47.354: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-8078
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensure pods equal to paralellism count is attached to the job
STEP: patching /status
STEP: updating /status
STEP: get /status
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jul  3 01:01:49.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8078" for this suite.
•{"msg":"PASSED [sig-apps] Job should apply changes to a job status [Conformance]","total":356,"completed":280,"skipped":5280,"failed":0}
SSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:01:49.546: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7039
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul  3 01:02:00.759: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7039" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":356,"completed":281,"skipped":5284,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:02:00.770: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-4054
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:02:00.909: INFO: Waiting up to 5m0s for pod "busybox-user-65534-da020b8b-e265-4489-afa9-a6314a9ec2ab" in namespace "security-context-test-4054" to be "Succeeded or Failed"
Jul  3 01:02:00.912: INFO: Pod "busybox-user-65534-da020b8b-e265-4489-afa9-a6314a9ec2ab": Phase="Pending", Reason="", readiness=false. Elapsed: 2.845381ms
Jul  3 01:02:02.917: INFO: Pod "busybox-user-65534-da020b8b-e265-4489-afa9-a6314a9ec2ab": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008254998s
Jul  3 01:02:04.922: INFO: Pod "busybox-user-65534-da020b8b-e265-4489-afa9-a6314a9ec2ab": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013513066s
Jul  3 01:02:04.922: INFO: Pod "busybox-user-65534-da020b8b-e265-4489-afa9-a6314a9ec2ab" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jul  3 01:02:04.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-4054" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":282,"skipped":5297,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:02:04.933: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7930
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7930
Jul  3 01:02:05.138: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:02:07.144: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Jul  3 01:02:07.148: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-7930 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Jul  3 01:02:07.753: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Jul  3 01:02:07.753: INFO: stdout: "iptables"
Jul  3 01:02:07.753: INFO: proxyMode: iptables
Jul  3 01:02:07.762: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Jul  3 01:02:07.765: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-clusterip-timeout in namespace services-7930
STEP: creating replication controller affinity-clusterip-timeout in namespace services-7930
I0703 01:02:07.778800    4513 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-7930, replica count: 3
I0703 01:02:10.829754    4513 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul  3 01:02:10.838: INFO: Creating new exec pod
Jul  3 01:02:15.858: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-7930 exec execpod-affinitymvfjr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
Jul  3 01:02:16.075: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-timeout 80\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
Jul  3 01:02:16.085: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 01:02:16.085: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-7930 exec execpod-affinitymvfjr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.111.58.71 80'
Jul  3 01:02:16.319: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.111.58.71 80\nConnection to 100.111.58.71 80 port [tcp/http] succeeded!\n"
Jul  3 01:02:16.319: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 01:02:16.319: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-7930 exec execpod-affinitymvfjr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://100.111.58.71:80/ ; done'
Jul  3 01:02:16.587: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n"
Jul  3 01:02:16.587: INFO: stdout: "\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm\naffinity-clusterip-timeout-k6prm"
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Received response from host: affinity-clusterip-timeout-k6prm
Jul  3 01:02:16.588: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-7930 exec execpod-affinitymvfjr -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://100.111.58.71:80/'
Jul  3 01:02:16.863: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n"
Jul  3 01:02:16.863: INFO: stdout: "affinity-clusterip-timeout-k6prm"
Jul  3 01:02:36.865: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-7930 exec execpod-affinitymvfjr -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://100.111.58.71:80/'
Jul  3 01:02:37.225: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://100.111.58.71:80/\n"
Jul  3 01:02:37.225: INFO: stdout: "affinity-clusterip-timeout-7fbn2"
Jul  3 01:02:37.225: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-7930, will wait for the garbage collector to delete the pods
Jul  3 01:02:37.294: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 6.205358ms
Jul  3 01:02:37.394: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 100.078178ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 01:02:39.809: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7930" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":283,"skipped":5349,"failed":0}
SSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:02:39.820: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-9563
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:02:39.965: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
Jul  3 01:02:39.974: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 01:02:39.974: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
Jul  3 01:02:39.997: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 01:02:39.997: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 01:02:41.002: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 01:02:41.002: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 01:02:42.001: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 01:02:42.001: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 01:02:43.003: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul  3 01:02:43.003: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
Jul  3 01:02:43.026: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul  3 01:02:43.026: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Jul  3 01:02:44.032: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 01:02:44.032: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
Jul  3 01:02:44.042: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 01:02:44.042: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 01:02:45.048: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 01:02:45.048: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 01:02:46.047: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 01:02:46.047: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 01:02:47.048: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 01:02:47.048: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 01:02:48.048: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul  3 01:02:48.048: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9563, will wait for the garbage collector to delete the pods
Jul  3 01:02:48.118: INFO: Deleting DaemonSet.extensions daemon-set took: 5.701196ms
Jul  3 01:02:48.219: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.627402ms
Jul  3 01:02:50.424: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 01:02:50.424: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jul  3 01:02:50.428: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35851"},"items":null}

Jul  3 01:02:50.431: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35851"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul  3 01:02:50.455: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-9563" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":356,"completed":284,"skipped":5352,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:02:50.464: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-3964
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jul  3 01:02:50.608: INFO: Waiting up to 1m0s for all nodes to be ready
Jul  3 01:03:50.659: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Jul  3 01:03:50.689: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jul  3 01:03:50.700: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jul  3 01:03:50.722: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jul  3 01:03:50.732: INFO: Created pod: pod1-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jul  3 01:03:58.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-3964" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80
•{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":356,"completed":285,"skipped":5367,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:03:58.839: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4071
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jul  3 01:03:58.980: INFO: Waiting up to 5m0s for pod "downward-api-a994b178-1b2c-4576-b841-33120036668f" in namespace "downward-api-4071" to be "Succeeded or Failed"
Jul  3 01:03:58.983: INFO: Pod "downward-api-a994b178-1b2c-4576-b841-33120036668f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.380789ms
Jul  3 01:04:00.989: INFO: Pod "downward-api-a994b178-1b2c-4576-b841-33120036668f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009677965s
Jul  3 01:04:02.996: INFO: Pod "downward-api-a994b178-1b2c-4576-b841-33120036668f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015940557s
STEP: Saw pod success
Jul  3 01:04:02.996: INFO: Pod "downward-api-a994b178-1b2c-4576-b841-33120036668f" satisfied condition "Succeeded or Failed"
Jul  3 01:04:02.999: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downward-api-a994b178-1b2c-4576-b841-33120036668f container dapi-container: <nil>
STEP: delete the pod
Jul  3 01:04:03.023: INFO: Waiting for pod downward-api-a994b178-1b2c-4576-b841-33120036668f to disappear
Jul  3 01:04:03.027: INFO: Pod downward-api-a994b178-1b2c-4576-b841-33120036668f no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jul  3 01:04:03.027: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4071" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":356,"completed":286,"skipped":5386,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:04:03.039: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1341
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-db03a275-6098-43d6-9a4f-805a38c3e001
STEP: Creating a pod to test consume configMaps
Jul  3 01:04:03.192: INFO: Waiting up to 5m0s for pod "pod-configmaps-7f8e7a1f-db4a-425c-b362-1d9c306cb1b2" in namespace "configmap-1341" to be "Succeeded or Failed"
Jul  3 01:04:03.195: INFO: Pod "pod-configmaps-7f8e7a1f-db4a-425c-b362-1d9c306cb1b2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.781772ms
Jul  3 01:04:05.199: INFO: Pod "pod-configmaps-7f8e7a1f-db4a-425c-b362-1d9c306cb1b2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007698767s
Jul  3 01:04:07.205: INFO: Pod "pod-configmaps-7f8e7a1f-db4a-425c-b362-1d9c306cb1b2": Phase="Pending", Reason="", readiness=false. Elapsed: 4.013155725s
Jul  3 01:04:09.210: INFO: Pod "pod-configmaps-7f8e7a1f-db4a-425c-b362-1d9c306cb1b2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.018548541s
STEP: Saw pod success
Jul  3 01:04:09.210: INFO: Pod "pod-configmaps-7f8e7a1f-db4a-425c-b362-1d9c306cb1b2" satisfied condition "Succeeded or Failed"
Jul  3 01:04:09.215: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-configmaps-7f8e7a1f-db4a-425c-b362-1d9c306cb1b2 container agnhost-container: <nil>
STEP: delete the pod
Jul  3 01:04:09.234: INFO: Waiting for pod pod-configmaps-7f8e7a1f-db4a-425c-b362-1d9c306cb1b2 to disappear
Jul  3 01:04:09.238: INFO: Pod pod-configmaps-7f8e7a1f-db4a-425c-b362-1d9c306cb1b2 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 01:04:09.238: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1341" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":287,"skipped":5426,"failed":0}
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:04:09.250: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-4885
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4885
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating stateful set ss in namespace statefulset-4885
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4885
Jul  3 01:04:09.396: INFO: Found 0 stateful pods, waiting for 1
Jul  3 01:04:19.402: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
Jul  3 01:04:19.407: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-4885 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul  3 01:04:19.712: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul  3 01:04:19.712: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul  3 01:04:19.712: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul  3 01:04:19.717: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jul  3 01:04:29.723: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jul  3 01:04:29.723: INFO: Waiting for statefulset status.replicas updated to 0
Jul  3 01:04:29.743: INFO: POD   NODE                                          PHASE    GRACE  CONDITIONS
Jul  3 01:04:29.743: INFO: ss-0  shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:09 +0000 UTC  }]
Jul  3 01:04:29.743: INFO: 
Jul  3 01:04:29.743: INFO: StatefulSet ss has not reached scale 3, at 1
Jul  3 01:04:30.749: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996116064s
Jul  3 01:04:31.755: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.989501882s
Jul  3 01:04:32.761: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.983703158s
Jul  3 01:04:33.767: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.977603952s
Jul  3 01:04:34.773: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.971640906s
Jul  3 01:04:35.779: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.965645642s
Jul  3 01:04:36.784: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.960134337s
Jul  3 01:04:37.790: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.954342499s
Jul  3 01:04:38.796: INFO: Verifying statefulset ss doesn't scale past 3 for another 948.627527ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4885
Jul  3 01:04:39.801: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-4885 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul  3 01:04:40.072: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul  3 01:04:40.072: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul  3 01:04:40.072: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul  3 01:04:40.072: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-4885 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul  3 01:04:40.307: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jul  3 01:04:40.307: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul  3 01:04:40.307: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul  3 01:04:40.307: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-4885 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul  3 01:04:40.552: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jul  3 01:04:40.552: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul  3 01:04:40.552: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul  3 01:04:40.557: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Jul  3 01:04:50.563: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jul  3 01:04:50.563: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jul  3 01:04:50.563: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
Jul  3 01:04:50.568: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-4885 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul  3 01:04:50.876: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul  3 01:04:50.876: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul  3 01:04:50.876: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul  3 01:04:50.876: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-4885 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul  3 01:04:51.198: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul  3 01:04:51.198: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul  3 01:04:51.198: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul  3 01:04:51.198: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=statefulset-4885 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul  3 01:04:51.601: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul  3 01:04:51.601: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul  3 01:04:51.601: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul  3 01:04:51.601: INFO: Waiting for statefulset status.replicas updated to 0
Jul  3 01:04:51.605: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Jul  3 01:05:01.620: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jul  3 01:05:01.620: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jul  3 01:05:01.620: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jul  3 01:05:01.633: INFO: POD   NODE                                          PHASE    GRACE  CONDITIONS
Jul  3 01:05:01.633: INFO: ss-0  shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:09 +0000 UTC  }]
Jul  3 01:05:01.633: INFO: ss-1  shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:29 +0000 UTC  }]
Jul  3 01:05:01.633: INFO: ss-2  shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:29 +0000 UTC  }]
Jul  3 01:05:01.633: INFO: 
Jul  3 01:05:01.633: INFO: StatefulSet ss has not reached scale 0, at 3
Jul  3 01:05:02.639: INFO: POD   NODE                                          PHASE    GRACE  CONDITIONS
Jul  3 01:05:02.639: INFO: ss-0  shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:51 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:09 +0000 UTC  }]
Jul  3 01:05:02.639: INFO: ss-1  shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:29 +0000 UTC  }]
Jul  3 01:05:02.639: INFO: ss-2  shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-03 01:04:29 +0000 UTC  }]
Jul  3 01:05:02.639: INFO: 
Jul  3 01:05:02.639: INFO: StatefulSet ss has not reached scale 0, at 3
Jul  3 01:05:03.644: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.989531339s
Jul  3 01:05:04.649: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.984511746s
Jul  3 01:05:05.654: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.980154018s
Jul  3 01:05:06.659: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.974503478s
Jul  3 01:05:07.663: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.969348622s
Jul  3 01:05:08.668: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.965260999s
Jul  3 01:05:09.673: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.960289324s
Jul  3 01:05:10.678: INFO: Verifying statefulset ss doesn't scale past 0 for another 955.332879ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4885
Jul  3 01:05:11.684: INFO: Scaling statefulset ss to 0
Jul  3 01:05:11.697: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul  3 01:05:11.701: INFO: Deleting all statefulset in ns statefulset-4885
Jul  3 01:05:11.705: INFO: Scaling statefulset ss to 0
Jul  3 01:05:11.717: INFO: Waiting for statefulset status.replicas updated to 0
Jul  3 01:05:11.721: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul  3 01:05:11.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4885" for this suite.
•{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":356,"completed":288,"skipped":5431,"failed":0}
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:05:11.745: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-221
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jul  3 01:05:15.896: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-221" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":356,"completed":289,"skipped":5434,"failed":0}
SSS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:05:15.909: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename server-version
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in server-version-7231
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  test/e2e/framework/framework.go:652
STEP: Request ServerVersion
STEP: Confirm major version
Jul  3 01:05:16.045: INFO: Major version: 1
STEP: Confirm minor version
Jul  3 01:05:16.045: INFO: cleanMinorVersion: 24
Jul  3 01:05:16.045: INFO: Minor version: 24
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:188
Jul  3 01:05:16.045: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-7231" for this suite.
•{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":356,"completed":290,"skipped":5437,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:05:16.055: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-6700
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
Jul  3 01:05:16.197: INFO: Pod name sample-pod: Found 0 pods out of 3
Jul  3 01:05:21.202: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
Jul  3 01:05:21.206: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jul  3 01:05:21.221: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-6700" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":356,"completed":291,"skipped":5447,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:05:21.232: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-8052
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
Jul  3 01:05:21.371: INFO: Pod name pod-release: Found 0 pods out of 1
Jul  3 01:05:26.378: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jul  3 01:05:27.396: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-8052" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":356,"completed":292,"skipped":5458,"failed":0}
SSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:05:27.409: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-6650
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-438d6450-193e-4e5c-bacf-80c6538a22ec in namespace container-probe-6650
Jul  3 01:05:29.564: INFO: Started pod busybox-438d6450-193e-4e5c-bacf-80c6538a22ec in namespace container-probe-6650
STEP: checking the pod's current state and verifying that restartCount is present
Jul  3 01:05:29.567: INFO: Initial restart count of pod busybox-438d6450-193e-4e5c-bacf-80c6538a22ec is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul  3 01:09:30.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6650" for this suite.
•{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":293,"skipped":5461,"failed":0}
S
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:09:30.297: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-1229
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-cbd21145-bcf5-4693-8e3b-a1102a2a6bb4 in namespace container-probe-1229
Jul  3 01:09:32.623: INFO: Started pod busybox-cbd21145-bcf5-4693-8e3b-a1102a2a6bb4 in namespace container-probe-1229
STEP: checking the pod's current state and verifying that restartCount is present
Jul  3 01:09:32.626: INFO: Initial restart count of pod busybox-cbd21145-bcf5-4693-8e3b-a1102a2a6bb4 is 0
Jul  3 01:10:22.763: INFO: Restart count of pod container-probe-1229/busybox-cbd21145-bcf5-4693-8e3b-a1102a2a6bb4 is now 1 (50.136673131s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul  3 01:10:22.771: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-1229" for this suite.
•{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":294,"skipped":5462,"failed":0}
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:10:22.781: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4161
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 01:10:23.162: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 01:10:26.184: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:10:26.188: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3465-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 01:10:29.407: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4161" for this suite.
STEP: Destroying namespace "webhook-4161-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":356,"completed":295,"skipped":5465,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:10:29.445: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6512
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jul  3 01:10:29.574: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-6512 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jul  3 01:10:29.661: INFO: stderr: ""
Jul  3 01:10:29.661: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
Jul  3 01:10:29.661: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-6512 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
Jul  3 01:10:30.488: INFO: stderr: ""
Jul  3 01:10:30.488: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jul  3 01:10:30.493: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-6512 delete pods e2e-test-httpd-pod'
Jul  3 01:10:32.728: INFO: stderr: ""
Jul  3 01:10:32.728: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 01:10:32.728: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6512" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":356,"completed":296,"skipped":5472,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:10:32.739: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-6612
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 pods, got 1 pods
STEP: Gathering metrics
Jul  3 01:10:33.423: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
W0703 01:10:33.423328    4513 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jul  3 01:10:33.423: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6612" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":356,"completed":297,"skipped":5492,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:10:33.433: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-481
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
Jul  3 01:10:33.577: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul  3 01:10:33.577: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul  3 01:10:33.581: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul  3 01:10:33.581: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul  3 01:10:33.588: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul  3 01:10:33.588: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul  3 01:10:33.604: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul  3 01:10:33.604: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul  3 01:10:34.732: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jul  3 01:10:34.732: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jul  3 01:10:34.752: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
Jul  3 01:10:34.761: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
Jul  3 01:10:34.764: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0
Jul  3 01:10:34.764: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0
Jul  3 01:10:34.764: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0
Jul  3 01:10:34.764: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0
Jul  3 01:10:34.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0
Jul  3 01:10:34.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0
Jul  3 01:10:34.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0
Jul  3 01:10:34.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 0
Jul  3 01:10:34.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
Jul  3 01:10:34.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
Jul  3 01:10:34.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:34.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:34.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:34.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:34.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:34.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:34.778: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:34.778: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:34.783: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
Jul  3 01:10:34.783: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
Jul  3 01:10:34.799: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
Jul  3 01:10:34.799: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
Jul  3 01:10:35.740: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:35.740: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:35.754: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
STEP: listing Deployments
Jul  3 01:10:35.759: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
Jul  3 01:10:35.773: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
Jul  3 01:10:35.783: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jul  3 01:10:35.783: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jul  3 01:10:35.785: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jul  3 01:10:35.797: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jul  3 01:10:35.804: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jul  3 01:10:35.807: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jul  3 01:10:36.748: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jul  3 01:10:36.765: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jul  3 01:10:36.772: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jul  3 01:10:37.420: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
Jul  3 01:10:37.448: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
Jul  3 01:10:37.448: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
Jul  3 01:10:37.448: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
Jul  3 01:10:37.448: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
Jul  3 01:10:37.448: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
Jul  3 01:10:37.448: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 1
Jul  3 01:10:37.448: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:37.448: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:37.448: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 2
Jul  3 01:10:37.448: INFO: observed Deployment test-deployment in namespace deployment-481 with ReadyReplicas 3
STEP: deleting the Deployment
Jul  3 01:10:37.456: INFO: observed event type MODIFIED
Jul  3 01:10:37.456: INFO: observed event type MODIFIED
Jul  3 01:10:37.456: INFO: observed event type MODIFIED
Jul  3 01:10:37.456: INFO: observed event type MODIFIED
Jul  3 01:10:37.456: INFO: observed event type MODIFIED
Jul  3 01:10:37.456: INFO: observed event type MODIFIED
Jul  3 01:10:37.456: INFO: observed event type MODIFIED
Jul  3 01:10:37.456: INFO: observed event type MODIFIED
Jul  3 01:10:37.456: INFO: observed event type MODIFIED
Jul  3 01:10:37.457: INFO: observed event type MODIFIED
Jul  3 01:10:37.457: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul  3 01:10:37.462: INFO: Log out all the ReplicaSets if there is no deployment created
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul  3 01:10:37.466: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-481" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":356,"completed":298,"skipped":5532,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:10:37.475: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-9465
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jul  3 01:10:37.618: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-9465" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":299,"skipped":5550,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:10:37.627: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-4264
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
Jul  3 01:10:37.768: INFO: Pod name sample-pod: Found 0 pods out of 1
Jul  3 01:10:42.778: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
Jul  3 01:10:42.782: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
Jul  3 01:10:42.790: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
Jul  3 01:10:42.793: INFO: Observed &ReplicaSet event: ADDED
Jul  3 01:10:42.793: INFO: Observed &ReplicaSet event: MODIFIED
Jul  3 01:10:42.793: INFO: Observed &ReplicaSet event: MODIFIED
Jul  3 01:10:42.793: INFO: Observed &ReplicaSet event: MODIFIED
Jul  3 01:10:42.793: INFO: Found replicaset test-rs in namespace replicaset-4264 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jul  3 01:10:42.793: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
Jul  3 01:10:42.793: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jul  3 01:10:42.798: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
Jul  3 01:10:42.801: INFO: Observed &ReplicaSet event: ADDED
Jul  3 01:10:42.801: INFO: Observed &ReplicaSet event: MODIFIED
Jul  3 01:10:42.801: INFO: Observed &ReplicaSet event: MODIFIED
Jul  3 01:10:42.801: INFO: Observed &ReplicaSet event: MODIFIED
Jul  3 01:10:42.801: INFO: Observed replicaset test-rs in namespace replicaset-4264 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jul  3 01:10:42.802: INFO: Observed &ReplicaSet event: MODIFIED
Jul  3 01:10:42.802: INFO: Found replicaset test-rs in namespace replicaset-4264 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Jul  3 01:10:42.802: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jul  3 01:10:42.802: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-4264" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":356,"completed":300,"skipped":5622,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:10:42.813: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-734
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-ed11f0e3-d930-44c0-b5c7-e68d6a2e8d43
STEP: Creating configMap with name cm-test-opt-upd-dd590a24-e8ab-48bc-ba89-e68ba83ba353
STEP: Creating the pod
Jul  3 01:10:42.976: INFO: The status of Pod pod-configmaps-fd774537-e3fc-4783-adc3-2b271f433634 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:10:44.983: INFO: The status of Pod pod-configmaps-fd774537-e3fc-4783-adc3-2b271f433634 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-ed11f0e3-d930-44c0-b5c7-e68d6a2e8d43
STEP: Updating configmap cm-test-opt-upd-dd590a24-e8ab-48bc-ba89-e68ba83ba353
STEP: Creating configMap with name cm-test-opt-create-e378ab6d-b7a7-4e1f-9128-2487fbb3e822
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 01:10:49.214: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-734" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":301,"skipped":5678,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:10:49.225: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7028
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-projected-all-test-volume-4d3de1a1-8565-4367-bd40-2b36e967c236
STEP: Creating secret with name secret-projected-all-test-volume-c8b6ac0d-db52-4530-adf1-24475ef84434
STEP: Creating a pod to test Check all projections for projected volume plugin
Jul  3 01:10:49.377: INFO: Waiting up to 5m0s for pod "projected-volume-f3caab84-8765-40a4-bd18-d9cf557435b8" in namespace "projected-7028" to be "Succeeded or Failed"
Jul  3 01:10:49.381: INFO: Pod "projected-volume-f3caab84-8765-40a4-bd18-d9cf557435b8": Phase="Pending", Reason="", readiness=false. Elapsed: 4.194721ms
Jul  3 01:10:51.388: INFO: Pod "projected-volume-f3caab84-8765-40a4-bd18-d9cf557435b8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010402458s
Jul  3 01:10:53.394: INFO: Pod "projected-volume-f3caab84-8765-40a4-bd18-d9cf557435b8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016400185s
STEP: Saw pod success
Jul  3 01:10:53.394: INFO: Pod "projected-volume-f3caab84-8765-40a4-bd18-d9cf557435b8" satisfied condition "Succeeded or Failed"
Jul  3 01:10:53.397: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod projected-volume-f3caab84-8765-40a4-bd18-d9cf557435b8 container projected-all-volume-test: <nil>
STEP: delete the pod
Jul  3 01:10:53.414: INFO: Waiting for pod projected-volume-f3caab84-8765-40a4-bd18-d9cf557435b8 to disappear
Jul  3 01:10:53.417: INFO: Pod projected-volume-f3caab84-8765-40a4-bd18-d9cf557435b8 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:188
Jul  3 01:10:53.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7028" for this suite.
•{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":356,"completed":302,"skipped":5683,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:10:53.427: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3447
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 01:10:53.978: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 01:10:57.003: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 01:10:57.284: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3447" for this suite.
STEP: Destroying namespace "webhook-3447-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":356,"completed":303,"skipped":5691,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:10:57.321: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6530
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-30057b50-f4e6-4b9a-afd7-febb76200a09
STEP: Creating a pod to test consume secrets
Jul  3 01:10:57.513: INFO: Waiting up to 5m0s for pod "pod-secrets-9fde533a-b801-453a-886e-6d052ee66eef" in namespace "secrets-6530" to be "Succeeded or Failed"
Jul  3 01:10:57.517: INFO: Pod "pod-secrets-9fde533a-b801-453a-886e-6d052ee66eef": Phase="Pending", Reason="", readiness=false. Elapsed: 3.855525ms
Jul  3 01:10:59.521: INFO: Pod "pod-secrets-9fde533a-b801-453a-886e-6d052ee66eef": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007913035s
Jul  3 01:11:01.526: INFO: Pod "pod-secrets-9fde533a-b801-453a-886e-6d052ee66eef": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013174561s
STEP: Saw pod success
Jul  3 01:11:01.526: INFO: Pod "pod-secrets-9fde533a-b801-453a-886e-6d052ee66eef" satisfied condition "Succeeded or Failed"
Jul  3 01:11:01.530: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-secrets-9fde533a-b801-453a-886e-6d052ee66eef container secret-volume-test: <nil>
STEP: delete the pod
Jul  3 01:11:01.557: INFO: Waiting for pod pod-secrets-9fde533a-b801-453a-886e-6d052ee66eef to disappear
Jul  3 01:11:01.560: INFO: Pod pod-secrets-9fde533a-b801-453a-886e-6d052ee66eef no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul  3 01:11:01.560: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6530" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":304,"skipped":5734,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:01.572: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3477
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1574
[It] should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jul  3 01:11:01.700: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-3477 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jul  3 01:11:01.785: INFO: stderr: ""
Jul  3 01:11:01.785: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
Jul  3 01:11:06.837: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-3477 get pod e2e-test-httpd-pod -o json'
Jul  3 01:11:06.893: INFO: stderr: ""
Jul  3 01:11:06.893: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"f928eef4aefdd5ba9a7e4a044ad3e9c6cbdb46baba1dc2bae49b8dc77e709363\",\n            \"cni.projectcalico.org/podIP\": \"100.64.1.237/32\",\n            \"cni.projectcalico.org/podIPs\": \"100.64.1.237/32\",\n            \"kubernetes.io/psp\": \"e2e-test-privileged-psp\"\n        },\n        \"creationTimestamp\": \"2022-07-03T01:11:01Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-3477\",\n        \"resourceVersion\": \"38917\",\n        \"uid\": \"32bddefd-be45-4127-a776-86949614f988\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"env\": [\n                    {\n                        \"name\": \"KUBERNETES_SERVICE_HOST\",\n                        \"value\": \"api.tmffe-jrp.it.internal.staging.k8s.ondemand.com\"\n                    }\n                ],\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-7gk2z\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-7gk2z\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-07-03T01:11:01Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-07-03T01:11:02Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-07-03T01:11:02Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-07-03T01:11:01Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://1bb3ee74be41ce15d0a03d401d95664a474f1f183db7a6726fc1cafe99cdd45d\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2022-07-03T01:11:02Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.250.2.183\",\n        \"phase\": \"Running\",\n        \"podIP\": \"100.64.1.237\",\n        \"podIPs\": [\n            {\n                \"ip\": \"100.64.1.237\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2022-07-03T01:11:01Z\"\n    }\n}\n"
STEP: replace the image in the pod
Jul  3 01:11:06.893: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-3477 replace -f -'
Jul  3 01:11:07.038: INFO: stderr: ""
Jul  3 01:11:07.038: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1578
Jul  3 01:11:07.045: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-3477 delete pods e2e-test-httpd-pod'
Jul  3 01:11:08.851: INFO: stderr: ""
Jul  3 01:11:08.851: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 01:11:08.851: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3477" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":356,"completed":305,"skipped":5746,"failed":0}
SSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:08.863: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-3275
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
Jul  3 01:11:08.995: INFO: created test-event-1
Jul  3 01:11:08.999: INFO: created test-event-2
Jul  3 01:11:09.006: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
Jul  3 01:11:09.009: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
Jul  3 01:11:09.017: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Jul  3 01:11:09.020: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-3275" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":356,"completed":306,"skipped":5755,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:09.030: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-4388
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jul  3 01:11:09.181: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:11:11.186: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jul  3 01:11:11.204: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:11:13.209: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Jul  3 01:11:13.220: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jul  3 01:11:13.223: INFO: Pod pod-with-prestop-http-hook still exists
Jul  3 01:11:15.224: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jul  3 01:11:15.230: INFO: Pod pod-with-prestop-http-hook still exists
Jul  3 01:11:17.224: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jul  3 01:11:17.229: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jul  3 01:11:17.241: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-4388" for this suite.
•{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":356,"completed":307,"skipped":5783,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:17.252: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-5740
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:11:17.398: INFO: The status of Pod busybox-readonly-fsc4d54927-1642-435a-877a-ca9594dab361 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:11:19.403: INFO: The status of Pod busybox-readonly-fsc4d54927-1642-435a-877a-ca9594dab361 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jul  3 01:11:19.421: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-5740" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":308,"skipped":5803,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:19.433: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7926
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:11:19.581: INFO: The status of Pod server-envvars-26092e01-6a7e-408a-beaa-2e355958f81a is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:11:21.586: INFO: The status of Pod server-envvars-26092e01-6a7e-408a-beaa-2e355958f81a is Running (Ready = true)
Jul  3 01:11:21.613: INFO: Waiting up to 5m0s for pod "client-envvars-12ded2cb-9dab-4b42-9882-721a0de826e3" in namespace "pods-7926" to be "Succeeded or Failed"
Jul  3 01:11:21.617: INFO: Pod "client-envvars-12ded2cb-9dab-4b42-9882-721a0de826e3": Phase="Pending", Reason="", readiness=false. Elapsed: 3.930817ms
Jul  3 01:11:23.623: INFO: Pod "client-envvars-12ded2cb-9dab-4b42-9882-721a0de826e3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009852652s
Jul  3 01:11:25.627: INFO: Pod "client-envvars-12ded2cb-9dab-4b42-9882-721a0de826e3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014226883s
STEP: Saw pod success
Jul  3 01:11:25.627: INFO: Pod "client-envvars-12ded2cb-9dab-4b42-9882-721a0de826e3" satisfied condition "Succeeded or Failed"
Jul  3 01:11:25.631: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod client-envvars-12ded2cb-9dab-4b42-9882-721a0de826e3 container env3cont: <nil>
STEP: delete the pod
Jul  3 01:11:25.657: INFO: Waiting for pod client-envvars-12ded2cb-9dab-4b42-9882-721a0de826e3 to disappear
Jul  3 01:11:25.660: INFO: Pod client-envvars-12ded2cb-9dab-4b42-9882-721a0de826e3 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul  3 01:11:25.660: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7926" for this suite.
•{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":356,"completed":309,"skipped":5821,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:25.672: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-kubelet-etc-hosts-6998
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
Jul  3 01:11:25.820: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:11:27.825: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
Jul  3 01:11:27.847: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:11:29.852: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
Jul  3 01:11:29.856: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6998 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:11:29.856: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:11:29.857: INFO: ExecWithOptions: Clientset creation
Jul  3 01:11:29.857: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/e2e-kubelet-etc-hosts-6998/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jul  3 01:11:30.075: INFO: Exec stderr: ""
Jul  3 01:11:30.075: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6998 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:11:30.075: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:11:30.075: INFO: ExecWithOptions: Clientset creation
Jul  3 01:11:30.075: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/e2e-kubelet-etc-hosts-6998/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jul  3 01:11:30.260: INFO: Exec stderr: ""
Jul  3 01:11:30.260: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6998 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:11:30.260: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:11:30.261: INFO: ExecWithOptions: Clientset creation
Jul  3 01:11:30.261: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/e2e-kubelet-etc-hosts-6998/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jul  3 01:11:30.498: INFO: Exec stderr: ""
Jul  3 01:11:30.498: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6998 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:11:30.498: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:11:30.499: INFO: ExecWithOptions: Clientset creation
Jul  3 01:11:30.499: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/e2e-kubelet-etc-hosts-6998/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jul  3 01:11:30.715: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
Jul  3 01:11:30.715: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6998 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:11:30.715: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:11:30.716: INFO: ExecWithOptions: Clientset creation
Jul  3 01:11:30.716: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/e2e-kubelet-etc-hosts-6998/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jul  3 01:11:30.954: INFO: Exec stderr: ""
Jul  3 01:11:30.954: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6998 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:11:30.954: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:11:30.954: INFO: ExecWithOptions: Clientset creation
Jul  3 01:11:30.954: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/e2e-kubelet-etc-hosts-6998/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jul  3 01:11:31.074: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
Jul  3 01:11:31.074: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6998 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:11:31.074: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:11:31.075: INFO: ExecWithOptions: Clientset creation
Jul  3 01:11:31.075: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/e2e-kubelet-etc-hosts-6998/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jul  3 01:11:31.307: INFO: Exec stderr: ""
Jul  3 01:11:31.308: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6998 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:11:31.308: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:11:31.308: INFO: ExecWithOptions: Clientset creation
Jul  3 01:11:31.308: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/e2e-kubelet-etc-hosts-6998/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jul  3 01:11:31.521: INFO: Exec stderr: ""
Jul  3 01:11:31.521: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6998 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:11:31.521: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:11:31.521: INFO: ExecWithOptions: Clientset creation
Jul  3 01:11:31.521: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/e2e-kubelet-etc-hosts-6998/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jul  3 01:11:31.766: INFO: Exec stderr: ""
Jul  3 01:11:31.766: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6998 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:11:31.766: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:11:31.767: INFO: ExecWithOptions: Clientset creation
Jul  3 01:11:31.767: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/e2e-kubelet-etc-hosts-6998/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jul  3 01:11:31.927: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:188
Jul  3 01:11:31.927: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-6998" for this suite.
•{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":310,"skipped":5864,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:31.938: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename ingressclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingressclass-9081
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:188
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jul  3 01:11:32.112: INFO: starting watch
STEP: patching
STEP: updating
Jul  3 01:11:32.121: INFO: waiting for watch events with expected annotations
Jul  3 01:11:32.121: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:188
Jul  3 01:11:32.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-9081" for this suite.
•{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":356,"completed":311,"skipped":5923,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:32.151: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4407
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:11:32.280: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jul  3 01:11:32.296: INFO: The status of Pod pod-logs-websocket-61dba2c8-67f1-4ba5-b4f5-8a52e0d08608 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:11:34.301: INFO: The status of Pod pod-logs-websocket-61dba2c8-67f1-4ba5-b4f5-8a52e0d08608 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul  3 01:11:34.321: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4407" for this suite.
•{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":356,"completed":312,"skipped":5949,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:34.334: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-7196
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jul  3 01:11:34.496: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 01:11:34.496: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm is running 0 daemon pod, expected 1
Jul  3 01:11:35.511: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul  3 01:11:35.511: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm is running 0 daemon pod, expected 1
Jul  3 01:11:36.515: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul  3 01:11:36.515: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
Jul  3 01:11:36.534: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul  3 01:11:36.534: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 01:11:37.545: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul  3 01:11:37.545: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 01:11:38.562: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul  3 01:11:38.562: INFO: Node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b is running 0 daemon pod, expected 1
Jul  3 01:11:39.557: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul  3 01:11:39.557: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7196, will wait for the garbage collector to delete the pods
Jul  3 01:11:39.619: INFO: Deleting DaemonSet.extensions daemon-set took: 4.564731ms
Jul  3 01:11:39.719: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.536232ms
Jul  3 01:11:42.625: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul  3 01:11:42.625: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jul  3 01:11:42.629: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"39330"},"items":null}

Jul  3 01:11:42.632: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"39330"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul  3 01:11:42.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-7196" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":356,"completed":313,"skipped":5989,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:42.654: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-1734
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Deleting RuntimeClass runtimeclass-1734-delete-me
STEP: Waiting for the RuntimeClass to disappear
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jul  3 01:11:42.799: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-1734" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":314,"skipped":6014,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:42.808: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2314
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:11:42.938: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jul  3 01:11:45.356: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2314 --namespace=crd-publish-openapi-2314 create -f -'
Jul  3 01:11:46.121: INFO: stderr: ""
Jul  3 01:11:46.121: INFO: stdout: "e2e-test-crd-publish-openapi-7168-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jul  3 01:11:46.121: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2314 --namespace=crd-publish-openapi-2314 delete e2e-test-crd-publish-openapi-7168-crds test-cr'
Jul  3 01:11:46.236: INFO: stderr: ""
Jul  3 01:11:46.236: INFO: stdout: "e2e-test-crd-publish-openapi-7168-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Jul  3 01:11:46.236: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2314 --namespace=crd-publish-openapi-2314 apply -f -'
Jul  3 01:11:46.442: INFO: stderr: ""
Jul  3 01:11:46.442: INFO: stdout: "e2e-test-crd-publish-openapi-7168-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jul  3 01:11:46.442: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2314 --namespace=crd-publish-openapi-2314 delete e2e-test-crd-publish-openapi-7168-crds test-cr'
Jul  3 01:11:46.527: INFO: stderr: ""
Jul  3 01:11:46.527: INFO: stdout: "e2e-test-crd-publish-openapi-7168-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
Jul  3 01:11:46.527: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=crd-publish-openapi-2314 explain e2e-test-crd-publish-openapi-7168-crds'
Jul  3 01:11:46.741: INFO: stderr: ""
Jul  3 01:11:46.741: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7168-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 01:11:49.172: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2314" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":356,"completed":315,"skipped":6022,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease 
  lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Lease
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:49.187: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename lease-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in lease-test-4605
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Lease
  test/e2e/framework/framework.go:188
Jul  3 01:11:49.349: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-4605" for this suite.
•{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":356,"completed":316,"skipped":6049,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:49.357: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8103
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-85f3562e-05ef-40a7-a567-d4e55cd792a1
STEP: Creating a pod to test consume secrets
Jul  3 01:11:49.492: INFO: Waiting up to 5m0s for pod "pod-secrets-196c68b3-677e-4141-8e01-b569cf5ec198" in namespace "secrets-8103" to be "Succeeded or Failed"
Jul  3 01:11:49.495: INFO: Pod "pod-secrets-196c68b3-677e-4141-8e01-b569cf5ec198": Phase="Pending", Reason="", readiness=false. Elapsed: 2.52731ms
Jul  3 01:11:51.499: INFO: Pod "pod-secrets-196c68b3-677e-4141-8e01-b569cf5ec198": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006216685s
Jul  3 01:11:53.503: INFO: Pod "pod-secrets-196c68b3-677e-4141-8e01-b569cf5ec198": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01063222s
STEP: Saw pod success
Jul  3 01:11:53.503: INFO: Pod "pod-secrets-196c68b3-677e-4141-8e01-b569cf5ec198" satisfied condition "Succeeded or Failed"
Jul  3 01:11:53.506: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-secrets-196c68b3-677e-4141-8e01-b569cf5ec198 container secret-env-test: <nil>
STEP: delete the pod
Jul  3 01:11:53.521: INFO: Waiting for pod pod-secrets-196c68b3-677e-4141-8e01-b569cf5ec198 to disappear
Jul  3 01:11:53.523: INFO: Pod pod-secrets-196c68b3-677e-4141-8e01-b569cf5ec198 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jul  3 01:11:53.523: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8103" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":356,"completed":317,"skipped":6068,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:53.530: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8387
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-1b69f169-a7d7-441f-b0da-18aa1c8bc41e
STEP: Creating a pod to test consume configMaps
Jul  3 01:11:53.665: INFO: Waiting up to 5m0s for pod "pod-configmaps-d3b6fadd-c959-48e0-826f-61d4398c974c" in namespace "configmap-8387" to be "Succeeded or Failed"
Jul  3 01:11:53.668: INFO: Pod "pod-configmaps-d3b6fadd-c959-48e0-826f-61d4398c974c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.431104ms
Jul  3 01:11:55.673: INFO: Pod "pod-configmaps-d3b6fadd-c959-48e0-826f-61d4398c974c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007632002s
Jul  3 01:11:57.677: INFO: Pod "pod-configmaps-d3b6fadd-c959-48e0-826f-61d4398c974c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011608594s
STEP: Saw pod success
Jul  3 01:11:57.677: INFO: Pod "pod-configmaps-d3b6fadd-c959-48e0-826f-61d4398c974c" satisfied condition "Succeeded or Failed"
Jul  3 01:11:57.680: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-configmaps-d3b6fadd-c959-48e0-826f-61d4398c974c container configmap-volume-test: <nil>
STEP: delete the pod
Jul  3 01:11:57.695: INFO: Waiting for pod pod-configmaps-d3b6fadd-c959-48e0-826f-61d4398c974c to disappear
Jul  3 01:11:57.697: INFO: Pod pod-configmaps-d3b6fadd-c959-48e0-826f-61d4398c974c no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul  3 01:11:57.697: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8387" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":318,"skipped":6076,"failed":0}

------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:11:57.705: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9021
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 01:11:57.835: INFO: Waiting up to 5m0s for pod "downwardapi-volume-afccddef-eb58-4196-8f39-b5abdc236783" in namespace "downward-api-9021" to be "Succeeded or Failed"
Jul  3 01:11:57.838: INFO: Pod "downwardapi-volume-afccddef-eb58-4196-8f39-b5abdc236783": Phase="Pending", Reason="", readiness=false. Elapsed: 3.685265ms
Jul  3 01:11:59.843: INFO: Pod "downwardapi-volume-afccddef-eb58-4196-8f39-b5abdc236783": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008765567s
Jul  3 01:12:01.849: INFO: Pod "downwardapi-volume-afccddef-eb58-4196-8f39-b5abdc236783": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013907128s
STEP: Saw pod success
Jul  3 01:12:01.852: INFO: Pod "downwardapi-volume-afccddef-eb58-4196-8f39-b5abdc236783" satisfied condition "Succeeded or Failed"
Jul  3 01:12:01.855: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-afccddef-eb58-4196-8f39-b5abdc236783 container client-container: <nil>
STEP: delete the pod
Jul  3 01:12:01.871: INFO: Waiting for pod downwardapi-volume-afccddef-eb58-4196-8f39-b5abdc236783 to disappear
Jul  3 01:12:01.874: INFO: Pod downwardapi-volume-afccddef-eb58-4196-8f39-b5abdc236783 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul  3 01:12:01.874: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9021" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":319,"skipped":6076,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity 
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:12:01.882: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename csistoragecapacity
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in csistoragecapacity-2095
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/storage.k8s.io
STEP: getting /apis/storage.k8s.io/v1
STEP: creating
STEP: watching
Jul  3 01:12:02.019: INFO: starting watch
STEP: getting
STEP: listing in namespace
STEP: listing across namespaces
STEP: patching
STEP: updating
Jul  3 01:12:02.039: INFO: waiting for watch events with expected annotations in namespace
Jul  3 01:12:02.039: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:188
Jul  3 01:12:02.057: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "csistoragecapacity-2095" for this suite.
•{"msg":"PASSED [sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]","total":356,"completed":320,"skipped":6089,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:12:02.065: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3891
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Jul  3 01:12:02.201: INFO: Waiting up to 5m0s for pod "pod-27f61f8c-fd67-45ae-8617-66bb47e89fda" in namespace "emptydir-3891" to be "Succeeded or Failed"
Jul  3 01:12:02.204: INFO: Pod "pod-27f61f8c-fd67-45ae-8617-66bb47e89fda": Phase="Pending", Reason="", readiness=false. Elapsed: 2.492864ms
Jul  3 01:12:04.208: INFO: Pod "pod-27f61f8c-fd67-45ae-8617-66bb47e89fda": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006594617s
Jul  3 01:12:06.212: INFO: Pod "pod-27f61f8c-fd67-45ae-8617-66bb47e89fda": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011306123s
STEP: Saw pod success
Jul  3 01:12:06.212: INFO: Pod "pod-27f61f8c-fd67-45ae-8617-66bb47e89fda" satisfied condition "Succeeded or Failed"
Jul  3 01:12:06.215: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-27f61f8c-fd67-45ae-8617-66bb47e89fda container test-container: <nil>
STEP: delete the pod
Jul  3 01:12:06.230: INFO: Waiting for pod pod-27f61f8c-fd67-45ae-8617-66bb47e89fda to disappear
Jul  3 01:12:06.232: INFO: Pod pod-27f61f8c-fd67-45ae-8617-66bb47e89fda no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 01:12:06.232: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3891" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":321,"skipped":6112,"failed":0}
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:12:06.239: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-7774
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-projected-v7js
STEP: Creating a pod to test atomic-volume-subpath
Jul  3 01:12:06.376: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-v7js" in namespace "subpath-7774" to be "Succeeded or Failed"
Jul  3 01:12:06.378: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Pending", Reason="", readiness=false. Elapsed: 2.453242ms
Jul  3 01:12:08.383: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Running", Reason="", readiness=true. Elapsed: 2.007555859s
Jul  3 01:12:10.388: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Running", Reason="", readiness=true. Elapsed: 4.012056918s
Jul  3 01:12:12.392: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Running", Reason="", readiness=true. Elapsed: 6.016688859s
Jul  3 01:12:14.397: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Running", Reason="", readiness=true. Elapsed: 8.021145475s
Jul  3 01:12:16.402: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Running", Reason="", readiness=true. Elapsed: 10.026328498s
Jul  3 01:12:18.407: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Running", Reason="", readiness=true. Elapsed: 12.031450803s
Jul  3 01:12:20.412: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Running", Reason="", readiness=true. Elapsed: 14.035896063s
Jul  3 01:12:22.416: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Running", Reason="", readiness=true. Elapsed: 16.040731433s
Jul  3 01:12:24.420: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Running", Reason="", readiness=true. Elapsed: 18.044692317s
Jul  3 01:12:26.425: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Running", Reason="", readiness=true. Elapsed: 20.049088617s
Jul  3 01:12:28.430: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Running", Reason="", readiness=false. Elapsed: 22.05442315s
Jul  3 01:12:30.434: INFO: Pod "pod-subpath-test-projected-v7js": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.058763223s
STEP: Saw pod success
Jul  3 01:12:30.434: INFO: Pod "pod-subpath-test-projected-v7js" satisfied condition "Succeeded or Failed"
Jul  3 01:12:30.437: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-subpath-test-projected-v7js container test-container-subpath-projected-v7js: <nil>
STEP: delete the pod
Jul  3 01:12:30.454: INFO: Waiting for pod pod-subpath-test-projected-v7js to disappear
Jul  3 01:12:30.456: INFO: Pod pod-subpath-test-projected-v7js no longer exists
STEP: Deleting pod pod-subpath-test-projected-v7js
Jul  3 01:12:30.456: INFO: Deleting pod "pod-subpath-test-projected-v7js" in namespace "subpath-7774"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jul  3 01:12:30.459: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-7774" for this suite.
•{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]","total":356,"completed":322,"skipped":6115,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:12:30.467: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-1682
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:12:30.600: INFO: Creating pod...
Jul  3 01:12:32.617: INFO: Creating service...
Jul  3 01:12:32.625: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/pods/agnhost/proxy/some/path/with/DELETE
Jul  3 01:12:32.723: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jul  3 01:12:32.723: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/pods/agnhost/proxy/some/path/with/GET
Jul  3 01:12:32.729: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jul  3 01:12:32.729: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/pods/agnhost/proxy/some/path/with/HEAD
Jul  3 01:12:32.737: INFO: http.Client request:HEAD | StatusCode:200
Jul  3 01:12:32.737: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/pods/agnhost/proxy/some/path/with/OPTIONS
Jul  3 01:12:32.783: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jul  3 01:12:32.783: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/pods/agnhost/proxy/some/path/with/PATCH
Jul  3 01:12:32.789: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jul  3 01:12:32.789: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/pods/agnhost/proxy/some/path/with/POST
Jul  3 01:12:32.795: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jul  3 01:12:32.795: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/pods/agnhost/proxy/some/path/with/PUT
Jul  3 01:12:32.801: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jul  3 01:12:32.802: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/services/test-service/proxy/some/path/with/DELETE
Jul  3 01:12:32.808: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jul  3 01:12:32.808: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/services/test-service/proxy/some/path/with/GET
Jul  3 01:12:32.814: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jul  3 01:12:32.814: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/services/test-service/proxy/some/path/with/HEAD
Jul  3 01:12:32.820: INFO: http.Client request:HEAD | StatusCode:200
Jul  3 01:12:32.820: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/services/test-service/proxy/some/path/with/OPTIONS
Jul  3 01:12:32.826: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jul  3 01:12:32.826: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/services/test-service/proxy/some/path/with/PATCH
Jul  3 01:12:32.832: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jul  3 01:12:32.832: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/services/test-service/proxy/some/path/with/POST
Jul  3 01:12:32.838: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jul  3 01:12:32.838: INFO: Starting http.Client for https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/proxy-1682/services/test-service/proxy/some/path/with/PUT
Jul  3 01:12:32.844: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jul  3 01:12:32.844: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-1682" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":356,"completed":323,"skipped":6149,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:12:32.852: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-6175
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jul  3 01:12:39.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-6175" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":356,"completed":324,"skipped":6158,"failed":0}

------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:12:39.032: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-979
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:12:39.156: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 01:12:45.366: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-979" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":356,"completed":325,"skipped":6158,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:12:45.376: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-3147
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-f0dcc80a-e171-4701-9a69-005c4f881b0e in namespace container-probe-3147
Jul  3 01:12:47.524: INFO: Started pod liveness-f0dcc80a-e171-4701-9a69-005c4f881b0e in namespace container-probe-3147
STEP: checking the pod's current state and verifying that restartCount is present
Jul  3 01:12:47.526: INFO: Initial restart count of pod liveness-f0dcc80a-e171-4701-9a69-005c4f881b0e is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul  3 01:16:48.142: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-3147" for this suite.
•{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":356,"completed":326,"skipped":6166,"failed":0}
S
------------------------------
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:16:48.153: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2992
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod with failed condition
STEP: updating the pod
Jul  3 01:18:48.823: INFO: Successfully updated pod "var-expansion-b92d8c21-93fa-48f0-8120-63c527156699"
STEP: waiting for pod running
STEP: deleting the pod gracefully
Jul  3 01:18:50.833: INFO: Deleting pod "var-expansion-b92d8c21-93fa-48f0-8120-63c527156699" in namespace "var-expansion-2992"
Jul  3 01:18:50.838: INFO: Wait up to 5m0s for pod "var-expansion-b92d8c21-93fa-48f0-8120-63c527156699" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul  3 01:19:22.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2992" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":356,"completed":327,"skipped":6167,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:19:22.856: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-2479
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jul  3 01:19:25.032: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-2479" for this suite.
•{"msg":"PASSED [sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":356,"completed":328,"skipped":6181,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:19:25.042: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9336
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Pod
STEP: Reading file content from the nginx-container
Jul  3 01:19:27.192: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9336 PodName:pod-sharedvolume-21c82e86-2204-4ebb-8928-58646bacabef ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:19:27.192: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:19:27.192: INFO: ExecWithOptions: Clientset creation
Jul  3 01:19:27.192: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/emptydir-9336/pods/pod-sharedvolume-21c82e86-2204-4ebb-8928-58646bacabef/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Jul  3 01:19:27.350: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 01:19:27.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9336" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":356,"completed":329,"skipped":6191,"failed":0}
SSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:19:27.361: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7825
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 01:19:27.503: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d7f2ee57-dbc8-4b02-8850-24864c0c1041" in namespace "downward-api-7825" to be "Succeeded or Failed"
Jul  3 01:19:27.508: INFO: Pod "downwardapi-volume-d7f2ee57-dbc8-4b02-8850-24864c0c1041": Phase="Pending", Reason="", readiness=false. Elapsed: 4.986655ms
Jul  3 01:19:29.513: INFO: Pod "downwardapi-volume-d7f2ee57-dbc8-4b02-8850-24864c0c1041": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010033786s
Jul  3 01:19:31.519: INFO: Pod "downwardapi-volume-d7f2ee57-dbc8-4b02-8850-24864c0c1041": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015931272s
STEP: Saw pod success
Jul  3 01:19:31.519: INFO: Pod "downwardapi-volume-d7f2ee57-dbc8-4b02-8850-24864c0c1041" satisfied condition "Succeeded or Failed"
Jul  3 01:19:31.523: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-d7f2ee57-dbc8-4b02-8850-24864c0c1041 container client-container: <nil>
STEP: delete the pod
Jul  3 01:19:31.598: INFO: Waiting for pod downwardapi-volume-d7f2ee57-dbc8-4b02-8850-24864c0c1041 to disappear
Jul  3 01:19:31.602: INFO: Pod downwardapi-volume-d7f2ee57-dbc8-4b02-8850-24864c0c1041 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul  3 01:19:31.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7825" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":330,"skipped":6197,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:19:31.612: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7262
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul  3 01:19:31.755: INFO: Waiting up to 5m0s for pod "downwardapi-volume-632a040a-16bb-4bb2-bf9a-1a313d5b329b" in namespace "downward-api-7262" to be "Succeeded or Failed"
Jul  3 01:19:31.759: INFO: Pod "downwardapi-volume-632a040a-16bb-4bb2-bf9a-1a313d5b329b": Phase="Pending", Reason="", readiness=false. Elapsed: 3.423086ms
Jul  3 01:19:33.764: INFO: Pod "downwardapi-volume-632a040a-16bb-4bb2-bf9a-1a313d5b329b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008874268s
Jul  3 01:19:35.769: INFO: Pod "downwardapi-volume-632a040a-16bb-4bb2-bf9a-1a313d5b329b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014305687s
STEP: Saw pod success
Jul  3 01:19:35.769: INFO: Pod "downwardapi-volume-632a040a-16bb-4bb2-bf9a-1a313d5b329b" satisfied condition "Succeeded or Failed"
Jul  3 01:19:35.773: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downwardapi-volume-632a040a-16bb-4bb2-bf9a-1a313d5b329b container client-container: <nil>
STEP: delete the pod
Jul  3 01:19:35.834: INFO: Waiting for pod downwardapi-volume-632a040a-16bb-4bb2-bf9a-1a313d5b329b to disappear
Jul  3 01:19:35.838: INFO: Pod downwardapi-volume-632a040a-16bb-4bb2-bf9a-1a313d5b329b no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul  3 01:19:35.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7262" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":331,"skipped":6209,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:19:35.848: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9383
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul  3 01:19:49.049: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9383" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":356,"completed":332,"skipped":6234,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:19:49.058: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1376
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Starting the proxy
Jul  3 01:19:49.186: INFO: Asynchronously running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-1376 proxy --unix-socket=/tmp/kubectl-proxy-unix3142758983/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 01:19:49.236: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1376" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":356,"completed":333,"skipped":6248,"failed":0}
SSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:19:49.246: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9908
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-9908
Jul  3 01:19:49.388: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:19:51.393: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Jul  3 01:19:51.396: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-9908 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Jul  3 01:19:51.698: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Jul  3 01:19:51.698: INFO: stdout: "iptables"
Jul  3 01:19:51.698: INFO: proxyMode: iptables
Jul  3 01:19:51.704: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Jul  3 01:19:51.706: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-nodeport-timeout in namespace services-9908
STEP: creating replication controller affinity-nodeport-timeout in namespace services-9908
I0703 01:19:51.720610    4513 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-9908, replica count: 3
I0703 01:19:54.771228    4513 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul  3 01:19:54.783: INFO: Creating new exec pod
Jul  3 01:19:57.806: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-9908 exec execpod-affinityc8sdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
Jul  3 01:19:58.091: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
Jul  3 01:19:58.091: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 01:19:58.091: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-9908 exec execpod-affinityc8sdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.107.147.82 80'
Jul  3 01:19:58.360: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.107.147.82 80\nConnection to 100.107.147.82 80 port [tcp/http] succeeded!\n"
Jul  3 01:19:58.361: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 01:19:58.361: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-9908 exec execpod-affinityc8sdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.183 31239'
Jul  3 01:19:58.627: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.183 31239\nConnection to 10.250.2.183 31239 port [tcp/*] succeeded!\n"
Jul  3 01:19:58.627: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 01:19:58.627: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-9908 exec execpod-affinityc8sdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.84 31239'
Jul  3 01:19:58.892: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.84 31239\nConnection to 10.250.2.84 31239 port [tcp/*] succeeded!\n"
Jul  3 01:19:58.892: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 01:19:58.892: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-9908 exec execpod-affinityc8sdk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.250.2.183:31239/ ; done'
Jul  3 01:19:59.184: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n"
Jul  3 01:19:59.184: INFO: stdout: "\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7\naffinity-nodeport-timeout-kp2r7"
Jul  3 01:19:59.184: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.184: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.184: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.184: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.184: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.184: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.184: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.184: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.184: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.185: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.185: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.185: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.185: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.185: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.185: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.185: INFO: Received response from host: affinity-nodeport-timeout-kp2r7
Jul  3 01:19:59.185: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-9908 exec execpod-affinityc8sdk -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.250.2.183:31239/'
Jul  3 01:19:59.481: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n"
Jul  3 01:19:59.481: INFO: stdout: "affinity-nodeport-timeout-kp2r7"
Jul  3 01:20:19.482: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-9908 exec execpod-affinityc8sdk -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.250.2.183:31239/'
Jul  3 01:20:19.813: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n"
Jul  3 01:20:19.813: INFO: stdout: "affinity-nodeport-timeout-kp2r7"
Jul  3 01:20:39.813: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-9908 exec execpod-affinityc8sdk -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.250.2.183:31239/'
Jul  3 01:20:40.111: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.250.2.183:31239/\n"
Jul  3 01:20:40.111: INFO: stdout: "affinity-nodeport-timeout-4r7vz"
Jul  3 01:20:40.111: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-9908, will wait for the garbage collector to delete the pods
Jul  3 01:20:40.179: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 5.916309ms
Jul  3 01:20:40.280: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 100.994331ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 01:20:42.091: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9908" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":334,"skipped":6258,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:20:42.114: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-multiple-pods-9025
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:348
Jul  3 01:20:42.254: INFO: Waiting up to 1m0s for all nodes to be ready
Jul  3 01:21:42.305: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:21:42.310: INFO: Starting informer...
STEP: Starting pods...
Jul  3 01:21:42.543: INFO: Pod1 is running on shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm. Tainting Node
Jul  3 01:21:44.777: INFO: Pod2 is running on shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
Jul  3 01:21:51.204: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Jul  3 01:22:10.247: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:188
Jul  3 01:22:10.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-9025" for this suite.
•{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":356,"completed":335,"skipped":6268,"failed":0}
S
------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:22:10.276: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2082
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating all guestbook components
Jul  3 01:22:10.410: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Jul  3 01:22:10.410: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2082 create -f -'
Jul  3 01:22:11.359: INFO: stderr: ""
Jul  3 01:22:11.360: INFO: stdout: "service/agnhost-replica created\n"
Jul  3 01:22:11.360: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Jul  3 01:22:11.360: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2082 create -f -'
Jul  3 01:22:11.551: INFO: stderr: ""
Jul  3 01:22:11.551: INFO: stdout: "service/agnhost-primary created\n"
Jul  3 01:22:11.551: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Jul  3 01:22:11.551: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2082 create -f -'
Jul  3 01:22:11.731: INFO: stderr: ""
Jul  3 01:22:11.731: INFO: stdout: "service/frontend created\n"
Jul  3 01:22:11.732: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Jul  3 01:22:11.732: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2082 create -f -'
Jul  3 01:22:11.902: INFO: stderr: ""
Jul  3 01:22:11.902: INFO: stdout: "deployment.apps/frontend created\n"
Jul  3 01:22:11.902: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jul  3 01:22:11.902: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2082 create -f -'
Jul  3 01:22:12.066: INFO: stderr: ""
Jul  3 01:22:12.066: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Jul  3 01:22:12.066: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jul  3 01:22:12.066: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2082 create -f -'
Jul  3 01:22:12.228: INFO: stderr: ""
Jul  3 01:22:12.228: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
Jul  3 01:22:12.228: INFO: Waiting for all frontend pods to be Running.
Jul  3 01:22:17.281: INFO: Waiting for frontend to serve content.
Jul  3 01:22:17.342: INFO: Trying to add a new entry to the guestbook.
Jul  3 01:22:17.395: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources
Jul  3 01:22:17.406: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2082 delete --grace-period=0 --force -f -'
Jul  3 01:22:17.469: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul  3 01:22:17.469: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
Jul  3 01:22:17.469: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2082 delete --grace-period=0 --force -f -'
Jul  3 01:22:17.530: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul  3 01:22:17.530: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Jul  3 01:22:17.530: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2082 delete --grace-period=0 --force -f -'
Jul  3 01:22:17.595: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul  3 01:22:17.595: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Jul  3 01:22:17.595: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2082 delete --grace-period=0 --force -f -'
Jul  3 01:22:17.654: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul  3 01:22:17.654: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Jul  3 01:22:17.655: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2082 delete --grace-period=0 --force -f -'
Jul  3 01:22:17.712: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul  3 01:22:17.712: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Jul  3 01:22:17.712: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=kubectl-2082 delete --grace-period=0 --force -f -'
Jul  3 01:22:17.769: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul  3 01:22:17.769: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul  3 01:22:17.769: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2082" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":356,"completed":336,"skipped":6269,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:22:17.778: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-2224
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-2224
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jul  3 01:22:17.907: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jul  3 01:22:17.938: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:22:19.942: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 01:22:21.945: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 01:22:23.943: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 01:22:25.942: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 01:22:27.943: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul  3 01:22:29.943: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jul  3 01:22:29.950: INFO: The status of Pod netserver-1 is Running (Ready = true)
STEP: Creating test pods
Jul  3 01:22:31.992: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
Jul  3 01:22:31.992: INFO: Going to poll 100.64.1.17 on port 8081 at least 0 times, with a maximum of 34 tries before failing
Jul  3 01:22:31.996: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 100.64.1.17 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2224 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:22:31.996: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:22:31.996: INFO: ExecWithOptions: Clientset creation
Jul  3 01:22:31.996: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/pod-network-test-2224/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+100.64.1.17+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jul  3 01:22:33.173: INFO: Found all 1 expected endpoints: [netserver-0]
Jul  3 01:22:33.173: INFO: Going to poll 100.64.0.228 on port 8081 at least 0 times, with a maximum of 34 tries before failing
Jul  3 01:22:33.177: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 100.64.0.228 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2224 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul  3 01:22:33.177: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
Jul  3 01:22:33.177: INFO: ExecWithOptions: Clientset creation
Jul  3 01:22:33.177: INFO: ExecWithOptions: execute(POST https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com/api/v1/namespaces/pod-network-test-2224/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+100.64.0.228+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jul  3 01:22:34.391: INFO: Found all 1 expected endpoints: [netserver-1]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jul  3 01:22:34.391: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-2224" for this suite.
•{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":337,"skipped":6281,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:22:34.404: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4985
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-4985
STEP: creating service affinity-clusterip in namespace services-4985
STEP: creating replication controller affinity-clusterip in namespace services-4985
I0703 01:22:34.547856    4513 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-4985, replica count: 3
I0703 01:22:37.598517    4513 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul  3 01:22:37.605: INFO: Creating new exec pod
Jul  3 01:22:40.624: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-4985 exec execpod-affinityh7klq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Jul  3 01:22:40.882: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Jul  3 01:22:40.882: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 01:22:40.882: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-4985 exec execpod-affinityh7klq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.108.232.42 80'
Jul  3 01:22:41.121: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.108.232.42 80\nConnection to 100.108.232.42 80 port [tcp/http] succeeded!\n"
Jul  3 01:22:41.121: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul  3 01:22:41.121: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-4985 exec execpod-affinityh7klq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://100.108.232.42:80/ ; done'
Jul  3 01:22:41.474: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://100.108.232.42:80/\n"
Jul  3 01:22:41.474: INFO: stdout: "\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh\naffinity-clusterip-cv5gh"
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Received response from host: affinity-clusterip-cv5gh
Jul  3 01:22:41.474: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-4985, will wait for the garbage collector to delete the pods
Jul  3 01:22:41.546: INFO: Deleting ReplicationController affinity-clusterip took: 5.744078ms
Jul  3 01:22:41.646: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.370209ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 01:22:43.457: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4985" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":338,"skipped":6319,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:22:43.467: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-9296
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-fwb9
STEP: Creating a pod to test atomic-volume-subpath
Jul  3 01:22:43.614: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-fwb9" in namespace "subpath-9296" to be "Succeeded or Failed"
Jul  3 01:22:43.619: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.428429ms
Jul  3 01:22:45.624: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Running", Reason="", readiness=true. Elapsed: 2.010019853s
Jul  3 01:22:47.629: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Running", Reason="", readiness=true. Elapsed: 4.014698181s
Jul  3 01:22:49.634: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Running", Reason="", readiness=true. Elapsed: 6.019453971s
Jul  3 01:22:51.638: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Running", Reason="", readiness=true. Elapsed: 8.023834822s
Jul  3 01:22:53.644: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Running", Reason="", readiness=true. Elapsed: 10.029753662s
Jul  3 01:22:55.648: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Running", Reason="", readiness=true. Elapsed: 12.034245389s
Jul  3 01:22:57.653: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Running", Reason="", readiness=true. Elapsed: 14.039010409s
Jul  3 01:22:59.659: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Running", Reason="", readiness=true. Elapsed: 16.044848876s
Jul  3 01:23:01.664: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Running", Reason="", readiness=true. Elapsed: 18.049442349s
Jul  3 01:23:03.668: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Running", Reason="", readiness=true. Elapsed: 20.054363419s
Jul  3 01:23:05.674: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Running", Reason="", readiness=false. Elapsed: 22.059586195s
Jul  3 01:23:07.679: INFO: Pod "pod-subpath-test-configmap-fwb9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.064802807s
STEP: Saw pod success
Jul  3 01:23:07.679: INFO: Pod "pod-subpath-test-configmap-fwb9" satisfied condition "Succeeded or Failed"
Jul  3 01:23:07.682: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-subpath-test-configmap-fwb9 container test-container-subpath-configmap-fwb9: <nil>
STEP: delete the pod
Jul  3 01:23:07.698: INFO: Waiting for pod pod-subpath-test-configmap-fwb9 to disappear
Jul  3 01:23:07.701: INFO: Pod pod-subpath-test-configmap-fwb9 no longer exists
STEP: Deleting pod pod-subpath-test-configmap-fwb9
Jul  3 01:23:07.701: INFO: Deleting pod "pod-subpath-test-configmap-fwb9" in namespace "subpath-9296"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jul  3 01:23:07.705: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-9296" for this suite.
•{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]","total":356,"completed":339,"skipped":6337,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:23:07.714: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-910
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:23:07.856: INFO: The status of Pod test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:23:09.860: INFO: The status of Pod test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 is Running (Ready = false)
Jul  3 01:23:11.861: INFO: The status of Pod test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 is Running (Ready = false)
Jul  3 01:23:13.861: INFO: The status of Pod test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 is Running (Ready = false)
Jul  3 01:23:15.861: INFO: The status of Pod test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 is Running (Ready = false)
Jul  3 01:23:17.862: INFO: The status of Pod test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 is Running (Ready = false)
Jul  3 01:23:19.860: INFO: The status of Pod test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 is Running (Ready = false)
Jul  3 01:23:21.861: INFO: The status of Pod test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 is Running (Ready = false)
Jul  3 01:23:23.862: INFO: The status of Pod test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 is Running (Ready = false)
Jul  3 01:23:25.860: INFO: The status of Pod test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 is Running (Ready = false)
Jul  3 01:23:27.860: INFO: The status of Pod test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 is Running (Ready = false)
Jul  3 01:23:29.861: INFO: The status of Pod test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 is Running (Ready = true)
Jul  3 01:23:29.865: INFO: Container started at 2022-07-03 01:23:08 +0000 UTC, pod became ready at 2022-07-03 01:23:28 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul  3 01:23:29.865: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-910" for this suite.
•{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":356,"completed":340,"skipped":6359,"failed":0}
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:23:29.874: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-5032
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jul  3 01:23:30.003: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jul  3 01:23:30.011: INFO: Waiting for terminating namespaces to be deleted...
Jul  3 01:23:30.014: INFO: 
Logging pods the apiserver thinks is on node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm before test
Jul  3 01:23:30.023: INFO: test-webserver-0a4311ee-d282-4744-a10f-e089925b2841 from container-probe-910 started at 2022-07-03 01:23:07 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.023: INFO: 	Container test-webserver ready: true, restart count 0
Jul  3 01:23:30.023: INFO: apiserver-proxy-kjgqw from kube-system started at 2022-07-02 23:50:00 +0000 UTC (2 container statuses recorded)
Jul  3 01:23:30.023: INFO: 	Container proxy ready: true, restart count 0
Jul  3 01:23:30.023: INFO: 	Container sidecar ready: true, restart count 0
Jul  3 01:23:30.023: INFO: blackbox-exporter-559b7f4b59-wjtp7 from kube-system started at 2022-07-03 00:28:06 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.023: INFO: 	Container blackbox-exporter ready: true, restart count 0
Jul  3 01:23:30.023: INFO: calico-kube-controllers-6959b48bb7-h9nqq from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.023: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Jul  3 01:23:30.023: INFO: calico-node-lrbdv from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.023: INFO: 	Container calico-node ready: true, restart count 0
Jul  3 01:23:30.023: INFO: csi-driver-node-d66gz from kube-system started at 2022-07-02 23:50:00 +0000 UTC (3 container statuses recorded)
Jul  3 01:23:30.023: INFO: 	Container csi-driver ready: true, restart count 0
Jul  3 01:23:30.023: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Jul  3 01:23:30.023: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Jul  3 01:23:30.023: INFO: egress-filter-applier-hh2tw from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.023: INFO: 	Container egress-filter-applier ready: true, restart count 0
Jul  3 01:23:30.023: INFO: kube-proxy-worker-1-v1.24.2-2xlkb from kube-system started at 2022-07-03 00:07:07 +0000 UTC (2 container statuses recorded)
Jul  3 01:23:30.023: INFO: 	Container conntrack-fix ready: true, restart count 0
Jul  3 01:23:30.023: INFO: 	Container kube-proxy ready: true, restart count 0
Jul  3 01:23:30.023: INFO: node-exporter-sxs7w from kube-system started at 2022-07-02 23:50:00 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.023: INFO: 	Container node-exporter ready: true, restart count 0
Jul  3 01:23:30.023: INFO: node-problem-detector-jrk7n from kube-system started at 2022-07-03 00:17:07 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.023: INFO: 	Container node-problem-detector ready: true, restart count 0
Jul  3 01:23:30.023: INFO: 
Logging pods the apiserver thinks is on node shoot--it--tmffe-jrp-worker-1-z1-6f695-h5s9b before test
Jul  3 01:23:30.034: INFO: addons-nginx-ingress-controller-7c48bb6fc9-cbwld from kube-system started at 2022-07-03 01:21:44 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container nginx-ingress-controller ready: true, restart count 0
Jul  3 01:23:30.034: INFO: addons-nginx-ingress-nginx-ingress-k8s-backend-b6c66fdff-dl2h7 from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container nginx-ingress-nginx-ingress-k8s-backend ready: true, restart count 0
Jul  3 01:23:30.034: INFO: apiserver-proxy-mgzwv from kube-system started at 2022-07-02 23:49:52 +0000 UTC (2 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container proxy ready: true, restart count 0
Jul  3 01:23:30.034: INFO: 	Container sidecar ready: true, restart count 0
Jul  3 01:23:30.034: INFO: blackbox-exporter-559b7f4b59-gbx7j from kube-system started at 2022-07-03 00:29:06 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container blackbox-exporter ready: true, restart count 0
Jul  3 01:23:30.034: INFO: calico-node-dvrpl from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container calico-node ready: true, restart count 0
Jul  3 01:23:30.034: INFO: calico-node-vertical-autoscaler-5b74b8f994-4v6kp from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container autoscaler ready: true, restart count 0
Jul  3 01:23:30.034: INFO: calico-typha-deploy-7f646d87dc-5lzhs from kube-system started at 2022-07-02 23:51:00 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container calico-typha ready: true, restart count 0
Jul  3 01:23:30.034: INFO: calico-typha-horizontal-autoscaler-55ff99f5cf-tnn7q from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container autoscaler ready: true, restart count 0
Jul  3 01:23:30.034: INFO: calico-typha-vertical-autoscaler-78b946fc85-9vzmk from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container autoscaler ready: true, restart count 0
Jul  3 01:23:30.034: INFO: coredns-7f6bdd8558-68vlm from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container coredns ready: true, restart count 0
Jul  3 01:23:30.034: INFO: coredns-7f6bdd8558-p4gr6 from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container coredns ready: true, restart count 0
Jul  3 01:23:30.034: INFO: csi-driver-node-w722v from kube-system started at 2022-07-02 23:49:52 +0000 UTC (3 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container csi-driver ready: true, restart count 0
Jul  3 01:23:30.034: INFO: 	Container csi-liveness-probe ready: true, restart count 0
Jul  3 01:23:30.034: INFO: 	Container csi-node-driver-registrar ready: true, restart count 0
Jul  3 01:23:30.034: INFO: egress-filter-applier-6m5b7 from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container egress-filter-applier ready: true, restart count 0
Jul  3 01:23:30.034: INFO: kube-proxy-worker-1-v1.24.2-msvh8 from kube-system started at 2022-07-03 00:07:07 +0000 UTC (2 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container conntrack-fix ready: true, restart count 0
Jul  3 01:23:30.034: INFO: 	Container kube-proxy ready: true, restart count 0
Jul  3 01:23:30.034: INFO: metrics-server-6654459fc6-4f92g from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container metrics-server ready: true, restart count 0
Jul  3 01:23:30.034: INFO: node-exporter-f95js from kube-system started at 2022-07-02 23:49:52 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container node-exporter ready: true, restart count 0
Jul  3 01:23:30.034: INFO: node-problem-detector-kbbjx from kube-system started at 2022-07-03 00:17:07 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container node-problem-detector ready: true, restart count 0
Jul  3 01:23:30.034: INFO: vpn-shoot-7788586576-q5cf7 from kube-system started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container vpn-shoot ready: true, restart count 0
Jul  3 01:23:30.034: INFO: dashboard-metrics-scraper-9c4f98cd5-cwln9 from kubernetes-dashboard started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Jul  3 01:23:30.034: INFO: kubernetes-dashboard-789c777b5c-8wjzk from kubernetes-dashboard started at 2022-07-02 23:50:18 +0000 UTC (1 container statuses recorded)
Jul  3 01:23:30.034: INFO: 	Container kubernetes-dashboard ready: true, restart count 4
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-89ab1a64-5f7c-49e7-9e9c-ab871db2bb6a 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.250.2.183 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-89ab1a64-5f7c-49e7-9e9c-ab871db2bb6a off the node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm
STEP: verifying the node doesn't have the label kubernetes.io/e2e-89ab1a64-5f7c-49e7-9e9c-ab871db2bb6a
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jul  3 01:28:34.135: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-5032" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

• [SLOW TEST:304.268 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":356,"completed":341,"skipped":6364,"failed":0}
S
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:28:34.143: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7430
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jul  3 01:28:34.307: INFO: The status of Pod labelsupdate1da77017-8976-47c8-be4c-abb3d06534bc is Pending, waiting for it to be Running (with Ready = true)
Jul  3 01:28:36.313: INFO: The status of Pod labelsupdate1da77017-8976-47c8-be4c-abb3d06534bc is Running (Ready = true)
Jul  3 01:28:36.842: INFO: Successfully updated pod "labelsupdate1da77017-8976-47c8-be4c-abb3d06534bc"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul  3 01:28:40.870: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7430" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":342,"skipped":6365,"failed":0}
SSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:28:40.880: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7427
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-fb1711dc-d7ae-46aa-b25c-7a13d11de370
STEP: Creating a pod to test consume secrets
Jul  3 01:28:41.026: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-7d0a69c4-3501-4a2b-8949-86f39b798481" in namespace "projected-7427" to be "Succeeded or Failed"
Jul  3 01:28:41.030: INFO: Pod "pod-projected-secrets-7d0a69c4-3501-4a2b-8949-86f39b798481": Phase="Pending", Reason="", readiness=false. Elapsed: 3.456516ms
Jul  3 01:28:43.034: INFO: Pod "pod-projected-secrets-7d0a69c4-3501-4a2b-8949-86f39b798481": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007660455s
Jul  3 01:28:45.040: INFO: Pod "pod-projected-secrets-7d0a69c4-3501-4a2b-8949-86f39b798481": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013385682s
STEP: Saw pod success
Jul  3 01:28:45.040: INFO: Pod "pod-projected-secrets-7d0a69c4-3501-4a2b-8949-86f39b798481" satisfied condition "Succeeded or Failed"
Jul  3 01:28:45.043: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-projected-secrets-7d0a69c4-3501-4a2b-8949-86f39b798481 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jul  3 01:28:45.058: INFO: Waiting for pod pod-projected-secrets-7d0a69c4-3501-4a2b-8949-86f39b798481 to disappear
Jul  3 01:28:45.061: INFO: Pod pod-projected-secrets-7d0a69c4-3501-4a2b-8949-86f39b798481 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul  3 01:28:45.061: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7427" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":343,"skipped":6371,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:28:45.070: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-8572
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:28:45.209: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-a85874d9-adc4-4cab-8193-6d17d23a0157" in namespace "security-context-test-8572" to be "Succeeded or Failed"
Jul  3 01:28:45.212: INFO: Pod "alpine-nnp-false-a85874d9-adc4-4cab-8193-6d17d23a0157": Phase="Pending", Reason="", readiness=false. Elapsed: 3.194558ms
Jul  3 01:28:47.217: INFO: Pod "alpine-nnp-false-a85874d9-adc4-4cab-8193-6d17d23a0157": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00820499s
Jul  3 01:28:49.222: INFO: Pod "alpine-nnp-false-a85874d9-adc4-4cab-8193-6d17d23a0157": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012906607s
Jul  3 01:28:49.222: INFO: Pod "alpine-nnp-false-a85874d9-adc4-4cab-8193-6d17d23a0157" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jul  3 01:28:49.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-8572" for this suite.
•{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":344,"skipped":6388,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:28:49.241: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-3558
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul  3 01:29:05.453: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-3558" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":356,"completed":345,"skipped":6409,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:29:05.463: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2331
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Jul  3 01:29:07.632: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jul  3 01:29:09.640: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2331" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":356,"completed":346,"skipped":6423,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:29:09.650: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8639
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Jul  3 01:29:09.788: INFO: Waiting up to 5m0s for pod "pod-979c5382-67d3-440c-b222-900b411699a3" in namespace "emptydir-8639" to be "Succeeded or Failed"
Jul  3 01:29:09.793: INFO: Pod "pod-979c5382-67d3-440c-b222-900b411699a3": Phase="Pending", Reason="", readiness=false. Elapsed: 5.238813ms
Jul  3 01:29:11.798: INFO: Pod "pod-979c5382-67d3-440c-b222-900b411699a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009786071s
Jul  3 01:29:13.803: INFO: Pod "pod-979c5382-67d3-440c-b222-900b411699a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014833675s
STEP: Saw pod success
Jul  3 01:29:13.803: INFO: Pod "pod-979c5382-67d3-440c-b222-900b411699a3" satisfied condition "Succeeded or Failed"
Jul  3 01:29:13.807: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-979c5382-67d3-440c-b222-900b411699a3 container test-container: <nil>
STEP: delete the pod
Jul  3 01:29:13.824: INFO: Waiting for pod pod-979c5382-67d3-440c-b222-900b411699a3 to disappear
Jul  3 01:29:13.827: INFO: Pod pod-979c5382-67d3-440c-b222-900b411699a3 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul  3 01:29:13.827: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8639" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":347,"skipped":6427,"failed":0}
SSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:29:13.836: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-347
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jul  3 01:29:13.974: INFO: Waiting up to 5m0s for pod "downward-api-bf6ed47b-f15c-4854-b2d1-f99943aba99c" in namespace "downward-api-347" to be "Succeeded or Failed"
Jul  3 01:29:13.977: INFO: Pod "downward-api-bf6ed47b-f15c-4854-b2d1-f99943aba99c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.814717ms
Jul  3 01:29:15.981: INFO: Pod "downward-api-bf6ed47b-f15c-4854-b2d1-f99943aba99c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007457872s
Jul  3 01:29:17.986: INFO: Pod "downward-api-bf6ed47b-f15c-4854-b2d1-f99943aba99c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011864148s
STEP: Saw pod success
Jul  3 01:29:17.986: INFO: Pod "downward-api-bf6ed47b-f15c-4854-b2d1-f99943aba99c" satisfied condition "Succeeded or Failed"
Jul  3 01:29:17.989: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downward-api-bf6ed47b-f15c-4854-b2d1-f99943aba99c container dapi-container: <nil>
STEP: delete the pod
Jul  3 01:29:18.004: INFO: Waiting for pod downward-api-bf6ed47b-f15c-4854-b2d1-f99943aba99c to disappear
Jul  3 01:29:18.007: INFO: Pod downward-api-bf6ed47b-f15c-4854-b2d1-f99943aba99c no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jul  3 01:29:18.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-347" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":356,"completed":348,"skipped":6430,"failed":0}
SSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:29:18.016: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-9404
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Jul  3 01:29:22.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-9404" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":349,"skipped":6436,"failed":0}

------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:29:22.193: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6168
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul  3 01:29:24.509: INFO: DNS probes using dns-6168/dns-test-81cec710-8c93-4078-85a3-71c73f60e21e succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul  3 01:29:24.518: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6168" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":356,"completed":350,"skipped":6436,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:29:24.527: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4494
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
Jul  3 01:29:24.656: INFO: Creating simple deployment test-new-deployment
Jul  3 01:29:24.667: INFO: deployment "test-new-deployment" doesn't have the required revision set
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul  3 01:29:26.710: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-4494  acf37654-dd92-45a5-9acb-f129916ed9d8 45483 3 2022-07-03 01:29:24 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2022-07-03 01:29:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 01:29:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0052669f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-07-03 01:29:26 +0000 UTC,LastTransitionTime:2022-07-03 01:29:26 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-55df494869" has successfully progressed.,LastUpdateTime:2022-07-03 01:29:26 +0000 UTC,LastTransitionTime:2022-07-03 01:29:24 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jul  3 01:29:26.718: INFO: New ReplicaSet "test-new-deployment-55df494869" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-55df494869  deployment-4494  3f304e0c-0ef7-444c-adf4-ac24c0b6b00e 45487 2 2022-07-03 01:29:24 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment acf37654-dd92-45a5-9acb-f129916ed9d8 0xc002fad9f7 0xc002fad9f8}] []  [{kube-controller-manager Update apps/v1 2022-07-03 01:29:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"acf37654-dd92-45a5-9acb-f129916ed9d8\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-03 01:29:26 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002fada88 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jul  3 01:29:26.721: INFO: Pod "test-new-deployment-55df494869-gs4zp" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-gs4zp test-new-deployment-55df494869- deployment-4494  030c2af9-132d-46fc-875f-5630b64e42cd 45485 0 2022-07-03 01:29:26 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 3f304e0c-0ef7-444c-adf4-ac24c0b6b00e 0xc003e04f87 0xc003e04f88}] []  [{kube-controller-manager Update v1 2022-07-03 01:29:26 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3f304e0c-0ef7-444c-adf4-ac24c0b6b00e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cwb2t,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cwb2t,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 01:29:26 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul  3 01:29:26.721: INFO: Pod "test-new-deployment-55df494869-z55bf" is available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-z55bf test-new-deployment-55df494869- deployment-4494  38120dab-abee-45f8-8a42-5b72c66510a7 45475 0 2022-07-03 01:29:24 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[cni.projectcalico.org/containerID:92a6e5f91c039f57fa62feff814f5c52cc32ebd94432fd288759c8ec288d6c11 cni.projectcalico.org/podIP:100.64.1.36/32 cni.projectcalico.org/podIPs:100.64.1.36/32 kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 3f304e0c-0ef7-444c-adf4-ac24c0b6b00e 0xc003e05100 0xc003e05101}] []  [{kube-controller-manager Update v1 2022-07-03 01:29:24 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3f304e0c-0ef7-444c-adf4-ac24c0b6b00e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {calico Update v1 2022-07-03 01:29:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}} status} {kubelet Update v1 2022-07-03 01:29:26 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"100.64.1.36\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-svnpt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{EnvVar{Name:KUBERNETES_SERVICE_HOST,Value:api.tmffe-jrp.it.internal.staging.k8s.ondemand.com,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-svnpt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 01:29:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 01:29:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 01:29:26 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-03 01:29:24 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.250.2.183,PodIP:100.64.1.36,StartTime:2022-07-03 01:29:24 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-03 01:29:25 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://6da182a3e14fbc6a2f39146d1295f55b1ef81e7f003407b7a6e4a97ad4243397,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:100.64.1.36,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul  3 01:29:26.721: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4494" for this suite.
•{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":356,"completed":351,"skipped":6479,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:29:26.732: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3105
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jul  3 01:29:26.875: INFO: Waiting up to 5m0s for pod "downward-api-df799ad4-6a1b-412d-bc0f-192de00bca82" in namespace "downward-api-3105" to be "Succeeded or Failed"
Jul  3 01:29:26.883: INFO: Pod "downward-api-df799ad4-6a1b-412d-bc0f-192de00bca82": Phase="Pending", Reason="", readiness=false. Elapsed: 7.747383ms
Jul  3 01:29:28.887: INFO: Pod "downward-api-df799ad4-6a1b-412d-bc0f-192de00bca82": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01230282s
Jul  3 01:29:30.893: INFO: Pod "downward-api-df799ad4-6a1b-412d-bc0f-192de00bca82": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017552786s
STEP: Saw pod success
Jul  3 01:29:30.893: INFO: Pod "downward-api-df799ad4-6a1b-412d-bc0f-192de00bca82" satisfied condition "Succeeded or Failed"
Jul  3 01:29:30.896: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod downward-api-df799ad4-6a1b-412d-bc0f-192de00bca82 container dapi-container: <nil>
STEP: delete the pod
Jul  3 01:29:30.913: INFO: Waiting for pod downward-api-df799ad4-6a1b-412d-bc0f-192de00bca82 to disappear
Jul  3 01:29:30.915: INFO: Pod downward-api-df799ad4-6a1b-412d-bc0f-192de00bca82 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jul  3 01:29:30.915: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3105" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":356,"completed":352,"skipped":6490,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:29:30.924: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6068
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul  3 01:29:31.397: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul  3 01:29:34.418: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul  3 01:29:34.673: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6068" for this suite.
STEP: Destroying namespace "webhook-6068-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":356,"completed":353,"skipped":6509,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:29:34.711: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-9122
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-mv7c
STEP: Creating a pod to test atomic-volume-subpath
Jul  3 01:29:34.855: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-mv7c" in namespace "subpath-9122" to be "Succeeded or Failed"
Jul  3 01:29:34.858: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.650336ms
Jul  3 01:29:36.863: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Running", Reason="", readiness=true. Elapsed: 2.007621506s
Jul  3 01:29:38.867: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Running", Reason="", readiness=true. Elapsed: 4.011664101s
Jul  3 01:29:40.871: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Running", Reason="", readiness=true. Elapsed: 6.015960806s
Jul  3 01:29:42.876: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Running", Reason="", readiness=true. Elapsed: 8.020663214s
Jul  3 01:29:44.880: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Running", Reason="", readiness=true. Elapsed: 10.024873077s
Jul  3 01:29:46.885: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Running", Reason="", readiness=true. Elapsed: 12.029956191s
Jul  3 01:29:48.890: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Running", Reason="", readiness=true. Elapsed: 14.034359193s
Jul  3 01:29:50.895: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Running", Reason="", readiness=true. Elapsed: 16.04001308s
Jul  3 01:29:52.900: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Running", Reason="", readiness=true. Elapsed: 18.044409338s
Jul  3 01:29:54.905: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Running", Reason="", readiness=true. Elapsed: 20.049795145s
Jul  3 01:29:56.910: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Running", Reason="", readiness=false. Elapsed: 22.055226981s
Jul  3 01:29:58.916: INFO: Pod "pod-subpath-test-configmap-mv7c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.060927617s
STEP: Saw pod success
Jul  3 01:29:58.916: INFO: Pod "pod-subpath-test-configmap-mv7c" satisfied condition "Succeeded or Failed"
Jul  3 01:29:58.919: INFO: Trying to get logs from node shoot--it--tmffe-jrp-worker-1-z1-6f695-g2ntm pod pod-subpath-test-configmap-mv7c container test-container-subpath-configmap-mv7c: <nil>
STEP: delete the pod
Jul  3 01:29:58.935: INFO: Waiting for pod pod-subpath-test-configmap-mv7c to disappear
Jul  3 01:29:58.938: INFO: Pod pod-subpath-test-configmap-mv7c no longer exists
STEP: Deleting pod pod-subpath-test-configmap-mv7c
Jul  3 01:29:58.938: INFO: Deleting pod "pod-subpath-test-configmap-mv7c" in namespace "subpath-9122"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jul  3 01:29:58.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-9122" for this suite.
•{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]","total":356,"completed":354,"skipped":6530,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:29:58.950: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3847
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service nodeport-test with type=NodePort in namespace services-3847
STEP: creating replication controller nodeport-test in namespace services-3847
I0703 01:29:59.094612    4513 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-3847, replica count: 2
Jul  3 01:30:02.146: INFO: Creating new exec pod
I0703 01:30:02.146074    4513 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul  3 01:30:05.168: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-3847 exec execpodn5t59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jul  3 01:30:05.417: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jul  3 01:30:05.418: INFO: stdout: "nodeport-test-864m5"
Jul  3 01:30:05.418: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-3847 exec execpodn5t59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.108.129.117 80'
Jul  3 01:30:05.692: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.108.129.117 80\nConnection to 100.108.129.117 80 port [tcp/http] succeeded!\n"
Jul  3 01:30:05.692: INFO: stdout: ""
Jul  3 01:30:06.693: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-3847 exec execpodn5t59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.108.129.117 80'
Jul  3 01:30:06.980: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.108.129.117 80\nConnection to 100.108.129.117 80 port [tcp/http] succeeded!\n"
Jul  3 01:30:06.980: INFO: stdout: ""
Jul  3 01:30:07.693: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-3847 exec execpodn5t59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 100.108.129.117 80'
Jul  3 01:30:07.956: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 100.108.129.117 80\nConnection to 100.108.129.117 80 port [tcp/http] succeeded!\n"
Jul  3 01:30:07.956: INFO: stdout: "nodeport-test-b86cz"
Jul  3 01:30:07.956: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-3847 exec execpodn5t59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.183 31623'
Jul  3 01:30:08.182: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.183 31623\nConnection to 10.250.2.183 31623 port [tcp/*] succeeded!\n"
Jul  3 01:30:08.182: INFO: stdout: "nodeport-test-b86cz"
Jul  3 01:30:08.182: INFO: Running '/go/src/k8s.io/kubernetes/platforms/linux/amd64/kubectl --server=https://api.tmffe-jrp.it.shoot.staging.k8s-hana.ondemand.com --kubeconfig=/tmp/tm/kubeconfig/shoot.config --namespace=services-3847 exec execpodn5t59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.250.2.84 31623'
Jul  3 01:30:08.450: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.250.2.84 31623\nConnection to 10.250.2.84 31623 port [tcp/*] succeeded!\n"
Jul  3 01:30:08.450: INFO: stdout: "nodeport-test-864m5"
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 01:30:08.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3847" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":356,"completed":355,"skipped":6574,"failed":0}
SSSSSSSS
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul  3 01:30:08.461: INFO: >>> kubeConfig: /tmp/tm/kubeconfig/shoot.config
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1731
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul  3 01:30:08.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1731" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":356,"completed":356,"skipped":6582,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSJul  3 01:30:08.646: INFO: Running AfterSuite actions on all nodes
Jul  3 01:30:08.646: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func19.2
Jul  3 01:30:08.646: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func9.2
Jul  3 01:30:08.646: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
Jul  3 01:30:08.646: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
Jul  3 01:30:08.646: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
Jul  3 01:30:08.646: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
Jul  3 01:30:08.646: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
Jul  3 01:30:08.646: INFO: Running AfterSuite actions on node 1
Jul  3 01:30:08.646: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/e2e/artifacts/1656806357/junit_01.xml
{"msg":"Test Suite completed","total":356,"completed":356,"skipped":6615,"failed":0}

Ran 356 of 6971 Specs in 5447.794 seconds
SUCCESS! -- 356 Passed | 0 Failed | 0 Flaked | 0 Pending | 6615 Skipped
PASS

Ginkgo ran 1 suite in 1h30m50.39417419s
Test Suite Passed
